{"version":3,"sources":["../../../shared/src/authorization.ts","../../../shared/src/telemetry/events/method-called.ts","../../../shared/src/organization.ts","../../../shared/src/utils/noop.ts","../../../shared/src/utils/createDeferredPromise.ts","../../../shared/src/authorization-errors.ts","../../../../node_modules/.pnpm/swr@2.2.5_react@18.3.1/node_modules/swr/dist/core/index.mjs","../../../../node_modules/.pnpm/swr@2.2.5_react@18.3.1/node_modules/swr/dist/_internal/index.mjs","../../../../node_modules/.pnpm/swr@2.2.5_react@18.3.1/node_modules/swr/dist/infinite/index.mjs","../../../../node_modules/.pnpm/dequal@2.0.3/node_modules/dequal/dist/index.mjs","../../../shared/src/react/hooks/createContextAndHook.ts","../../../shared/src/react/clerk-swr.ts","../../../shared/src/react/contexts.tsx","../../../shared/src/react/hooks/usePagesOrInfinite.ts","../../../shared/src/react/hooks/useOrganization.tsx","../../../shared/src/react/hooks/useOrganizationList.tsx","../../../shared/src/react/hooks/useSafeLayoutEffect.tsx","../../../shared/src/react/hooks/useSession.ts","../../../shared/src/react/hooks/useSessionList.ts","../../../shared/src/react/hooks/useUser.ts","../../../shared/src/react/hooks/useClerk.ts","../../../shared/src/react/hooks/useDeepEqualMemo.ts","../../../shared/src/react/hooks/useReverification.ts","../../../shared/src/utils/runtimeEnvironment.ts","../../../shared/src/deprecated.ts","../../../react/src/errors/errorThrower.ts","../../../react/src/contexts/AuthContext.ts","../../../react/src/contexts/IsomorphicClerkContext.tsx","../../../react/src/errors/messages.ts","../../../react/src/hooks/useAssertWrappedByClerkProvider.ts","../../../react/src/hooks/utils.ts","../../../react/src/hooks/useAuth.ts","../../../react/src/hooks/useEmailLink.ts","../../../react/src/hooks/useSignIn.ts","../../../react/src/hooks/useSignUp.ts","../../../react/src/components/withClerk.tsx","../../../react/src/components/controlComponents.tsx","../../../react/dist/chunk-OANWQR3B.mjs","../../../shared/src/loadClerkJsScript.ts","../../../shared/src/utils/logErrorInDevMode.ts","../../../shared/src/utils/handleValueOrFn.ts","../../../shared/src/object.ts","../../../shared/src/deriveState.ts","../../../shared/src/browser.ts","../../../react/src/polyfills.ts","../../../react/src/utils/childrenUtils.tsx","../../../react/src/utils/isConstructor.ts","../../../react/src/utils/useMaxAllowedInstancesGuard.tsx","../../../react/src/utils/useCustomElementPortal.tsx","../../../react/src/utils/componentValidation.ts","../../../react/src/utils/useCustomPages.tsx","../../../react/src/utils/useCustomMenuItems.tsx","../../../react/src/utils/useWaitForComponentMount.ts","../../../react/src/components/ClerkHostRenderer.tsx","../../../react/src/components/uiComponents.tsx","../../../react/src/components/SignInButton.tsx","../../../react/src/components/SignUpButton.tsx","../../../react/src/components/SignOutButton.tsx","../../../react/src/components/SignInWithMetamaskButton.tsx","../../../react/src/isomorphicClerk.ts","../../../react/src/contexts/ClerkContextProvider.tsx","../../../react/src/contexts/ClerkProvider.tsx","../../../react/src/index.ts","../../src/react/ClerkProvider.tsx"],"names":["config","SWRConfig","noop","cache","React","mutate","_config","use","middleware","useSWR","ReactExports","compare","useRef","useMemo","cachedData","WITH_DEDUPE","useSWRHandler","useSyncExternalStore","useCallback","useDebugValue","__export","default","_a","_b","undefinedPaginatedResource","useAssertWrappedByClerkProvider","has","useClientContext","eventMethodCalled","__privateGet","__privateAdd","__privateSet","__privateMethod","errorThrower","clerkLoaded","useState","children","logErrorInDevMode","child","props","isReorderItem","isExternalLink","useEffect","createElement","createContext","useContext","_IsomorphicClerk","React13","React14","ClerkProvider"],"mappings":"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","file":"chunk-XZ5DSALJ.js","sourcesContent":["import type {\n  CheckAuthorizationWithCustomPermissions,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n  ReverificationConfig,\n  SessionVerificationLevel,\n  SessionVerificationTypes,\n} from '@clerk/types';\n\ntype TypesToConfig = Record<SessionVerificationTypes, Exclude<ReverificationConfig, SessionVerificationTypes>>;\ntype AuthorizationOptions = {\n  userId: string | null | undefined;\n  orgId: string | null | undefined;\n  orgRole: string | null | undefined;\n  orgPermissions: string[] | null | undefined;\n  factorVerificationAge: [number, number] | null;\n};\n\ntype CheckOrgAuthorization = (\n  params: { role?: OrganizationCustomRoleKey; permission?: OrganizationCustomPermissionKey },\n  { orgId, orgRole, orgPermissions }: AuthorizationOptions,\n) => boolean | null;\n\ntype CheckReverificationAuthorization = (\n  params: {\n    reverification?: ReverificationConfig;\n  },\n  { factorVerificationAge }: AuthorizationOptions,\n) => boolean | null;\n\nconst TYPES_TO_OBJECTS: TypesToConfig = {\n  strict_mfa: {\n    afterMinutes: 10,\n    level: 'multi_factor',\n  },\n  strict: {\n    afterMinutes: 10,\n    level: 'second_factor',\n  },\n  moderate: {\n    afterMinutes: 60,\n    level: 'second_factor',\n  },\n  lax: {\n    afterMinutes: 1_440,\n    level: 'second_factor',\n  },\n};\n\nconst ALLOWED_LEVELS = new Set<SessionVerificationLevel>(['first_factor', 'second_factor', 'multi_factor']);\n\nconst ALLOWED_TYPES = new Set<SessionVerificationTypes>(['strict_mfa', 'strict', 'moderate', 'lax']);\n\n// Helper functions\nconst isValidMaxAge = (maxAge: any) => typeof maxAge === 'number' && maxAge > 0;\nconst isValidLevel = (level: any) => ALLOWED_LEVELS.has(level);\nconst isValidVerificationType = (type: any) => ALLOWED_TYPES.has(type);\n\n/**\n * Checks if a user has the required organization-level authorization.\n * Verifies if the user has the specified role or permission within their organization.\n * @returns null, if unable to determine due to missing data or unspecified role/permission.\n */\nconst checkOrgAuthorization: CheckOrgAuthorization = (params, options) => {\n  const { orgId, orgRole, orgPermissions } = options;\n  if (!params.role && !params.permission) {\n    return null;\n  }\n  if (!orgId || !orgRole || !orgPermissions) {\n    return null;\n  }\n\n  if (params.permission) {\n    return orgPermissions.includes(params.permission);\n  }\n  if (params.role) {\n    return orgRole === params.role;\n  }\n  return null;\n};\n\nconst validateReverificationConfig = (config: ReverificationConfig | undefined | null) => {\n  if (!config) {\n    return false;\n  }\n\n  const convertConfigToObject = (config: ReverificationConfig) => {\n    if (typeof config === 'string') {\n      return TYPES_TO_OBJECTS[config];\n    }\n    return config;\n  };\n\n  const isValidStringValue = typeof config === 'string' && isValidVerificationType(config);\n  const isValidObjectValue =\n    typeof config === 'object' && isValidLevel(config.level) && isValidMaxAge(config.afterMinutes);\n\n  if (isValidStringValue || isValidObjectValue) {\n    return convertConfigToObject.bind(null, config);\n  }\n\n  return false;\n};\n\n/**\n * Evaluates if the user meets re-verification authentication requirements.\n * Compares the user's factor verification ages against the specified maxAge.\n * Handles different verification levels (first factor, second factor, multi-factor).\n * @returns null, if requirements or verification data are missing.\n */\nconst checkReverificationAuthorization: CheckReverificationAuthorization = (params, { factorVerificationAge }) => {\n  if (!params.reverification || !factorVerificationAge) {\n    return null;\n  }\n\n  const isValidReverification = validateReverificationConfig(params.reverification);\n  if (!isValidReverification) {\n    return null;\n  }\n\n  const { level, afterMinutes } = isValidReverification();\n  const [factor1Age, factor2Age] = factorVerificationAge;\n\n  // -1 indicates the factor group (1fa,2fa) is not enabled\n  // -1 for 1fa is not a valid scenario, but we need to make sure we handle it properly\n  const isValidFactor1 = factor1Age !== -1 ? afterMinutes > factor1Age : null;\n  const isValidFactor2 = factor2Age !== -1 ? afterMinutes > factor2Age : null;\n\n  switch (level) {\n    case 'first_factor':\n      return isValidFactor1;\n    case 'second_factor':\n      return factor2Age !== -1 ? isValidFactor2 : isValidFactor1;\n    case 'multi_factor':\n      return factor2Age === -1 ? isValidFactor1 : isValidFactor1 && isValidFactor2;\n  }\n};\n\n/**\n * Creates a function for comprehensive user authorization checks.\n * Combines organization-level and reverification authentication checks.\n * The returned function authorizes if both checks pass, or if at least one passes\n * when the other is indeterminate. Fails if userId is missing.\n */\nconst createCheckAuthorization = (options: AuthorizationOptions): CheckAuthorizationWithCustomPermissions => {\n  return (params): boolean => {\n    if (!options.userId) {\n      return false;\n    }\n\n    const orgAuthorization = checkOrgAuthorization(params, options);\n    const reverificationAuthorization = checkReverificationAuthorization(params, options);\n\n    if ([orgAuthorization, reverificationAuthorization].some(a => a === null)) {\n      return [orgAuthorization, reverificationAuthorization].some(a => a === true);\n    }\n\n    return [orgAuthorization, reverificationAuthorization].every(a => a === true);\n  };\n};\n\nexport { createCheckAuthorization, validateReverificationConfig };\n","import type { TelemetryEventRaw } from '@clerk/types';\n\nconst EVENT_METHOD_CALLED = 'METHOD_CALLED';\n\ntype EventMethodCalled = {\n  method: string;\n} & Record<string, string | number | boolean>;\n\n/**\n * Fired when a helper method is called from a Clerk SDK.\n */\nexport function eventMethodCalled(\n  method: string,\n  payload?: Record<string, unknown>,\n): TelemetryEventRaw<EventMethodCalled> {\n  return {\n    event: EVENT_METHOD_CALLED,\n    payload: {\n      method,\n      ...payload,\n    },\n  };\n}\n","import type { OrganizationMembershipResource } from '@clerk/types';\n\n/**\n * Finds the organization membership for a given organization ID from a list of memberships\n * @param organizationMemberships - Array of organization memberships to search through\n * @param organizationId - ID of the organization to find the membership for\n * @returns The matching organization membership or undefined if not found\n */\nexport function getCurrentOrganizationMembership(\n  organizationMemberships: OrganizationMembershipResource[],\n  organizationId: string,\n) {\n  return organizationMemberships.find(\n    organizationMembership => organizationMembership.organization.id === organizationId,\n  );\n}\n","export const noop = (..._args: any[]): void => {\n  // do nothing.\n};\n","import { noop } from './noop';\n\ntype Callback = (val?: any) => void;\n\n/**\n * Create a promise that can be resolved or rejected from\n * outside the Promise constructor callback\n */\nexport const createDeferredPromise = () => {\n  let resolve: Callback = noop;\n  let reject: Callback = noop;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve, reject };\n};\n","import type { ReverificationConfig } from '@clerk/types';\n\ntype ClerkError<T> = {\n  clerk_error: T;\n};\n\nconst REVERIFICATION_REASON = 'reverification-error';\n\ntype ReverificationError<M extends { metadata?: any } = { metadata: unknown }> = ClerkError<\n  {\n    type: 'forbidden';\n    reason: typeof REVERIFICATION_REASON;\n  } & M\n>;\n\nconst reverificationError = <MC extends ReverificationConfig>(\n  missingConfig?: MC,\n): ReverificationError<{\n  metadata?: {\n    reverification?: MC;\n  };\n}> => ({\n  clerk_error: {\n    type: 'forbidden',\n    reason: REVERIFICATION_REASON,\n    metadata: {\n      reverification: missingConfig,\n    },\n  },\n});\n\nconst reverificationErrorResponse = (...args: Parameters<typeof reverificationError>) =>\n  new Response(JSON.stringify(reverificationError(...args)), {\n    status: 403,\n  });\n\nconst isReverificationHint = (result: any): result is ReturnType<typeof reverificationError> => {\n  return (\n    result &&\n    typeof result === 'object' &&\n    'clerk_error' in result &&\n    result.clerk_error?.type === 'forbidden' &&\n    result.clerk_error?.reason === REVERIFICATION_REASON\n  );\n};\n\nexport { reverificationError, reverificationErrorResponse, isReverificationHint };\n","import 'client-only';\nimport ReactExports, { useRef, useMemo, useCallback, useDebugValue } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim/index.js';\nimport { serialize, OBJECT, SWRConfig as SWRConfig$1, defaultConfig, withArgs, SWRGlobalState, createCacheHelper, isUndefined, getTimestamp, UNDEFINED, isFunction, revalidateEvents, internalMutate, useIsomorphicLayoutEffect, subscribeCallback, IS_SERVER, rAF, IS_REACT_LEGACY, mergeObjects } from 'swr/_internal';\nexport { mutate, preload, useSWRConfig } from 'swr/_internal';\n\nconst unstable_serialize = (key)=>serialize(key)[0];\n\n/// <reference types=\"react/experimental\" />\nconst use = ReactExports.use || ((promise)=>{\n    if (promise.status === 'pending') {\n        throw promise;\n    } else if (promise.status === 'fulfilled') {\n        return promise.value;\n    } else if (promise.status === 'rejected') {\n        throw promise.reason;\n    } else {\n        promise.status = 'pending';\n        promise.then((v)=>{\n            promise.status = 'fulfilled';\n            promise.value = v;\n        }, (e)=>{\n            promise.status = 'rejected';\n            promise.reason = e;\n        });\n        throw promise;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache, compare, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = serialize(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = useRef(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = useRef(false);\n    // Refs to keep the key and config.\n    const keyRef = useRef(key);\n    const fetcherRef = useRef(fetcher);\n    const configRef = useRef(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = createCacheHelper(cache, key);\n    const stateDependencies = useRef({}).current;\n    const fallback = isUndefined(fallbackData) ? config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!isUndefined(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = useMemo(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!isUndefined(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            if (!isUndefined(revalidateIfStale)) return revalidateIfStale;\n            return true;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = mergeObjects(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = useSyncExternalStore(useCallback((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = isUndefined(cachedData) ? fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = useRef(data);\n    const returnedData = keepPreviousData ? isUndefined(cachedData) ? laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !isUndefined(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !isUndefined(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return isUndefined(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return isUndefined(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = isUndefined(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = isUndefined(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = useCallback(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (IS_REACT_LEGACY) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if (isUndefined(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && isUndefined(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    getTimestamp()\n                ];\n            }\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = UNDEFINED;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!isUndefined(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || isFunction(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](revalidateEvents.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    const boundMutate = useCallback(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return internalMutate(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    useIsomorphicLayoutEffect(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!isUndefined(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    useIsomorphicLayoutEffect(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(UNDEFINED, WITH_DEDUPE);\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        let nextFocusRevalidatedAt = 0;\n        const onRevalidate = (type, opts = {})=>{\n            if (type == revalidateEvents.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == revalidateEvents.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == revalidateEvents.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == revalidateEvents.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = subscribeCallback(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            if (isUndefined(data) || IS_SERVER) {\n                // Revalidate immediately.\n                softRevalidate();\n            } else {\n                // Delay the revalidate if we have data to return so we won't block\n                // rendering.\n                rAF(softRevalidate);\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    useIsomorphicLayoutEffect(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = isFunction(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    useDebugValue(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense && isUndefined(data) && key) {\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any initial data. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!IS_REACT_LEGACY && IS_SERVER) {\n            throw new Error('Fallback data is required when using suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        unmountedRef.current = false;\n        const req = PRELOAD[key];\n        if (!isUndefined(req)) {\n            const promise = boundMutate(req);\n            use(promise);\n        }\n        if (isUndefined(error)) {\n            const promise = revalidate(WITH_DEDUPE);\n            if (!isUndefined(returnedData)) {\n                promise.status = 'fulfilled';\n                promise.value = true;\n            }\n            use(promise);\n        } else {\n            throw error;\n        }\n    }\n    return {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n};\nconst SWRConfig = OBJECT.defineProperty(SWRConfig$1, 'defaultValue', {\n    value: defaultConfig\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error, isLoading } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (isLoading) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = withArgs(useSWRHandler);\n\nexport { SWRConfig, useSWR as default, unstable_serialize };\n","import React, { useEffect, useLayoutEffect, createContext, useContext, useMemo, useRef, createElement } from 'react';\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\nconst mergeObjects = (a, b)=>({\n        ...a,\n        ...b\n    });\nconst isPromiseLike = (x)=>isFunction(x.then);\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const constructor = arg && arg.constructor;\n    const isDate = constructor == Date;\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && constructor != RegExp) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (constructor == Array) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (constructor == OBJECT) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\n// Global state used to deduplicate requests and store listeners\nconst SWRGlobalState = new WeakMap();\n\nconst EMPTY_CACHE = {};\nconst INITIAL_CACHE = {};\nconst STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nconst isWindowDefined = typeof window != STR_UNDEFINED;\nconst isDocumentDefined = typeof document != STR_UNDEFINED;\nconst hasRequestAnimationFrame = ()=>isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\nconst createCacheHelper = (cache, key)=>{\n    const state = SWRGlobalState.get(cache);\n    return [\n        // Getter\n        ()=>!isUndefined(key) && cache.get(key) || EMPTY_CACHE,\n        // Setter\n        (info)=>{\n            if (!isUndefined(key)) {\n                const prev = cache.get(key);\n                // Before writing to the store, we keep the value in the initial cache\n                // if it's not there yet.\n                if (!(key in INITIAL_CACHE)) {\n                    INITIAL_CACHE[key] = prev;\n                }\n                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n            }\n        },\n        // Subscriber\n        state[6],\n        // Get server cache snapshot\n        ()=>{\n            if (!isUndefined(key)) {\n                // If the cache was updated on the client, we return the stored initial value.\n                if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n            }\n            // If we haven't done any client-side updates, we return the current value.\n            return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n        }\n    ];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */ let online = true;\nconst isOnline = ()=>online;\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [\n    window.addEventListener.bind(window),\n    window.removeEventListener.bind(window)\n] : [\n    noop,\n    noop\n];\nconst isVisible = ()=>{\n    const visibilityState = isDocumentDefined && document.visibilityState;\n    return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nconst initFocus = (callback)=>{\n    // focus revalidate\n    if (isDocumentDefined) {\n        document.addEventListener('visibilitychange', callback);\n    }\n    onWindowEvent('focus', callback);\n    return ()=>{\n        if (isDocumentDefined) {\n            document.removeEventListener('visibilitychange', callback);\n        }\n        offWindowEvent('focus', callback);\n    };\n};\nconst initReconnect = (callback)=>{\n    // revalidate on reconnected\n    const onOnline = ()=>{\n        online = true;\n        callback();\n    };\n    // nothing to revalidate, just update the status\n    const onOffline = ()=>{\n        online = false;\n    };\n    onWindowEvent('online', onOnline);\n    onWindowEvent('offline', onOffline);\n    return ()=>{\n        offWindowEvent('online', onOnline);\n        offWindowEvent('offline', onOffline);\n    };\n};\nconst preset = {\n    isOnline,\n    isVisible\n};\nconst defaultConfigOptions = {\n    initFocus,\n    initReconnect\n};\n\nconst IS_REACT_LEGACY = !React.useId;\nconst IS_SERVER = !isWindowDefined || 'Deno' in window;\n// Polyfill requestAnimationFrame\nconst rAF = (f)=>hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nconst slowConnection = !IS_SERVER && navigatorConnection && ([\n    'slow-2g',\n    '2g'\n].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\n// Global timestamp.\nlet __timestamp = 0;\nconst getTimestamp = ()=>++__timestamp;\n\nconst FOCUS_EVENT = 0;\nconst RECONNECT_EVENT = 1;\nconst MUTATE_EVENT = 2;\nconst ERROR_REVALIDATE_EVENT = 3;\n\nvar events = {\n  __proto__: null,\n  ERROR_REVALIDATE_EVENT: ERROR_REVALIDATE_EVENT,\n  FOCUS_EVENT: FOCUS_EVENT,\n  MUTATE_EVENT: MUTATE_EVENT,\n  RECONNECT_EVENT: RECONNECT_EVENT\n};\n\nasync function internalMutate(...args) {\n    const [cache, _key, _data, _opts] = args;\n    // When passing as a boolean, it's explicitly used to disable/enable\n    // revalidation.\n    const options = mergeObjects({\n        populateCache: true,\n        throwOnError: true\n    }, typeof _opts === 'boolean' ? {\n        revalidate: _opts\n    } : _opts || {});\n    let populateCache = options.populateCache;\n    const rollbackOnErrorOption = options.rollbackOnError;\n    let optimisticData = options.optimisticData;\n    const rollbackOnError = (error)=>{\n        return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n    };\n    const throwOnError = options.throwOnError;\n    // If the second argument is a key filter, return the mutation results for all\n    // filtered keys.\n    if (isFunction(_key)) {\n        const keyFilter = _key;\n        const matchedKeys = [];\n        const it = cache.keys();\n        for (const key of it){\n            if (// Skip the special useSWRInfinite and useSWRSubscription keys.\n            !/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n            }\n        }\n        return Promise.all(matchedKeys.map(mutateByKey));\n    }\n    return mutateByKey(_key);\n    async function mutateByKey(_k) {\n        // Serialize key\n        const [key] = serialize(_k);\n        if (!key) return;\n        const [get, set] = createCacheHelper(cache, key);\n        const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n        const startRevalidate = ()=>{\n            const revalidators = EVENT_REVALIDATORS[key];\n            const revalidate = isFunction(options.revalidate) ? options.revalidate(get().data, _k) : options.revalidate !== false;\n            if (revalidate) {\n                // Invalidate the key by deleting the concurrent request markers so new\n                // requests will not be deduped.\n                delete FETCH[key];\n                delete PRELOAD[key];\n                if (revalidators && revalidators[0]) {\n                    return revalidators[0](MUTATE_EVENT).then(()=>get().data);\n                }\n            }\n            return get().data;\n        };\n        // If there is no new data provided, revalidate the key with current state.\n        if (args.length < 3) {\n            // Revalidate and broadcast state.\n            return startRevalidate();\n        }\n        let data = _data;\n        let error;\n        // Update global timestamps.\n        const beforeMutationTs = getTimestamp();\n        MUTATION[key] = [\n            beforeMutationTs,\n            0\n        ];\n        const hasOptimisticData = !isUndefined(optimisticData);\n        const state = get();\n        // `displayedData` is the current value on screen. It could be the optimistic value\n        // that is going to be overridden by a `committedData`, or get reverted back.\n        // `committedData` is the validated value that comes from a fetch or mutation.\n        const displayedData = state.data;\n        const currentData = state._c;\n        const committedData = isUndefined(currentData) ? displayedData : currentData;\n        // Do optimistic data update.\n        if (hasOptimisticData) {\n            optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n            // When we set optimistic data, backup the current committedData data in `_c`.\n            set({\n                data: optimisticData,\n                _c: committedData\n            });\n        }\n        if (isFunction(data)) {\n            // `data` is a function, call it passing current cache value.\n            try {\n                data = data(committedData);\n            } catch (err) {\n                // If it throws an error synchronously, we shouldn't update the cache.\n                error = err;\n            }\n        }\n        // `data` is a promise/thenable, resolve the final data first.\n        if (data && isPromiseLike(data)) {\n            // This means that the mutation is async, we need to check timestamps to\n            // avoid race conditions.\n            data = await data.catch((err)=>{\n                error = err;\n            });\n            // Check if other mutations have occurred since we've started this mutation.\n            // If there's a race we don't update cache or broadcast the change,\n            // just return the data.\n            if (beforeMutationTs !== MUTATION[key][0]) {\n                if (error) throw error;\n                return data;\n            } else if (error && hasOptimisticData && rollbackOnError(error)) {\n                // Rollback. Always populate the cache in this case but without\n                // transforming the data.\n                populateCache = true;\n                // Reset data to be the latest committed data, and clear the `_c` value.\n                set({\n                    data: committedData,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // If we should write back the cache after request.\n        if (populateCache) {\n            if (!error) {\n                // Transform the result into data.\n                if (isFunction(populateCache)) {\n                    const populateCachedData = populateCache(data, committedData);\n                    set({\n                        data: populateCachedData,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                } else {\n                    // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                    set({\n                        data,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                }\n            }\n        }\n        // Reset the timestamp to mark the mutation has ended.\n        MUTATION[key][1] = getTimestamp();\n        // Update existing SWR Hooks' internal states:\n        Promise.resolve(startRevalidate()).then(()=>{\n            // The mutation and revalidation are ended, we can clear it since the data is\n            // not an optimistic value anymore.\n            set({\n                _c: UNDEFINED\n            });\n        });\n        // Throw error or return data\n        if (error) {\n            if (throwOnError) throw error;\n            return;\n        }\n        return data;\n    }\n}\n\nconst revalidateAllKeys = (revalidators, type)=>{\n    for(const key in revalidators){\n        if (revalidators[key][0]) revalidators[key][0](type);\n    }\n};\nconst initCache = (provider, options)=>{\n    // The global state for a specific provider will be used to deduplicate\n    // requests and store listeners. As well as a mutate function that is bound to\n    // the cache.\n    // The provider's global state might be already initialized. Let's try to get the\n    // global state associated with the provider first.\n    if (!SWRGlobalState.has(provider)) {\n        const opts = mergeObjects(defaultConfigOptions, options);\n        // If there's no global state bound to the provider, create a new one with the\n        // new mutate function.\n        const EVENT_REVALIDATORS = {};\n        const mutate = internalMutate.bind(UNDEFINED, provider);\n        let unmount = noop;\n        const subscriptions = {};\n        const subscribe = (key, callback)=>{\n            const subs = subscriptions[key] || [];\n            subscriptions[key] = subs;\n            subs.push(callback);\n            return ()=>subs.splice(subs.indexOf(callback), 1);\n        };\n        const setter = (key, value, prev)=>{\n            provider.set(key, value);\n            const subs = subscriptions[key];\n            if (subs) {\n                for (const fn of subs){\n                    fn(value, prev);\n                }\n            }\n        };\n        const initProvider = ()=>{\n            if (!SWRGlobalState.has(provider)) {\n                // Update the state if it's new, or if the provider has been extended.\n                SWRGlobalState.set(provider, [\n                    EVENT_REVALIDATORS,\n                    {},\n                    {},\n                    {},\n                    mutate,\n                    setter,\n                    subscribe\n                ]);\n                if (!IS_SERVER) {\n                    // When listening to the native events for auto revalidations,\n                    // we intentionally put a delay (setTimeout) here to make sure they are\n                    // fired after immediate JavaScript executions, which can be\n                    // React's state updates.\n                    // This avoids some unnecessary revalidations such as\n                    // https://github.com/vercel/swr/issues/1680.\n                    const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, FOCUS_EVENT)));\n                    const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, RECONNECT_EVENT)));\n                    unmount = ()=>{\n                        releaseFocus && releaseFocus();\n                        releaseReconnect && releaseReconnect();\n                        // When un-mounting, we need to remove the cache provider from the state\n                        // storage too because it's a side-effect. Otherwise, when re-mounting we\n                        // will not re-register those event listeners.\n                        SWRGlobalState.delete(provider);\n                    };\n                }\n            }\n        };\n        initProvider();\n        // This is a new provider, we need to initialize it and setup DOM events\n        // listeners for `focus` and `reconnect` actions.\n        // We might want to inject an extra layer on top of `provider` in the future,\n        // such as key serialization, auto GC, etc.\n        // For now, it's just a `Map` interface without any modifications.\n        return [\n            provider,\n            mutate,\n            initProvider,\n            unmount\n        ];\n    }\n    return [\n        provider,\n        SWRGlobalState.get(provider)[4]\n    ];\n};\n\n// error retry\nconst onErrorRetry = (_, __, config, revalidate, opts)=>{\n    const maxRetryCount = config.errorRetryCount;\n    const currentRetryCount = opts.retryCount;\n    // Exponential backoff\n    const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n        return;\n    }\n    setTimeout(revalidate, timeout, opts);\n};\nconst compare = (currentData, newData)=>stableHash(currentData) == stableHash(newData);\n// Default cache provider\nconst [cache, mutate] = initCache(new Map());\n// Default config\nconst defaultConfig = mergeObjects({\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n    // providers\n    compare,\n    isPaused: ()=>false,\n    cache,\n    mutate,\n    fallback: {}\n}, // use web preset by default\npreset);\n\nconst mergeConfigs = (a, b)=>{\n    // Need to create a new object to avoid mutating the original here.\n    const v = mergeObjects(a, b);\n    // If two configs are provided, merge their `use` and `fallback` options.\n    if (b) {\n        const { use: u1, fallback: f1 } = a;\n        const { use: u2, fallback: f2 } = b;\n        if (u1 && u2) {\n            v.use = u1.concat(u2);\n        }\n        if (f1 && f2) {\n            v.fallback = mergeObjects(f1, f2);\n        }\n    }\n    return v;\n};\n\nconst SWRConfigContext = createContext({});\nconst SWRConfig = (props)=>{\n    const { value } = props;\n    const parentConfig = useContext(SWRConfigContext);\n    const isFunctionalConfig = isFunction(value);\n    const config = useMemo(()=>isFunctionalConfig ? value(parentConfig) : value, [\n        isFunctionalConfig,\n        parentConfig,\n        value\n    ]);\n    // Extend parent context values and middleware.\n    const extendedConfig = useMemo(()=>isFunctionalConfig ? config : mergeConfigs(parentConfig, config), [\n        isFunctionalConfig,\n        parentConfig,\n        config\n    ]);\n    // Should not use the inherited provider.\n    const provider = config && config.provider;\n    // initialize the cache only on first access.\n    const cacheContextRef = useRef(UNDEFINED);\n    if (provider && !cacheContextRef.current) {\n        cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n    }\n    const cacheContext = cacheContextRef.current;\n    // Override the cache if a new provider is given.\n    if (cacheContext) {\n        extendedConfig.cache = cacheContext[0];\n        extendedConfig.mutate = cacheContext[1];\n    }\n    // Unsubscribe events.\n    useIsomorphicLayoutEffect(()=>{\n        if (cacheContext) {\n            cacheContext[2] && cacheContext[2]();\n            return cacheContext[3];\n        }\n    }, []);\n    return createElement(SWRConfigContext.Provider, mergeObjects(props, {\n        value: extendedConfig\n    }));\n};\n\nconst INFINITE_PREFIX = '$inf$';\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = React;\n    }\n};\n\nconst normalize = (args)=>{\n    return isFunction(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    return mergeObjects(defaultConfig, useContext(SWRConfigContext));\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = serialize(key_);\n    const [, , , PRELOAD] = SWRGlobalState.get(cache);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = serialize(key_);\n            const [, , , PRELOAD] = SWRGlobalState.get(cache);\n            if (key.startsWith(INFINITE_PREFIX)) {\n                // we want the infinite fetcher to be called.\n                // handling of the PRELOAD cache happens there.\n                return fetcher_(...args);\n            }\n            const req = PRELOAD[key];\n            if (isUndefined(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = mergeConfigs(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\nexport { INFINITE_PREFIX, IS_REACT_LEGACY, IS_SERVER, OBJECT, SWRConfig, SWRGlobalState, UNDEFINED, cache, compare, createCacheHelper, defaultConfig, defaultConfigOptions, getTimestamp, hasRequestAnimationFrame, initCache, internalMutate, isDocumentDefined, isFunction, isPromiseLike, isUndefined, isWindowDefined, mergeConfigs, mergeObjects, mutate, noop, normalize, preload, preset, rAF, events as revalidateEvents, serialize, slowConnection, stableHash, subscribeCallback, useIsomorphicLayoutEffect, useSWRConfig, withArgs, withMiddleware };\n","import ReactExports, { useRef, useMemo, useCallback, useDebugValue } from 'react';\nimport 'client-only';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim/index.js';\nimport { OBJECT, SWRConfig, defaultConfig, withArgs, SWRGlobalState, serialize, createCacheHelper, isUndefined, getTimestamp, UNDEFINED, isFunction, revalidateEvents, internalMutate, useIsomorphicLayoutEffect, subscribeCallback, IS_SERVER, rAF, IS_REACT_LEGACY, mergeObjects, INFINITE_PREFIX, withMiddleware, cache } from 'swr/_internal';\n\n/// <reference types=\"react/experimental\" />\nconst use = ReactExports.use || ((promise)=>{\n    if (promise.status === 'pending') {\n        throw promise;\n    } else if (promise.status === 'fulfilled') {\n        return promise.value;\n    } else if (promise.status === 'rejected') {\n        throw promise.reason;\n    } else {\n        promise.status = 'pending';\n        promise.then((v)=>{\n            promise.status = 'fulfilled';\n            promise.value = v;\n        }, (e)=>{\n            promise.status = 'rejected';\n            promise.reason = e;\n        });\n        throw promise;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache, compare, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = serialize(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = useRef(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = useRef(false);\n    // Refs to keep the key and config.\n    const keyRef = useRef(key);\n    const fetcherRef = useRef(fetcher);\n    const configRef = useRef(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = createCacheHelper(cache, key);\n    const stateDependencies = useRef({}).current;\n    const fallback = isUndefined(fallbackData) ? config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!isUndefined(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = useMemo(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!isUndefined(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            if (!isUndefined(revalidateIfStale)) return revalidateIfStale;\n            return true;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = mergeObjects(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = useSyncExternalStore(useCallback((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = isUndefined(cachedData) ? fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = useRef(data);\n    const returnedData = keepPreviousData ? isUndefined(cachedData) ? laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !isUndefined(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !isUndefined(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return isUndefined(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return isUndefined(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = isUndefined(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = isUndefined(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = useCallback(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (IS_REACT_LEGACY) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if (isUndefined(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && isUndefined(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    getTimestamp()\n                ];\n            }\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = UNDEFINED;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!isUndefined(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || isFunction(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](revalidateEvents.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    const boundMutate = useCallback(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return internalMutate(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    useIsomorphicLayoutEffect(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!isUndefined(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    useIsomorphicLayoutEffect(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(UNDEFINED, WITH_DEDUPE);\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        let nextFocusRevalidatedAt = 0;\n        const onRevalidate = (type, opts = {})=>{\n            if (type == revalidateEvents.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == revalidateEvents.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == revalidateEvents.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == revalidateEvents.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = subscribeCallback(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            if (isUndefined(data) || IS_SERVER) {\n                // Revalidate immediately.\n                softRevalidate();\n            } else {\n                // Delay the revalidate if we have data to return so we won't block\n                // rendering.\n                rAF(softRevalidate);\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    useIsomorphicLayoutEffect(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = isFunction(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    useDebugValue(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense && isUndefined(data) && key) {\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any initial data. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!IS_REACT_LEGACY && IS_SERVER) {\n            throw new Error('Fallback data is required when using suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        unmountedRef.current = false;\n        const req = PRELOAD[key];\n        if (!isUndefined(req)) {\n            const promise = boundMutate(req);\n            use(promise);\n        }\n        if (isUndefined(error)) {\n            const promise = revalidate(WITH_DEDUPE);\n            if (!isUndefined(returnedData)) {\n                promise.status = 'fulfilled';\n                promise.value = true;\n            }\n            use(promise);\n        } else {\n            throw error;\n        }\n    }\n    return {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n};\nOBJECT.defineProperty(SWRConfig, 'defaultValue', {\n    value: defaultConfig\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error, isLoading } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (isLoading) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = withArgs(useSWRHandler);\n\nconst getFirstPageKey = (getKey)=>{\n    return serialize(getKey ? getKey(0, null) : null)[0];\n};\nconst unstable_serialize = (getKey)=>{\n    return INFINITE_PREFIX + getFirstPageKey(getKey);\n};\n\n// We have to several type castings here because `useSWRInfinite` is a special\n// hook where `key` and return type are not like the normal `useSWR` types.\n// const INFINITE_PREFIX = '$inf$'\nconst EMPTY_PROMISE = Promise.resolve();\n// export const unstable_serialize = (getKey: SWRInfiniteKeyLoader) => {\n//   return INFINITE_PREFIX + getFirstPageKey(getKey)\n// }\nconst infinite = (useSWRNext)=>(getKey, fn, config)=>{\n        const didMountRef = useRef(false);\n        const { cache: cache$1, initialSize = 1, revalidateAll = false, persistSize = false, revalidateFirstPage = true, revalidateOnMount = false, parallel = false } = config;\n        const [, , , PRELOAD] = SWRGlobalState.get(cache);\n        // The serialized key of the first page. This key will be used to store\n        // metadata of this SWR infinite hook.\n        let infiniteKey;\n        try {\n            infiniteKey = getFirstPageKey(getKey);\n            if (infiniteKey) infiniteKey = INFINITE_PREFIX + infiniteKey;\n        } catch (err) {\n        // Not ready yet.\n        }\n        const [get, set, subscribeCache] = createCacheHelper(cache$1, infiniteKey);\n        const getSnapshot = useCallback(()=>{\n            const size = isUndefined(get()._l) ? initialSize : get()._l;\n            return size;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            cache$1,\n            infiniteKey,\n            initialSize\n        ]);\n        useSyncExternalStore(useCallback((callback)=>{\n            if (infiniteKey) return subscribeCache(infiniteKey, ()=>{\n                callback();\n            });\n            return ()=>{};\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            cache$1,\n            infiniteKey\n        ]), getSnapshot, getSnapshot);\n        const resolvePageSize = useCallback(()=>{\n            const cachedPageSize = get()._l;\n            return isUndefined(cachedPageSize) ? initialSize : cachedPageSize;\n        // `cache` isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            infiniteKey,\n            initialSize\n        ]);\n        // keep the last page size to restore it with the persistSize option\n        const lastPageSizeRef = useRef(resolvePageSize());\n        // When the page key changes, we reset the page size if it's not persisted\n        useIsomorphicLayoutEffect(()=>{\n            if (!didMountRef.current) {\n                didMountRef.current = true;\n                return;\n            }\n            if (infiniteKey) {\n                // If the key has been changed, we keep the current page size if persistSize is enabled\n                // Otherwise, we reset the page size to cached pageSize\n                set({\n                    _l: persistSize ? lastPageSizeRef.current : resolvePageSize()\n                });\n            }\n        // `initialSize` isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            infiniteKey,\n            cache$1\n        ]);\n        // Needs to check didMountRef during mounting, not in the fetcher\n        const shouldRevalidateOnMount = revalidateOnMount && !didMountRef.current;\n        // Actual SWR hook to load all pages in one fetcher.\n        const swr = useSWRNext(infiniteKey, async (key)=>{\n            // get the revalidate context\n            const forceRevalidateAll = get()._i;\n            const shouldRevalidatePage = get()._r;\n            set({\n                _r: UNDEFINED\n            });\n            // return an array of page data\n            const data = [];\n            const pageSize = resolvePageSize();\n            const [getCache] = createCacheHelper(cache$1, key);\n            const cacheData = getCache().data;\n            const revalidators = [];\n            let previousPageData = null;\n            for(let i = 0; i < pageSize; ++i){\n                const [pageKey, pageArg] = serialize(getKey(i, parallel ? null : previousPageData));\n                if (!pageKey) {\n                    break;\n                }\n                const [getSWRCache, setSWRCache] = createCacheHelper(cache$1, pageKey);\n                // Get the cached page data.\n                let pageData = getSWRCache().data;\n                // should fetch (or revalidate) if:\n                // - `revalidateAll` is enabled\n                // - `mutate()` called\n                // - the cache is missing\n                // - it's the first page and it's not the initial render\n                // - `revalidateOnMount` is enabled and it's on mount\n                // - cache for that page has changed\n                const shouldFetchPage = revalidateAll || forceRevalidateAll || isUndefined(pageData) || revalidateFirstPage && !i && !isUndefined(cacheData) || shouldRevalidateOnMount || cacheData && !isUndefined(cacheData[i]) && !config.compare(cacheData[i], pageData);\n                if (fn && (typeof shouldRevalidatePage === 'function' ? shouldRevalidatePage(pageData, pageArg) : shouldFetchPage)) {\n                    const revalidate = async ()=>{\n                        const hasPreloadedRequest = pageKey in PRELOAD;\n                        if (!hasPreloadedRequest) {\n                            pageData = await fn(pageArg);\n                        } else {\n                            const req = PRELOAD[pageKey];\n                            // delete the preload cache key before resolving it\n                            // in case there's an error\n                            delete PRELOAD[pageKey];\n                            // get the page data from the preload cache\n                            pageData = await req;\n                        }\n                        setSWRCache({\n                            data: pageData,\n                            _k: pageArg\n                        });\n                        data[i] = pageData;\n                    };\n                    if (parallel) {\n                        revalidators.push(revalidate);\n                    } else {\n                        await revalidate();\n                    }\n                } else {\n                    data[i] = pageData;\n                }\n                if (!parallel) {\n                    previousPageData = pageData;\n                }\n            }\n            // flush all revalidateions in parallel\n            if (parallel) {\n                await Promise.all(revalidators.map((r)=>r()));\n            }\n            // once we executed the data fetching based on the context, clear the context\n            set({\n                _i: UNDEFINED\n            });\n            // return the data\n            return data;\n        }, config);\n        const mutate = useCallback(// eslint-disable-next-line func-names\n        function(data, opts) {\n            // When passing as a boolean, it's explicitly used to disable/enable\n            // revalidation.\n            const options = typeof opts === 'boolean' ? {\n                revalidate: opts\n            } : opts || {};\n            // Default to true.\n            const shouldRevalidate = options.revalidate !== false;\n            // It is possible that the key is still falsy.\n            if (!infiniteKey) return EMPTY_PROMISE;\n            if (shouldRevalidate) {\n                if (!isUndefined(data)) {\n                    // We only revalidate the pages that are changed\n                    set({\n                        _i: false,\n                        _r: options.revalidate\n                    });\n                } else {\n                    // Calling `mutate()`, we revalidate all pages\n                    set({\n                        _i: true,\n                        _r: options.revalidate\n                    });\n                }\n            }\n            return arguments.length ? swr.mutate(data, {\n                ...options,\n                revalidate: shouldRevalidate\n            }) : swr.mutate();\n        }, // swr.mutate is always the same reference\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            infiniteKey,\n            cache$1\n        ]);\n        // Extend the SWR API\n        const setSize = useCallback((arg)=>{\n            // It is possible that the key is still falsy.\n            if (!infiniteKey) return EMPTY_PROMISE;\n            const [, changeSize] = createCacheHelper(cache$1, infiniteKey);\n            let size;\n            if (isFunction(arg)) {\n                size = arg(resolvePageSize());\n            } else if (typeof arg == 'number') {\n                size = arg;\n            }\n            if (typeof size != 'number') return EMPTY_PROMISE;\n            changeSize({\n                _l: size\n            });\n            lastPageSizeRef.current = size;\n            // Calculate the page data after the size change.\n            const data = [];\n            const [getInfiniteCache] = createCacheHelper(cache$1, infiniteKey);\n            let previousPageData = null;\n            for(let i = 0; i < size; ++i){\n                const [pageKey] = serialize(getKey(i, previousPageData));\n                const [getCache] = createCacheHelper(cache$1, pageKey);\n                // Get the cached page data.\n                const pageData = pageKey ? getCache().data : UNDEFINED;\n                // Call `mutate` with infinte cache data if we can't get it from the page cache.\n                if (isUndefined(pageData)) {\n                    return mutate(getInfiniteCache().data);\n                }\n                data.push(pageData);\n                previousPageData = pageData;\n            }\n            return mutate(data);\n        }, // exclude getKey from the dependencies, which isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            infiniteKey,\n            cache$1,\n            mutate,\n            resolvePageSize\n        ]);\n        // Use getter functions to avoid unnecessary re-renders caused by triggering\n        // all the getters of the returned swr object.\n        return {\n            size: resolvePageSize(),\n            setSize,\n            mutate,\n            get data () {\n                return swr.data;\n            },\n            get error () {\n                return swr.error;\n            },\n            get isValidating () {\n                return swr.isValidating;\n            },\n            get isLoading () {\n                return swr.isLoading;\n            }\n        };\n    };\nconst useSWRInfinite = withMiddleware(useSWR, infinite);\n\nexport { useSWRInfinite as default, infinite, unstable_serialize };\n","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","'use client';\nimport React from 'react';\n\n/**\n * Assert that the context value exists, otherwise throw an error.\n *\n * @internal\n */\nexport function assertContextExists(contextVal: unknown, msgOrCtx: string | React.Context<any>): asserts contextVal {\n  if (!contextVal) {\n    throw typeof msgOrCtx === 'string' ? new Error(msgOrCtx) : new Error(`${msgOrCtx.displayName} not found`);\n  }\n}\n\ntype Options = { assertCtxFn?: (v: unknown, msg: string) => void };\ntype ContextOf<T> = React.Context<{ value: T } | undefined>;\ntype UseCtxFn<T> = () => T;\n\n/**\n * Create and return a Context and two hooks that return the context value.\n * The Context type is derived from the type passed in by the user.\n *\n * The first hook returned guarantees that the context exists so the returned value is always `CtxValue`\n * The second hook makes no guarantees, so the returned value can be `CtxValue | undefined`\n *\n * @internal\n */\nexport const createContextAndHook = <CtxVal>(\n  displayName: string,\n  options?: Options,\n): [ContextOf<CtxVal>, UseCtxFn<CtxVal>, UseCtxFn<CtxVal | Partial<CtxVal>>] => {\n  const { assertCtxFn = assertContextExists } = options || {};\n  const Ctx = React.createContext<{ value: CtxVal } | undefined>(undefined);\n  Ctx.displayName = displayName;\n\n  const useCtx = () => {\n    const ctx = React.useContext(Ctx);\n    assertCtxFn(ctx, `${displayName} not found`);\n    return (ctx as any).value as CtxVal;\n  };\n\n  const useCtxWithoutGuarantee = () => {\n    const ctx = React.useContext(Ctx);\n    return ctx ? ctx.value : {};\n  };\n\n  return [Ctx, useCtx, useCtxWithoutGuarantee];\n};\n","'use client';\n\nexport * from 'swr';\n\nexport { default as useSWR } from 'swr';\nexport { default as useSWRInfinite } from 'swr/infinite';\n","'use client';\n\nimport type {\n  ClerkOptions,\n  ClientResource,\n  LoadedClerk,\n  OrganizationResource,\n  SignedInSessionResource,\n  UserResource,\n} from '@clerk/types';\nimport type { PropsWithChildren } from 'react';\nimport React from 'react';\n\nimport { SWRConfig } from './clerk-swr';\nimport { createContextAndHook } from './hooks/createContextAndHook';\n\nconst [ClerkInstanceContext, useClerkInstanceContext] = createContextAndHook<LoadedClerk>('ClerkInstanceContext');\nconst [UserContext, useUserContext] = createContextAndHook<UserResource | null | undefined>('UserContext');\nconst [ClientContext, useClientContext] = createContextAndHook<ClientResource | null | undefined>('ClientContext');\nconst [SessionContext, useSessionContext] = createContextAndHook<SignedInSessionResource | null | undefined>(\n  'SessionContext',\n);\n\nconst OptionsContext = React.createContext<ClerkOptions>({});\n\nfunction useOptionsContext(): ClerkOptions {\n  const context = React.useContext(OptionsContext);\n  if (context === undefined) {\n    throw new Error('useOptions must be used within an OptionsContext');\n  }\n  return context;\n}\n\ntype OrganizationContextProps = {\n  organization: OrganizationResource | null | undefined;\n};\nconst [OrganizationContextInternal, useOrganizationContext] = createContextAndHook<{\n  organization: OrganizationResource | null | undefined;\n}>('OrganizationContext');\n\nconst OrganizationProvider = ({\n  children,\n  organization,\n  swrConfig,\n}: PropsWithChildren<\n  OrganizationContextProps & {\n    // Exporting inferred types  directly from SWR will result in error while building declarations\n    swrConfig?: any;\n  }\n>) => {\n  return (\n    <SWRConfig value={swrConfig}>\n      <OrganizationContextInternal.Provider\n        value={{\n          value: { organization },\n        }}\n      >\n        {children}\n      </OrganizationContextInternal.Provider>\n    </SWRConfig>\n  );\n};\n\nfunction useAssertWrappedByClerkProvider(displayNameOrFn: string | (() => void)): void {\n  const ctx = React.useContext(ClerkInstanceContext);\n\n  if (!ctx) {\n    if (typeof displayNameOrFn === 'function') {\n      displayNameOrFn();\n      return;\n    }\n\n    throw new Error(\n      `${displayNameOrFn} can only be used within the <ClerkProvider /> component.\n\nPossible fixes:\n1. Ensure that the <ClerkProvider /> is correctly wrapping your application where this component is used.\n2. Check for multiple versions of the \\`@clerk/shared\\` package in your project. Use a tool like \\`npm ls @clerk/shared\\` to identify multiple versions, and update your dependencies to only rely on one.\n\nLearn more: https://clerk.com/docs/components/clerk-provider`.trim(),\n    );\n  }\n}\n\nexport {\n  ClientContext,\n  useClientContext,\n  OrganizationProvider,\n  useOrganizationContext,\n  UserContext,\n  OptionsContext,\n  useOptionsContext,\n  useUserContext,\n  SessionContext,\n  useSessionContext,\n  ClerkInstanceContext,\n  useClerkInstanceContext,\n  useAssertWrappedByClerkProvider,\n};\n","'use client';\n\nimport { useCallback, useMemo, useRef, useState } from 'react';\n\nimport { useSWR, useSWRInfinite } from '../clerk-swr';\nimport type {\n  CacheSetter,\n  PagesOrInfiniteConfig,\n  PagesOrInfiniteOptions,\n  PaginatedResources,\n  ValueOrSetter,\n} from '../types';\n\nfunction getDifferentKeys(obj1: Record<string, unknown>, obj2: Record<string, unknown>): Record<string, unknown> {\n  const keysSet = new Set(Object.keys(obj2));\n  const differentKeysObject: Record<string, unknown> = {};\n\n  for (const key1 of Object.keys(obj1)) {\n    if (!keysSet.has(key1)) {\n      differentKeysObject[key1] = obj1[key1];\n    }\n  }\n\n  return differentKeysObject;\n}\n\nexport const useWithSafeValues = <T extends PagesOrInfiniteOptions>(params: T | true | undefined, defaultValues: T) => {\n  const shouldUseDefaults = typeof params === 'boolean' && params;\n\n  // Cache initialPage and initialPageSize until unmount\n  const initialPageRef = useRef(\n    shouldUseDefaults ? defaultValues.initialPage : (params?.initialPage ?? defaultValues.initialPage),\n  );\n  const pageSizeRef = useRef(shouldUseDefaults ? defaultValues.pageSize : (params?.pageSize ?? defaultValues.pageSize));\n\n  const newObj: Record<string, unknown> = {};\n  for (const key of Object.keys(defaultValues)) {\n    // @ts-ignore\n    newObj[key] = shouldUseDefaults ? defaultValues[key] : (params?.[key] ?? defaultValues[key]);\n  }\n\n  return {\n    ...newObj,\n    initialPage: initialPageRef.current,\n    pageSize: pageSizeRef.current,\n  } as T;\n};\n\nconst cachingSWROptions = {\n  dedupingInterval: 1000 * 60,\n  focusThrottleInterval: 1000 * 60 * 2,\n} satisfies Parameters<typeof useSWR>[2];\n\ntype ArrayType<DataArray> = DataArray extends Array<infer ElementType> ? ElementType : never;\ntype ExtractData<Type> = Type extends { data: infer Data } ? ArrayType<Data> : Type;\n\ntype UsePagesOrInfinite = <\n  Params extends PagesOrInfiniteOptions,\n  FetcherReturnData extends Record<string, any>,\n  CacheKeys = Record<string, unknown>,\n  TConfig extends PagesOrInfiniteConfig = PagesOrInfiniteConfig,\n>(\n  /**\n   * The parameters will be passed to the fetcher\n   */\n  params: Params,\n  /**\n   * A Promise returning function to fetch your data\n   */\n  fetcher: ((p: Params) => FetcherReturnData | Promise<FetcherReturnData>) | undefined,\n  /**\n   * Internal configuration of the hook\n   */\n  config: TConfig,\n  cacheKeys: CacheKeys,\n) => PaginatedResources<ExtractData<FetcherReturnData>, TConfig['infinite']>;\n\nexport const usePagesOrInfinite: UsePagesOrInfinite = (params, fetcher, config, cacheKeys) => {\n  const [paginatedPage, setPaginatedPage] = useState(params.initialPage ?? 1);\n\n  // Cache initialPage and initialPageSize until unmount\n  const initialPageRef = useRef(params.initialPage ?? 1);\n  const pageSizeRef = useRef(params.pageSize ?? 10);\n\n  const enabled = config.enabled ?? true;\n  const triggerInfinite = config.infinite ?? false;\n  const keepPreviousData = config.keepPreviousData ?? false;\n\n  const pagesCacheKey = {\n    ...cacheKeys,\n    ...params,\n    initialPage: paginatedPage,\n    pageSize: pageSizeRef.current,\n  };\n\n  const {\n    data: swrData,\n    isValidating: swrIsValidating,\n    isLoading: swrIsLoading,\n    error: swrError,\n    mutate: swrMutate,\n  } = useSWR(\n    !triggerInfinite && !!fetcher && enabled ? pagesCacheKey : null,\n    cacheKeyParams => {\n      // @ts-ignore\n      const requestParams = getDifferentKeys(cacheKeyParams, cacheKeys);\n      // @ts-ignore\n      return fetcher?.(requestParams);\n    },\n    { keepPreviousData, ...cachingSWROptions },\n  );\n\n  const {\n    data: swrInfiniteData,\n    isLoading: swrInfiniteIsLoading,\n    isValidating: swrInfiniteIsValidating,\n    error: swrInfiniteError,\n    size,\n    setSize,\n    mutate: swrInfiniteMutate,\n  } = useSWRInfinite(\n    pageIndex => {\n      if (!triggerInfinite || !enabled) {\n        return null;\n      }\n\n      return {\n        ...params,\n        ...cacheKeys,\n        initialPage: initialPageRef.current + pageIndex,\n        pageSize: pageSizeRef.current,\n      };\n    },\n    cacheKeyParams => {\n      // @ts-ignore\n      const requestParams = getDifferentKeys(cacheKeyParams, cacheKeys);\n      // @ts-ignore\n      return fetcher?.(requestParams);\n    },\n    cachingSWROptions,\n  );\n\n  const page = useMemo(() => {\n    if (triggerInfinite) {\n      return size;\n    }\n    return paginatedPage;\n  }, [triggerInfinite, size, paginatedPage]);\n\n  const fetchPage: ValueOrSetter<number> = useCallback(\n    numberOrgFn => {\n      if (triggerInfinite) {\n        void setSize(numberOrgFn);\n        return;\n      }\n      return setPaginatedPage(numberOrgFn);\n    },\n    [setSize],\n  );\n\n  const data = useMemo(() => {\n    if (triggerInfinite) {\n      return swrInfiniteData?.map(a => a?.data).flat() ?? [];\n    }\n    return swrData?.data ?? [];\n  }, [triggerInfinite, swrData, swrInfiniteData]);\n\n  const count = useMemo(() => {\n    if (triggerInfinite) {\n      return swrInfiniteData?.[swrInfiniteData?.length - 1]?.total_count || 0;\n    }\n    return swrData?.total_count ?? 0;\n  }, [triggerInfinite, swrData, swrInfiniteData]);\n\n  const isLoading = triggerInfinite ? swrInfiniteIsLoading : swrIsLoading;\n  const isFetching = triggerInfinite ? swrInfiniteIsValidating : swrIsValidating;\n  const error = (triggerInfinite ? swrInfiniteError : swrError) ?? null;\n  const isError = !!error;\n  /**\n   * Helpers\n   */\n  const fetchNext = useCallback(() => {\n    fetchPage(n => Math.max(0, n + 1));\n  }, [fetchPage]);\n\n  const fetchPrevious = useCallback(() => {\n    fetchPage(n => Math.max(0, n - 1));\n  }, [fetchPage]);\n\n  const offsetCount = (initialPageRef.current - 1) * pageSizeRef.current;\n\n  const pageCount = Math.ceil((count - offsetCount) / pageSizeRef.current);\n  const hasNextPage = count - offsetCount * pageSizeRef.current > page * pageSizeRef.current;\n  const hasPreviousPage = (page - 1) * pageSizeRef.current > offsetCount * pageSizeRef.current;\n\n  const setData: CacheSetter = triggerInfinite\n    ? value =>\n        swrInfiniteMutate(value, {\n          revalidate: false,\n        })\n    : value =>\n        swrMutate(value, {\n          revalidate: false,\n        });\n\n  const revalidate = triggerInfinite ? () => swrInfiniteMutate() : () => swrMutate();\n\n  return {\n    data,\n    count,\n    error,\n    isLoading,\n    isFetching,\n    isError,\n    page,\n    pageCount,\n    fetchPage,\n    fetchNext,\n    fetchPrevious,\n    hasNextPage,\n    hasPreviousPage,\n    // Let the hook return type define this type\n    revalidate: revalidate as any,\n    // Let the hook return type define this type\n    setData: setData as any,\n  };\n};\n","import type {\n  ClerkPaginatedResponse,\n  GetDomainsParams,\n  GetInvitationsParams,\n  GetMembershipRequestParams,\n  GetMembersParams,\n  OrganizationDomainResource,\n  OrganizationInvitationResource,\n  OrganizationMembershipRequestResource,\n  OrganizationMembershipResource,\n  OrganizationResource,\n} from '@clerk/types';\n\nimport { getCurrentOrganizationMembership } from '../../organization';\nimport { eventMethodCalled } from '../../telemetry/events/method-called';\nimport {\n  useAssertWrappedByClerkProvider,\n  useClerkInstanceContext,\n  useOrganizationContext,\n  useSessionContext,\n} from '../contexts';\nimport type { PaginatedHookConfig, PaginatedResources, PaginatedResourcesWithDefault } from '../types';\nimport { usePagesOrInfinite, useWithSafeValues } from './usePagesOrInfinite';\n\ntype UseOrganizationParams = {\n  /**\n   * If set to `true`, all default properties will be used.\n   *\n   * Otherwise, accepts an object with the following optional properties:\n   *\n   * - `enrollmentMode`: A string that filters the domains by the provided enrollment mode.\n   */\n  domains?: true | PaginatedHookConfig<GetDomainsParams>;\n  /**\n   * If set to `true`, all default properties will be used. Otherwise, accepts an object with the following optional properties:\n   *\n   * - `status`: A string that filters the membership requests by the provided status.\n   */\n  membershipRequests?: true | PaginatedHookConfig<GetMembershipRequestParams>;\n  /**\n   * If set to `true`, all default properties will be used.\n   *\n   * Otherwise, accepts an object with the following optional properties:\n   *\n   * - `role`: An array of [`OrganizationCustomRoleKey`](/docs/references/javascript/types/organization-custom-role-key).\n   * - `query`: A string that filters the memberships by the provided string.\n   */\n  memberships?: true | PaginatedHookConfig<GetMembersParams>;\n  /**\n   * If set to `true`, all default properties will be used.\n   *\n   * Otherwise, accepts an object with the following optional properties:\n   *\n   * - `status`: A string that filters the invitations by the provided status.\n   */\n  invitations?: true | PaginatedHookConfig<GetInvitationsParams>;\n};\n\n/**\n * @inline\n */\ntype UseOrganizationReturn<T extends UseOrganizationParams> =\n  | {\n      /**\n       * A boolean that indicates whether Clerk has completed initialization. Initially `false`, becomes `true` once Clerk loads.\n       */\n      isLoaded: false;\n      /**\n       * The currently active organization.\n       */\n      organization: undefined;\n      /**\n       * The current organization membership.\n       */\n      membership: undefined;\n      /**\n       * Includes a paginated list of the organization's domains.\n       */\n      domains: PaginatedResourcesWithDefault<OrganizationDomainResource>;\n      /**\n       * Includes a paginated list of the organization's membership requests.\n       */\n      membershipRequests: PaginatedResourcesWithDefault<OrganizationMembershipRequestResource>;\n      /**\n       * Includes a paginated list of the organization's memberships.\n       */\n      memberships: PaginatedResourcesWithDefault<OrganizationMembershipResource>;\n      /**\n       * Includes a paginated list of the organization's invitations.\n       */\n      invitations: PaginatedResourcesWithDefault<OrganizationInvitationResource>;\n    }\n  | {\n      isLoaded: true;\n      organization: OrganizationResource;\n      membership: undefined;\n      domains: PaginatedResourcesWithDefault<OrganizationDomainResource>;\n      membershipRequests: PaginatedResourcesWithDefault<OrganizationMembershipRequestResource>;\n      memberships: PaginatedResourcesWithDefault<OrganizationMembershipResource>;\n      invitations: PaginatedResourcesWithDefault<OrganizationInvitationResource>;\n    }\n  | {\n      isLoaded: boolean;\n      organization: OrganizationResource | null;\n      membership: OrganizationMembershipResource | null | undefined;\n      domains: PaginatedResources<\n        OrganizationDomainResource,\n        T['membershipRequests'] extends { infinite: true } ? true : false\n      > | null;\n      membershipRequests: PaginatedResources<\n        OrganizationMembershipRequestResource,\n        T['membershipRequests'] extends { infinite: true } ? true : false\n      > | null;\n      memberships: PaginatedResources<\n        OrganizationMembershipResource,\n        T['memberships'] extends { infinite: true } ? true : false\n      > | null;\n      invitations: PaginatedResources<\n        OrganizationInvitationResource,\n        T['invitations'] extends { infinite: true } ? true : false\n      > | null;\n    };\n\ntype UseOrganization = <T extends UseOrganizationParams>(params?: T) => UseOrganizationReturn<T>;\n\nconst undefinedPaginatedResource = {\n  data: undefined,\n  count: undefined,\n  error: undefined,\n  isLoading: false,\n  isFetching: false,\n  isError: false,\n  page: undefined,\n  pageCount: undefined,\n  fetchPage: undefined,\n  fetchNext: undefined,\n  fetchPrevious: undefined,\n  hasNextPage: false,\n  hasPreviousPage: false,\n  revalidate: undefined,\n  setData: undefined,\n} as const;\n\n/**\n * The `useOrganization()` hook retrieves attributes of the currently active organization.\n *\n * @example\n * ### Expand and paginate attributes\n *\n * To keep network usage to a minimum, developers are required to opt-in by specifying which resource they need to fetch and paginate through. By default, the `memberships`, `invitations`, `membershipRequests`, and `domains` attributes are not populated. You must pass `true` or an object with the desired properties to fetch and paginate the data.\n *\n * ```jsx\n * // invitations.data will never be populated.\n * const { invitations } = useOrganization()\n *\n * // Use default values to fetch invitations, such as initialPage = 1 and pageSize = 10\n * const { invitations } = useOrganization({\n *   invitations: true,\n * })\n *\n * // Pass your own values to fetch invitations\n * const { invitations } = useOrganization({\n *   invitations: {\n *     pageSize: 20,\n *     initialPage: 2, // skips the first page\n *   },\n * })\n *\n * // Aggregate pages in order to render an infinite list\n * const { invitations } = useOrganization({\n *   invitations: {\n *     infinite: true,\n *   },\n * })\n * ```\n *\n * @example\n * ### Infinite pagination\n *\n * The following example demonstrates how to use the `infinite` property to fetch and append new data to the existing list. The `memberships` attribute will be populated with the first page of the organization's memberships. When the \"Load more\" button is clicked, the `fetchNext` helper function will be called to append the next page of memberships to the list.\n *\n * ```jsx\n * import { useOrganization } from '@clerk/clerk-react'\n *\n * export default function MemberList() {\n *   const { memberships } = useOrganization({\n *     memberships: {\n *       infinite: true, // Append new data to the existing list\n *       keepPreviousData: true, // Persist the cached data until the new data has been fetched\n *     },\n *   })\n *\n *   if (!memberships) {\n *     // Handle loading state\n *     return null\n *   }\n *\n *   return (\n *     <div>\n *       <h2>Organization members</h2>\n *       <ul>\n *         {memberships.data?.map((membership) => (\n *           <li key={membership.id}>\n *             {membership.publicUserData.firstName} {membership.publicUserData.lastName} <\n *             {membership.publicUserData.identifier}> :: {membership.role}\n *           </li>\n *         ))}\n *       </ul>\n *\n *       <button\n *         disabled={!memberships.hasNextPage} // Disable the button if there are no more available pages to be fetched\n *         onClick={memberships.fetchNext}\n *       >\n *         Load more\n *       </button>\n *     </div>\n *   )\n * }\n * ```\n *\n * @example\n * ### Simple pagination\n *\n * The following example demonstrates how to use the `fetchPrevious` and `fetchNext` helper functions to paginate through the data. The `memberships` attribute will be populated with the first page of the organization's memberships. When the \"Previous page\" or \"Next page\" button is clicked, the `fetchPrevious` or `fetchNext` helper function will be called to fetch the previous or next page of memberships.\n *\n * Notice the difference between this example's pagination and the infinite pagination example above.\n *\n * ```jsx\n * import { useOrganization } from '@clerk/clerk-react'\n *\n * export default function MemberList() {\n *   const { memberships } = useOrganization({\n *     memberships: {\n *       keepPreviousData: true, // Persist the cached data until the new data has been fetched\n *     },\n *   })\n *\n *   if (!memberships) {\n *     // Handle loading state\n *     return null\n *   }\n *\n *   return (\n *     <div>\n *       <h2>Organization members</h2>\n *       <ul>\n *         {memberships.data?.map((membership) => (\n *           <li key={membership.id}>\n *             {membership.publicUserData.firstName} {membership.publicUserData.lastName} <\n *             {membership.publicUserData.identifier}> :: {membership.role}\n *           </li>\n *         ))}\n *       </ul>\n *\n *       <button disabled={!memberships.hasPreviousPage} onClick={memberships.fetchPrevious}>\n *         Previous page\n *       </button>\n *\n *       <button disabled={!memberships.hasNextPage} onClick={memberships.fetchNext}>\n *         Next page\n *       </button>\n *     </div>\n *   )\n * }\n * ```\n */\nexport const useOrganization: UseOrganization = params => {\n  const {\n    domains: domainListParams,\n    membershipRequests: membershipRequestsListParams,\n    memberships: membersListParams,\n    invitations: invitationsListParams,\n  } = params || {};\n\n  useAssertWrappedByClerkProvider('useOrganization');\n\n  const { organization } = useOrganizationContext();\n  const session = useSessionContext();\n\n  const domainSafeValues = useWithSafeValues(domainListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false,\n    enrollmentMode: undefined,\n  });\n\n  const membershipRequestSafeValues = useWithSafeValues(membershipRequestsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    status: 'pending',\n    keepPreviousData: false,\n    infinite: false,\n  });\n\n  const membersSafeValues = useWithSafeValues(membersListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    role: undefined,\n    keepPreviousData: false,\n    infinite: false,\n    query: undefined,\n  });\n\n  const invitationsSafeValues = useWithSafeValues(invitationsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    status: ['pending'],\n    keepPreviousData: false,\n    infinite: false,\n  });\n\n  const clerk = useClerkInstanceContext();\n\n  clerk.telemetry?.record(eventMethodCalled('useOrganization'));\n\n  const domainParams =\n    typeof domainListParams === 'undefined'\n      ? undefined\n      : {\n          initialPage: domainSafeValues.initialPage,\n          pageSize: domainSafeValues.pageSize,\n          enrollmentMode: domainSafeValues.enrollmentMode,\n        };\n\n  const membershipRequestParams =\n    typeof membershipRequestsListParams === 'undefined'\n      ? undefined\n      : {\n          initialPage: membershipRequestSafeValues.initialPage,\n          pageSize: membershipRequestSafeValues.pageSize,\n          status: membershipRequestSafeValues.status,\n        };\n\n  const membersParams =\n    typeof membersListParams === 'undefined'\n      ? undefined\n      : {\n          initialPage: membersSafeValues.initialPage,\n          pageSize: membersSafeValues.pageSize,\n          role: membersSafeValues.role,\n          query: membersSafeValues.query,\n        };\n\n  const invitationsParams =\n    typeof invitationsListParams === 'undefined'\n      ? undefined\n      : {\n          initialPage: invitationsSafeValues.initialPage,\n          pageSize: invitationsSafeValues.pageSize,\n          status: invitationsSafeValues.status,\n        };\n\n  const domains = usePagesOrInfinite<GetDomainsParams, ClerkPaginatedResponse<OrganizationDomainResource>>(\n    {\n      ...domainParams,\n    },\n    organization?.getDomains,\n    {\n      keepPreviousData: domainSafeValues.keepPreviousData,\n      infinite: domainSafeValues.infinite,\n      enabled: !!domainParams,\n    },\n    {\n      type: 'domains',\n      organizationId: organization?.id,\n    },\n  );\n\n  const membershipRequests = usePagesOrInfinite<\n    GetMembershipRequestParams,\n    ClerkPaginatedResponse<OrganizationMembershipRequestResource>\n  >(\n    {\n      ...membershipRequestParams,\n    },\n    organization?.getMembershipRequests,\n    {\n      keepPreviousData: membershipRequestSafeValues.keepPreviousData,\n      infinite: membershipRequestSafeValues.infinite,\n      enabled: !!membershipRequestParams,\n    },\n    {\n      type: 'membershipRequests',\n      organizationId: organization?.id,\n    },\n  );\n\n  const memberships = usePagesOrInfinite<GetMembersParams, ClerkPaginatedResponse<OrganizationMembershipResource>>(\n    membersParams || {},\n    organization?.getMemberships,\n    {\n      keepPreviousData: membersSafeValues.keepPreviousData,\n      infinite: membersSafeValues.infinite,\n      enabled: !!membersParams,\n    },\n    {\n      type: 'members',\n      organizationId: organization?.id,\n    },\n  );\n\n  const invitations = usePagesOrInfinite<GetInvitationsParams, ClerkPaginatedResponse<OrganizationInvitationResource>>(\n    {\n      ...invitationsParams,\n    },\n    organization?.getInvitations,\n    {\n      keepPreviousData: invitationsSafeValues.keepPreviousData,\n      infinite: invitationsSafeValues.infinite,\n      enabled: !!invitationsParams,\n    },\n    {\n      type: 'invitations',\n      organizationId: organization?.id,\n    },\n  );\n\n  if (organization === undefined) {\n    return {\n      isLoaded: false,\n      organization: undefined,\n      membership: undefined,\n      domains: undefinedPaginatedResource,\n      membershipRequests: undefinedPaginatedResource,\n      memberships: undefinedPaginatedResource,\n      invitations: undefinedPaginatedResource,\n    };\n  }\n\n  if (organization === null) {\n    return {\n      isLoaded: true,\n      organization: null,\n      membership: null,\n      domains: null,\n      membershipRequests: null,\n      memberships: null,\n      invitations: null,\n    };\n  }\n\n  /** In SSR context we include only the organization object when loadOrg is set to true. */\n  if (!clerk.loaded && organization) {\n    return {\n      isLoaded: true,\n      organization,\n      membership: undefined,\n      domains: undefinedPaginatedResource,\n      membershipRequests: undefinedPaginatedResource,\n      memberships: undefinedPaginatedResource,\n      invitations: undefinedPaginatedResource,\n    };\n  }\n\n  return {\n    isLoaded: clerk.loaded,\n    organization,\n    membership: getCurrentOrganizationMembership(session!.user.organizationMemberships, organization.id), // your membership in the current org\n    domains,\n    membershipRequests,\n    memberships,\n    invitations,\n  };\n};\n","import type {\n  ClerkPaginatedResponse,\n  CreateOrganizationParams,\n  GetUserOrganizationInvitationsParams,\n  GetUserOrganizationMembershipParams,\n  GetUserOrganizationSuggestionsParams,\n  OrganizationMembershipResource,\n  OrganizationResource,\n  OrganizationSuggestionResource,\n  SetActive,\n  UserOrganizationInvitationResource,\n} from '@clerk/types';\n\nimport { eventMethodCalled } from '../../telemetry/events/method-called';\nimport { useAssertWrappedByClerkProvider, useClerkInstanceContext, useUserContext } from '../contexts';\nimport type { PaginatedHookConfig, PaginatedResources, PaginatedResourcesWithDefault } from '../types';\nimport { usePagesOrInfinite, useWithSafeValues } from './usePagesOrInfinite';\n\ntype UseOrganizationListParams = {\n  /**\n   * `true` or an object with any of the properties described in [Shared properties](https://clerk.com/docs/references/react/use-organization-list#shared-properties). If set to `true`, all default properties will be used.\n   */\n  userMemberships?: true | PaginatedHookConfig<GetUserOrganizationMembershipParams>;\n  /**\n   * `true` or an object with [`status: OrganizationInvitationStatus`](https://clerk.com/docs/references/react/use-organization-list#organization-invitation-status) or any of the properties described in [Shared properties](https://clerk.com/docs/references/react/use-organization-list#shared-properties). If set to `true`, all default properties will be used.\n   */\n  userInvitations?: true | PaginatedHookConfig<GetUserOrganizationInvitationsParams>;\n  /**\n   * `true` or an object with [`status: OrganizationSuggestionsStatus | OrganizationSuggestionStatus[]`](https://clerk.com/docs/references/react/use-organization-list#organization-suggestion-status) or any of the properties described in [Shared properties](https://clerk.com/docs/references/react/use-organization-list#shared-properties). If set to `true`, all default properties will be used.\n   */\n  userSuggestions?: true | PaginatedHookConfig<GetUserOrganizationSuggestionsParams>;\n};\n\nconst undefinedPaginatedResource = {\n  data: undefined,\n  count: undefined,\n  error: undefined,\n  isLoading: false,\n  isFetching: false,\n  isError: false,\n  page: undefined,\n  pageCount: undefined,\n  fetchPage: undefined,\n  fetchNext: undefined,\n  fetchPrevious: undefined,\n  hasNextPage: false,\n  hasPreviousPage: false,\n  revalidate: undefined,\n  setData: undefined,\n} as const;\n\ntype UseOrganizationList = <T extends UseOrganizationListParams>(\n  params?: T,\n) =>\n  | {\n      /**\n       * A boolean that indicates whether Clerk has completed initialization. Initially `false`, becomes `true` once Clerk loads.\n       */\n      isLoaded: false;\n      /**\n       * A function that returns a `Promise` which resolves to the newly created `Organization`.\n       */\n      createOrganization: undefined;\n      /**\n       * A function that sets the active session and/or organization.\n       */\n      setActive: undefined;\n      /**\n       * Returns `PaginatedResources` which includes a list of the user's organization memberships.\n       */\n      userMemberships: PaginatedResourcesWithDefault<OrganizationMembershipResource>;\n      /**\n       * Returns `PaginatedResources` which includes a list of the user's organization invitations.\n       */\n      userInvitations: PaginatedResourcesWithDefault<UserOrganizationInvitationResource>;\n      /**\n       * Returns `PaginatedResources` which includes a list of suggestions for organizations that the user can join.\n       */\n      userSuggestions: PaginatedResourcesWithDefault<OrganizationSuggestionResource>;\n    }\n  | {\n      /**\n       * A boolean that indicates whether Clerk has completed initialization. Initially `false`, becomes `true` once Clerk loads.\n       */\n      isLoaded: boolean;\n      /**\n       * A function that returns a `Promise` which resolves to the newly created `Organization`.\n       */\n      createOrganization: (params: CreateOrganizationParams) => Promise<OrganizationResource>;\n      /**\n       * A function that sets the active session and/or organization.\n       */\n      setActive: SetActive;\n      /**\n       * Returns `PaginatedResources` which includes a list of the user's organization memberships.\n       */\n      userMemberships: PaginatedResources<\n        OrganizationMembershipResource,\n        T['userMemberships'] extends { infinite: true } ? true : false\n      >;\n      /**\n       * Returns `PaginatedResources` which includes a list of the user's organization invitations.\n       */\n      userInvitations: PaginatedResources<\n        UserOrganizationInvitationResource,\n        T['userInvitations'] extends { infinite: true } ? true : false\n      >;\n      /**\n       * Returns `PaginatedResources` which includes a list of suggestions for organizations that the user can join.\n       */\n      userSuggestions: PaginatedResources<\n        OrganizationSuggestionResource,\n        T['userSuggestions'] extends { infinite: true } ? true : false\n      >;\n    };\n\n/**\n * The `useOrganizationList()` hook provides access to the current user's organization memberships, invitations, and suggestions. It also includes methods for creating new organizations and managing the active organization.\n */\nexport const useOrganizationList: UseOrganizationList = params => {\n  const { userMemberships, userInvitations, userSuggestions } = params || {};\n\n  useAssertWrappedByClerkProvider('useOrganizationList');\n\n  const userMembershipsSafeValues = useWithSafeValues(userMemberships, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false,\n  });\n\n  const userInvitationsSafeValues = useWithSafeValues(userInvitations, {\n    initialPage: 1,\n    pageSize: 10,\n    status: 'pending',\n    keepPreviousData: false,\n    infinite: false,\n  });\n\n  const userSuggestionsSafeValues = useWithSafeValues(userSuggestions, {\n    initialPage: 1,\n    pageSize: 10,\n    status: 'pending',\n    keepPreviousData: false,\n    infinite: false,\n  });\n\n  const clerk = useClerkInstanceContext();\n  const user = useUserContext();\n\n  clerk.telemetry?.record(eventMethodCalled('useOrganizationList'));\n\n  const userMembershipsParams =\n    typeof userMemberships === 'undefined'\n      ? undefined\n      : {\n          initialPage: userMembershipsSafeValues.initialPage,\n          pageSize: userMembershipsSafeValues.pageSize,\n        };\n\n  const userInvitationsParams =\n    typeof userInvitations === 'undefined'\n      ? undefined\n      : {\n          initialPage: userInvitationsSafeValues.initialPage,\n          pageSize: userInvitationsSafeValues.pageSize,\n          status: userInvitationsSafeValues.status,\n        };\n\n  const userSuggestionsParams =\n    typeof userSuggestions === 'undefined'\n      ? undefined\n      : {\n          initialPage: userSuggestionsSafeValues.initialPage,\n          pageSize: userSuggestionsSafeValues.pageSize,\n          status: userSuggestionsSafeValues.status,\n        };\n\n  const isClerkLoaded = !!(clerk.loaded && user);\n\n  const memberships = usePagesOrInfinite<\n    GetUserOrganizationMembershipParams,\n    ClerkPaginatedResponse<OrganizationMembershipResource>\n  >(\n    userMembershipsParams || {},\n    user?.getOrganizationMemberships,\n    {\n      keepPreviousData: userMembershipsSafeValues.keepPreviousData,\n      infinite: userMembershipsSafeValues.infinite,\n      enabled: !!userMembershipsParams,\n    },\n    {\n      type: 'userMemberships',\n      userId: user?.id,\n    },\n  );\n\n  const invitations = usePagesOrInfinite<\n    GetUserOrganizationInvitationsParams,\n    ClerkPaginatedResponse<UserOrganizationInvitationResource>\n  >(\n    {\n      ...userInvitationsParams,\n    },\n    user?.getOrganizationInvitations,\n    {\n      keepPreviousData: userInvitationsSafeValues.keepPreviousData,\n      infinite: userInvitationsSafeValues.infinite,\n      enabled: !!userInvitationsParams,\n    },\n    {\n      type: 'userInvitations',\n      userId: user?.id,\n    },\n  );\n\n  const suggestions = usePagesOrInfinite<\n    GetUserOrganizationSuggestionsParams,\n    ClerkPaginatedResponse<OrganizationSuggestionResource>\n  >(\n    {\n      ...userSuggestionsParams,\n    },\n    user?.getOrganizationSuggestions,\n    {\n      keepPreviousData: userSuggestionsSafeValues.keepPreviousData,\n      infinite: userSuggestionsSafeValues.infinite,\n      enabled: !!userSuggestionsParams,\n    },\n    {\n      type: 'userSuggestions',\n      userId: user?.id,\n    },\n  );\n\n  // TODO: Properly check for SSR user values\n  if (!isClerkLoaded) {\n    return {\n      isLoaded: false,\n      createOrganization: undefined,\n      setActive: undefined,\n      userMemberships: undefinedPaginatedResource,\n      userInvitations: undefinedPaginatedResource,\n      userSuggestions: undefinedPaginatedResource,\n    };\n  }\n\n  return {\n    isLoaded: isClerkLoaded,\n    setActive: clerk.setActive,\n    createOrganization: clerk.createOrganization,\n    userMemberships: memberships,\n    userInvitations: invitations,\n    userSuggestions: suggestions,\n  };\n};\n","import React from 'react';\n\n/**\n * @internal\n */\nexport const useSafeLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n","import type { UseSessionReturn } from '@clerk/types';\n\nimport { useAssertWrappedByClerkProvider, useSessionContext } from '../contexts';\n\ntype UseSession = () => UseSessionReturn;\n\n/**\n * The `useSession()` hook provides access to the current user's [`Session`](https://clerk.com/docs/references/javascript/session) object, as well as helpers for setting the active session.\n *\n * @example\n * ### Access the `Session` object\n *\n * The following example uses the `useSession()` hook to access the `Session` object, which has the `lastActiveAt` property. The `lastActiveAt` property is a `Date` object used to show the time the session was last active.\n *\n * ```tsx {{ filename: 'src/Home.tsx' }}\n * import { useSession } from '@clerk/clerk-react'\n *\n * export default function Home() {\n *   const { isLoaded, session, isSignedIn } = useSession()\n *\n *   if (!isLoaded) {\n *     // Handle loading state\n *     return null\n *   }\n *   if (!isSignedIn) {\n *     // Handle signed out state\n *     return null\n *   }\n *\n *   return (\n *     <div>\n *       <p>This session has been active since {session.lastActiveAt.toLocaleString()}</p>\n *     </div>\n *   )\n * }\n * ```\n */\nexport const useSession: UseSession = () => {\n  useAssertWrappedByClerkProvider('useSession');\n\n  const session = useSessionContext();\n\n  if (session === undefined) {\n    return { isLoaded: false, isSignedIn: undefined, session: undefined };\n  }\n\n  if (session === null) {\n    return { isLoaded: true, isSignedIn: false, session: null };\n  }\n\n  return { isLoaded: true, isSignedIn: true, session };\n};\n","import type { UseSessionListReturn } from '@clerk/types';\n\nimport { useAssertWrappedByClerkProvider, useClerkInstanceContext, useClientContext } from '../contexts';\n\n/**\n * The `useSessionList()` hook returns an array of [`Session`](https://clerk.com/docs/references/javascript/session) objects that have been registered on the client device.\n *\n * @example\n * ### Get a list of sessions\n *\n * The following example uses `useSessionList()` to get a list of sessions that have been registered on the client device. The `sessions` property is used to show the number of times the user has visited the page.\n *\n * ```tsx {{ filename: 'src/Home.tsx' }}\n * import { useSessionList } from '@clerk/clerk-react'\n *\n * export default function Home() {\n *   const { isLoaded, sessions } = useSessionList()\n *\n *   if (!isLoaded) {\n *     // Handle loading state\n *     return null\n *   }\n *\n *   return (\n *     <div>\n *       <p>Welcome back. You've been here {sessions.length} times before.</p>\n *     </div>\n *   )\n * }\n * ```\n */\nexport const useSessionList = (): UseSessionListReturn => {\n  useAssertWrappedByClerkProvider('useSessionList');\n\n  const isomorphicClerk = useClerkInstanceContext();\n  const client = useClientContext();\n\n  if (!client) {\n    return { isLoaded: false, sessions: undefined, setActive: undefined };\n  }\n\n  return {\n    isLoaded: true,\n    sessions: client.sessions,\n    setActive: isomorphicClerk.setActive,\n  };\n};\n","import type { UseUserReturn } from '@clerk/types';\n\nimport { useAssertWrappedByClerkProvider, useUserContext } from '../contexts';\n\n/**\n * The `useUser()` hook provides access to the current user's [`User`](https://clerk.com/docs/references/javascript/user) object, which contains all the data for a single user in your application and provides methods to manage their account. This hook also allows you to check if the user is signed in and if Clerk has loaded and initialized.\n *\n * @example\n * ### Get the current user\n *\n * The following example uses the `useUser()` hook to access the [`User`](https://clerk.com/docs/references/javascript/user) object, which contains the current user's data such as their full name. The `isLoaded` and `isSignedIn` properties are used to handle the loading state and to check if the user is signed in, respectively.\n *\n * ```tsx {{ filename: 'src/Example.tsx' }}\n * export default function Example() {\n *   const { isSignedIn, user, isLoaded } = useUser()\n *\n *   if (!isLoaded) {\n *     return <div>Loading...</div>\n *   }\n *\n *   if (!isSignedIn) {\n *     return <div>Sign in to view this page</div>\n *   }\n *\n *   return <div>Hello {user.firstName}!</div>\n * }\n * ```\n *\n * @example\n * ### Update user data\n *\n * The following example uses the `useUser()` hook to access the [`User`](https://clerk.com/docs/references/javascript/user) object, which calls the [`update()`](https://clerk.com/docs/references/javascript/user#update) method to update the current user's information.\n *\n * ```tsx {{ filename: 'src/Home.tsx' }}\n * export default function Home() {\n *   const { isLoaded, user } = useUser()\n *\n *   if (!isLoaded) {\n *     // Handle loading state\n *     return null\n *   }\n *\n *   if (!user) return null\n *\n *   const updateUser = async () => {\n *     await user.update({\n *       firstName: 'John',\n *       lastName: 'Doe',\n *     })\n *   }\n *\n *   return (\n *     <>\n *       <button onClick={updateUser}>Update your name</button>\n *       <p>user.firstName: {user?.firstName}</p>\n *       <p>user.lastName: {user?.lastName}</p>\n *     </>\n *   )\n * }\n * ```\n *\n * @example\n * ### Reload user data\n *\n * The following example uses the `useUser()` hook to access the [`User`](https://clerk.com/docs/references/javascript/user) object, which calls the [`reload()`](https://clerk.com/docs/references/javascript/user#reload) method to get the latest user's information.\n *\n * ```tsx {{ filename: 'src/Home.tsx' }}\n * export default function Home() {\n *   const { isLoaded, user } = useUser()\n *\n *   if (!isLoaded) {\n *     // Handle loading state\n *     return null\n *   }\n *\n *   if (!user) return null\n *\n *   const updateUser = async () => {\n *     // Update data via an API endpoint\n *     const updateMetadata = await fetch('/api/updateMetadata')\n *\n *     // Check if the update was successful\n *     if (updateMetadata.message !== 'success') {\n *       throw new Error('Error updating')\n *     }\n *\n *     // If the update was successful, reload the user data\n *     await user.reload()\n *   }\n *\n *   return (\n *     <>\n *       <button onClick={updateUser}>Update your metadata</button>\n *       <p>user role: {user?.publicMetadata.role}</p>\n *     </>\n *   )\n * }\n * ```\n */\nexport function useUser(): UseUserReturn {\n  useAssertWrappedByClerkProvider('useUser');\n\n  const user = useUserContext();\n\n  if (user === undefined) {\n    return { isLoaded: false, isSignedIn: undefined, user: undefined };\n  }\n\n  if (user === null) {\n    return { isLoaded: true, isSignedIn: false, user: null };\n  }\n\n  return { isLoaded: true, isSignedIn: true, user };\n}\n","import type { LoadedClerk } from '@clerk/types';\n\nimport { useAssertWrappedByClerkProvider, useClerkInstanceContext } from '../contexts';\n\n/**\n * > [!WARNING]\n * > This hook should only be used for advanced use cases, such as building a completely custom OAuth flow or as an escape hatch to access to the `Clerk` object.\n *\n * The `useClerk()` hook provides access to the [`Clerk`](https://clerk.com/docs/references/javascript/clerk) object, allowing you to build alternatives to any Clerk Component.\n *\n * @returns The `useClerk()` hook returns the `Clerk` object, which includes all the methods and properties listed in the [`Clerk` reference](https://clerk.com/docs/references/javascript/clerk).\n *\n * @example\n *\n * The following example uses the `useClerk()` hook to access the `clerk` object. The `clerk` object is used to call the [`openSignIn()`](https://clerk.com/docs/references/javascript/clerk#sign-in) method to open the sign-in modal.\n *\n * ```tsx {{ filename: 'src/Home.tsx' }}\n * import { useClerk } from '@clerk/clerk-react'\n *\n * export default function Home() {\n *   const clerk = useClerk()\n *\n *   return <button onClick={() => clerk.openSignIn({})}>Sign in</button>\n * }\n * ```\n */\nexport const useClerk = (): LoadedClerk => {\n  useAssertWrappedByClerkProvider('useClerk');\n  return useClerkInstanceContext();\n};\n","import { dequal as deepEqual } from 'dequal';\nimport React from 'react';\n\ntype UseMemoFactory<T> = () => T;\ntype UseMemoDependencyArray = Exclude<Parameters<typeof React.useMemo>[1], 'undefined'>;\ntype UseDeepEqualMemo = <T>(factory: UseMemoFactory<T>, dependencyArray: UseMemoDependencyArray) => T;\n\nconst useDeepEqualMemoize = <T>(value: T) => {\n  const ref = React.useRef<T>(value);\n  if (!deepEqual(value, ref.current)) {\n    ref.current = value;\n  }\n  return React.useMemo(() => ref.current, [ref.current]);\n};\n\n/**\n * @internal\n */\nexport const useDeepEqualMemo: UseDeepEqualMemo = (factory, dependencyArray) => {\n  return React.useMemo(factory, useDeepEqualMemoize(dependencyArray));\n};\n\n/**\n * @internal\n */\nexport const isDeeplyEqual = deepEqual;\n","import type { Clerk } from '@clerk/types';\nimport { useMemo, useRef } from 'react';\n\nimport { validateReverificationConfig } from '../../authorization';\nimport { isReverificationHint, reverificationError } from '../../authorization-errors';\nimport { ClerkRuntimeError, isClerkAPIResponseError, isClerkRuntimeError } from '../../error';\nimport { createDeferredPromise } from '../../utils/createDeferredPromise';\nimport { useClerk } from './useClerk';\nimport { useSafeLayoutEffect } from './useSafeLayoutEffect';\n\nconst CLERK_API_REVERIFICATION_ERROR_CODE = 'session_reverification_required';\n\nasync function resolveResult<T>(result: Promise<T> | T): Promise<T | ReturnType<typeof reverificationError>> {\n  try {\n    const r = await result;\n    if (r instanceof Response) {\n      return r.json();\n    }\n    return r;\n  } catch (e) {\n    // Treat fapi assurance as an assurance hint\n    if (isClerkAPIResponseError(e) && e.errors.find(({ code }) => code === CLERK_API_REVERIFICATION_ERROR_CODE)) {\n      return reverificationError();\n    }\n\n    // rethrow\n    throw e;\n  }\n}\n\ntype ExcludeClerkError<T, P> = T extends { clerk_error: any } ? (P extends { throwOnCancel: true } ? never : null) : T;\n\n/**\n * The optional options object.\n * @interface\n */\ntype UseReverificationOptions = {\n  /**\n   * A callback function that is invoked when the user cancels the reverification process.\n   */\n  onCancel?: () => void;\n  /**\n   * Determines if an error should throw when the user cancels the reverification process. Defaults to `false`.\n   */\n  throwOnCancel?: boolean;\n};\n\n/**\n * @interface\n */\ntype UseReverificationResult<\n  Fetcher extends (...args: any[]) => Promise<any> | undefined,\n  Options extends UseReverificationOptions,\n> = readonly [(...args: Parameters<Fetcher>) => Promise<ExcludeClerkError<Awaited<ReturnType<Fetcher>>, Options>>];\n\n/**\n * @interface\n */\ntype UseReverification = <\n  Fetcher extends (...args: any[]) => Promise<any> | undefined,\n  Options extends UseReverificationOptions,\n>(\n  fetcher: Fetcher,\n  options?: Options,\n) => UseReverificationResult<Fetcher, Options>;\n\ntype CreateReverificationHandlerParams = UseReverificationOptions & {\n  openUIComponent: Clerk['__internal_openReverification'];\n};\n\nfunction createReverificationHandler(params: CreateReverificationHandlerParams) {\n  function assertReverification<Fetcher extends (...args: any[]) => Promise<any> | undefined>(\n    fetcher: Fetcher,\n  ): (\n    ...args: Parameters<Fetcher>\n  ) => Promise<ExcludeClerkError<Awaited<ReturnType<Fetcher>>, Parameters<Fetcher>[1]>> {\n    return (async (...args: Parameters<Fetcher>) => {\n      let result = await resolveResult(fetcher(...args));\n\n      if (isReverificationHint(result)) {\n        /**\n         * Create a promise\n         */\n        const resolvers = createDeferredPromise();\n\n        const isValidMetadata = validateReverificationConfig(result.clerk_error.metadata?.reverification);\n\n        /**\n         * On success resolve the pending promise\n         * On cancel reject the pending promise\n         */\n        params.openUIComponent?.({\n          level: isValidMetadata ? isValidMetadata().level : undefined,\n          afterVerification() {\n            resolvers.resolve(true);\n          },\n          afterVerificationCancelled() {\n            resolvers.reject(\n              new ClerkRuntimeError('User cancelled attempted verification', {\n                code: 'reverification_cancelled',\n              }),\n            );\n          },\n        });\n\n        try {\n          /**\n           * Wait until the promise from above have been resolved or rejected\n           */\n          await resolvers.promise;\n        } catch (e) {\n          if (params.onCancel) {\n            params.onCancel();\n          }\n\n          if (isClerkRuntimeError(e) && e.code === 'reverification_cancelled' && params.throwOnCancel) {\n            throw e;\n          }\n\n          return null;\n        }\n\n        /**\n         * After the promise resolved successfully try the original request one more time\n         */\n        result = await resolveResult(fetcher(...args));\n      }\n\n      return result;\n    }) as ExcludeClerkError<Awaited<ReturnType<Fetcher>>, Parameters<Fetcher>[1]>;\n  }\n\n  return assertReverification;\n}\n\n/**\n * > [!WARNING]\n * > This feature is currently in public beta. **It is not recommended for production use.**\n * >\n * > Depending on the SDK you're using, this feature requires `@clerk/nextjs@6.5.0` or later, `@clerk/clerk-react@5.17.0` or later, and `@clerk/clerk-js@5.35.0` or later.\n *\n * The `useReverification()` hook is used to handle a session's reverification flow. If a request requires reverification, a modal will display, prompting the user to verify their credentials. Upon successful verification, the original request will automatically retry.\n *\n * @returns The `useReverification()` hook returns an array with the \"enhanced\" fetcher.\n *\n * @example\n * ### Handle cancellation of the reverification process\n *\n * The following example demonstrates how to handle scenarios where a user cancels the reverification flow, such as closing the modal, which might result in `myData` being `null`.\n *\n * In the following example, `myFetcher` would be a function in your backend that fetches data from the route that requires reverification. See the [guide on how to require reverification](https://clerk.com/docs/guides/reverification) for more information.\n *\n * ```tsx {{ filename: 'src/components/MyButton.tsx' }}\n * import { useReverification } from '@clerk/react'\n *\n * export function MyButton() {\n *   const [enhancedFetcher] = useReverification(myFetcher)\n *\n *   const handleClick = async () => {\n *     const myData = await enhancedFetcher()\n *     // If `myData` is null, the user canceled the reverification process\n *     // You can choose how your app responds. This example returns null.\n *     if (!myData) return\n *   }\n *\n *   return <button onClick={handleClick}>Update User</button>\n * }\n * ```\n *\n * @example\n * ### Handle `throwOnCancel`\n *\n * When `throwOnCancel` is set to `true`, the fetcher will throw a `ClerkRuntimeError` with the code `\"reverification_cancelled\"` if the user cancels the reverification flow (for example, by closing the modal). This error can be caught and handled according to your app's needs. For example, by displaying a toast notification to the user or silently ignoring the cancellation.\n *\n * In this example, `myFetcher` would be a function in your backend that fetches data from the route that requires reverification. See the [guide on how to require reverification](https://clerk.com/docs/guides/reverification) for more information.\n *\n * ```tsx {{ filename: 'src/components/MyButton.tsx' }}\n * import { useReverification } from '@clerk/clerk-react'\n * import { isClerkRuntimeError } from '@clerk/clerk-react/errors'\n *\n * export function MyButton() {\n *   const [enhancedFetcher] = useReverification(myFetcher, { throwOnCancel: true })\n *\n *   const handleClick = async () => {\n *     try {\n *       const myData = await enhancedFetcher()\n *     } catch (e) {\n *       // Handle if user cancels the reverification process\n *       if (isClerkRuntimeError(e) && e.code === 'reverification_cancelled') {\n *         console.error('User cancelled reverification', e.code)\n *       }\n *     }\n *   }\n *\n *   return <button onClick={handleClick}>Update user</button>\n * }\n * ```\n */\nexport const useReverification: UseReverification = (fetcher, options) => {\n  const { __internal_openReverification } = useClerk();\n  const fetcherRef = useRef(fetcher);\n  const optionsRef = useRef(options);\n\n  const handleReverification = useMemo(() => {\n    const handler = createReverificationHandler({\n      openUIComponent: __internal_openReverification,\n      ...optionsRef.current,\n    })(fetcherRef.current);\n    return [handler] as const;\n  }, [__internal_openReverification, fetcherRef.current, optionsRef.current]);\n\n  // Keep fetcher and options ref in sync\n  useSafeLayoutEffect(() => {\n    fetcherRef.current = fetcher;\n    optionsRef.current = options;\n  });\n\n  return handleReverification;\n};\n","export const isDevelopmentEnvironment = (): boolean => {\n  try {\n    return process.env.NODE_ENV === 'development';\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  // TODO: add support for import.meta.env.DEV that is being used by vite\n\n  return false;\n};\n\nexport const isTestEnvironment = (): boolean => {\n  try {\n    return process.env.NODE_ENV === 'test';\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  // TODO: add support for import.meta.env.DEV that is being used by vite\n  return false;\n};\n\nexport const isProductionEnvironment = (): boolean => {\n  try {\n    return process.env.NODE_ENV === 'production';\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  // TODO: add support for import.meta.env.DEV that is being used by vite\n  return false;\n};\n","import { isProductionEnvironment, isTestEnvironment } from './utils/runtimeEnvironment';\n/**\n * Mark class method / function as deprecated.\n *\n * A console WARNING will be displayed when class method / function is invoked.\n *\n * Examples\n * 1. Deprecate class method\n * class Example {\n *   getSomething = (arg1, arg2) => {\n *       deprecated('Example.getSomething', 'Use `getSomethingElse` instead.');\n *       return `getSomethingValue:${arg1 || '-'}:${arg2 || '-'}`;\n *   };\n * }\n *\n * 2. Deprecate function\n * const getSomething = () => {\n *   deprecated('getSomething', 'Use `getSomethingElse` instead.');\n *   return 'getSomethingValue';\n * };\n */\nconst displayedWarnings = new Set<string>();\nexport const deprecated = (fnName: string, warning: string, key?: string): void => {\n  const hideWarning = isTestEnvironment() || isProductionEnvironment();\n  const messageId = key ?? fnName;\n  if (displayedWarnings.has(messageId) || hideWarning) {\n    return;\n  }\n  displayedWarnings.add(messageId);\n\n  console.warn(\n    `Clerk - DEPRECATION WARNING: \"${fnName}\" is deprecated and will be removed in the next major release.\\n${warning}`,\n  );\n};\n/**\n * Mark class property as deprecated.\n *\n * A console WARNING will be displayed when class property is being accessed.\n *\n * 1. Deprecate class property\n * class Example {\n *   something: string;\n *   constructor(something: string) {\n *     this.something = something;\n *   }\n * }\n *\n * deprecatedProperty(Example, 'something', 'Use `somethingElse` instead.');\n *\n * 2. Deprecate class static property\n * class Example {\n *   static something: string;\n * }\n *\n * deprecatedProperty(Example, 'something', 'Use `somethingElse` instead.', true);\n */\ntype AnyClass = new (...args: any[]) => any;\n\nexport const deprecatedProperty = (cls: AnyClass, propName: string, warning: string, isStatic = false): void => {\n  const target = isStatic ? cls : cls.prototype;\n\n  let value = target[propName];\n  Object.defineProperty(target, propName, {\n    get() {\n      deprecated(propName, warning, `${cls.name}:${propName}`);\n      return value;\n    },\n    set(v: unknown) {\n      value = v;\n    },\n  });\n};\n\n/**\n * Mark object property as deprecated.\n *\n * A console WARNING will be displayed when object property is being accessed.\n *\n * 1. Deprecate object property\n * const obj = { something: 'aloha' };\n *\n * deprecatedObjectProperty(obj, 'something', 'Use `somethingElse` instead.');\n */\nexport const deprecatedObjectProperty = (\n  obj: Record<string, any>,\n  propName: string,\n  warning: string,\n  key?: string,\n): void => {\n  let value = obj[propName];\n  Object.defineProperty(obj, propName, {\n    get() {\n      deprecated(propName, warning, key);\n      return value;\n    },\n    set(v: unknown) {\n      value = v;\n    },\n  });\n};\n","import type { ErrorThrowerOptions } from '@clerk/shared/error';\nimport { buildErrorThrower } from '@clerk/shared/error';\n\nconst errorThrower = buildErrorThrower({ packageName: '@clerk/clerk-react' });\n\nexport { errorThrower };\n\n/**\n * Overrides options of the internal errorThrower (eg setting packageName prefix).\n *\n * @internal\n */\nexport function setErrorThrowerOptions(options: ErrorThrowerOptions) {\n  errorThrower.setMessages(options).setPackageName(options);\n}\n","import { createContextAndHook } from '@clerk/shared/react';\nimport type { ActJWTClaim, OrganizationCustomPermissionKey, OrganizationCustomRoleKey } from '@clerk/types';\n\nexport type AuthContextValue = {\n  userId: string | null | undefined;\n  sessionId: string | null | undefined;\n  actor: ActJWTClaim | null | undefined;\n  orgId: string | null | undefined;\n  orgRole: OrganizationCustomRoleKey | null | undefined;\n  orgSlug: string | null | undefined;\n  orgPermissions: OrganizationCustomPermissionKey[] | null | undefined;\n  factorVerificationAge: [number, number] | null;\n};\n\nexport const [AuthContext, useAuthContext] = createContextAndHook<AuthContextValue>('AuthContext');\n","import { ClerkInstanceContext, useClerkInstanceContext } from '@clerk/shared/react';\n\nimport type { IsomorphicClerk } from '../isomorphicClerk';\n\nexport const IsomorphicClerkContext = ClerkInstanceContext;\nexport const useIsomorphicClerkContext = useClerkInstanceContext as unknown as () => IsomorphicClerk;\n","export const noClerkProviderError = 'You must wrap your application in a <ClerkProvider> component.';\n\nexport const multipleClerkProvidersError =\n  \"You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\n\nexport const multipleChildrenInButtonComponent = (name: string) =>\n  `You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\n\nexport const invalidStateError =\n  'Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support';\n\nexport const unsupportedNonBrowserDomainOrProxyUrlFunction =\n  'Unsupported usage of isSatellite, domain or proxyUrl. The usage of isSatellite, domain or proxyUrl as function is not supported in non-browser environments.';\n\nexport const userProfilePageRenderedError =\n  '<UserProfile.Page /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.';\nexport const userProfileLinkRenderedError =\n  '<UserProfile.Link /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.';\n\nexport const organizationProfilePageRenderedError =\n  '<OrganizationProfile.Page /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.';\nexport const organizationProfileLinkRenderedError =\n  '<OrganizationProfile.Link /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.';\n\nexport const customPagesIgnoredComponent = (componentName: string) =>\n  `<${componentName} /> can only accept <${componentName}.Page /> and <${componentName}.Link /> as its children. Any other provided component will be ignored.`;\n\nexport const customPageWrongProps = (componentName: string) =>\n  `Missing props. <${componentName}.Page /> component requires the following props: url, label, labelIcon, alongside with children to be rendered inside the page.`;\n\nexport const customLinkWrongProps = (componentName: string) =>\n  `Missing props. <${componentName}.Link /> component requires the following props: url, label and labelIcon.`;\n\nexport const useAuthHasRequiresRoleOrPermission =\n  'Missing parameters. `has` from `useAuth` requires a permission or role key to be passed. Example usage: `has({permission: \"org:posts:edit\"`';\n\nexport const noPathProvidedError = (componentName: string) =>\n  `The <${componentName}/> component uses path-based routing by default unless a different routing strategy is provided using the \\`routing\\` prop. When path-based routing is used, you need to provide the path where the component is mounted on by using the \\`path\\` prop. Example: <${componentName} path={'/my-path'} />`;\n\nexport const incompatibleRoutingWithPathProvidedError = (componentName: string) =>\n  `The \\`path\\` prop will only be respected when the Clerk component uses path-based routing. To resolve this error, pass \\`routing='path'\\` to the <${componentName}/> component, or drop the \\`path\\` prop to switch to hash-based routing. For more details please refer to our docs: https://clerk.com/docs`;\n\nexport const userButtonIgnoredComponent = `<UserButton /> can only accept <UserButton.UserProfilePage />, <UserButton.UserProfileLink /> and <UserButton.MenuItems /> as its children. Any other provided component will be ignored.`;\n\nexport const customMenuItemsIgnoredComponent =\n  '<UserButton.MenuItems /> component can only accept <UserButton.Action /> and <UserButton.Link /> as its children. Any other provided component will be ignored.';\n\nexport const userButtonMenuItemsRenderedError =\n  '<UserButton.MenuItems /> component needs to be a direct child of `<UserButton />`.';\n\nexport const userButtonMenuActionRenderedError =\n  '<UserButton.Action /> component needs to be a direct child of `<UserButton.MenuItems />`.';\n\nexport const userButtonMenuLinkRenderedError =\n  '<UserButton.Link /> component needs to be a direct child of `<UserButton.MenuItems />`.';\n\nexport const userButtonMenuItemLinkWrongProps =\n  'Missing props. <UserButton.Link /> component requires the following props: href, label and labelIcon.';\n\nexport const userButtonMenuItemsActionWrongsProps =\n  'Missing props. <UserButton.Action /> component requires the following props: label.';\n","import { useAssertWrappedByClerkProvider as useSharedAssertWrappedByClerkProvider } from '@clerk/shared/react';\n\nimport { errorThrower } from '../errors/errorThrower';\n\nexport const useAssertWrappedByClerkProvider = (source: string): void => {\n  useSharedAssertWrappedByClerkProvider(() => {\n    errorThrower.throwMissingClerkProviderError({ source });\n  });\n};\n","import type { IsomorphicClerk } from '../isomorphicClerk';\n\n/**\n * @internal\n */\nconst clerkLoaded = (isomorphicClerk: IsomorphicClerk) => {\n  return new Promise<void>(resolve => {\n    if (isomorphicClerk.loaded) {\n      resolve();\n    }\n    isomorphicClerk.addOnLoaded(resolve);\n  });\n};\n\n/**\n * @internal\n */\nexport const createGetToken = (isomorphicClerk: IsomorphicClerk) => {\n  return async (options: any) => {\n    await clerkLoaded(isomorphicClerk);\n    if (!isomorphicClerk.session) {\n      return null;\n    }\n    return isomorphicClerk.session.getToken(options);\n  };\n};\n\n/**\n * @internal\n */\nexport const createSignOut = (isomorphicClerk: IsomorphicClerk) => {\n  return async (...args: any) => {\n    await clerkLoaded(isomorphicClerk);\n    return isomorphicClerk.signOut(...args);\n  };\n};\n","import { createCheckAuthorization } from '@clerk/shared/authorization';\nimport type { CheckAuthorizationWithCustomPermissions, GetToken, SignOut, UseAuthReturn } from '@clerk/types';\nimport { useCallback } from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { errorThrower } from '../errors/errorThrower';\nimport { invalidStateError } from '../errors/messages';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\nimport { createGetToken, createSignOut } from './utils';\n\n/**\n * The `useAuth()` hook provides access to the current user's authentication state and methods to manage the active session.\n *\n * @param [initialAuthState] - An object containing the initial authentication state. If not provided, the hook will attempt to derive the state from the context.\n *\n * @example\n *\n * > [!NOTE]\n * > For frameworks like Next.js that support multiple ways of rendering its content, it might be preferable to use the [`auth()`](https://clerk.com/docs/references/nextjs/auth) helper instead of `useAuth()`. This depends on if you want to use React Server Components, SSR, or client-side rendering. Learn more in the [rendering modes](https://clerk.com/docs/references/nextjs/rendering-modes) guide. If you only want to access data on the client-side, `useAuth()` is sufficient.\n *\n * The following example demonstrates how to use the `useAuth()` hook to access the current auth state, like whether the user is signed in or not. It also includes a basic example for using the `getToken()` method to retrieve a session token for fetching data from an external resource.\n *\n * ```tsx {{ filename: 'src/pages/ExternalDataPage.tsx' }}\n * import { useAuth } from '@clerk/clerk-react'\n *\n * export default function ExternalDataPage() {\n *   const { userId, sessionId, getToken, isLoaded, isSignedIn } = useAuth()\n *\n *   const fetchExternalData = async () => {\n *     const token = await getToken()\n *\n *     // Fetch data from an external API\n *     const response = await fetch('https://api.example.com/data', {\n *       headers: {\n *         Authorization: `Bearer ${token}`,\n *       },\n *     })\n *\n *     return response.json()\n *   }\n *\n *   if (!isLoaded) {\n *     return <div>Loading...</div>\n *   }\n *\n *   if (!isSignedIn) {\n *     return <div>Sign in to view this page</div>\n *   }\n *\n *   return (\n *     <div>\n *       <p>\n *         Hello, {userId}! Your current active session is {sessionId}.\n *       </p>\n *       <button onClick={fetchExternalData}>Fetch Data</button>\n *     </div>\n *   )\n * }\n * ```\n */\nexport const useAuth = (initialAuthState: any = {}): UseAuthReturn => {\n  useAssertWrappedByClerkProvider('useAuth');\n\n  const authContextFromHook = useAuthContext();\n  let authContext = authContextFromHook;\n\n  if (authContext.sessionId === undefined && authContext.userId === undefined) {\n    authContext = initialAuthState != null ? initialAuthState : {};\n  }\n\n  const { sessionId, userId, actor, orgId, orgRole, orgSlug, orgPermissions, factorVerificationAge } = authContext;\n  const isomorphicClerk = useIsomorphicClerkContext();\n\n  const getToken: GetToken = useCallback(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut: SignOut = useCallback(createSignOut(isomorphicClerk), [isomorphicClerk]);\n\n  return useDerivedAuth({\n    sessionId,\n    userId,\n    actor,\n    orgId,\n    orgSlug,\n    orgRole,\n    getToken,\n    signOut,\n    orgPermissions,\n    factorVerificationAge,\n  });\n};\n\n/**\n * A hook that derives and returns authentication state and utility functions based on the provided auth object.\n *\n * @param authObject - An object containing authentication-related properties and functions.\n *\n * @returns A derived authentication state with helper methods. If the authentication state is invalid, an error is thrown.\n *\n * @remarks\n * This hook inspects session, user, and organization information to determine the current authentication state.\n * It returns an object that includes various properties such as whether the state is loaded, if a user is signed in,\n * session and user identifiers, organization roles, and a `has` function for authorization checks.\n * Additionally, it provides `signOut` and `getToken` functions if applicable.\n *\n * @example\n * ```tsx\n * const {\n *   isLoaded,\n *   isSignedIn,\n *   userId,\n *   orgId,\n *   has,\n *   signOut,\n *   getToken\n * } = useDerivedAuth(authObject);\n * ```\n */\nexport function useDerivedAuth(authObject: any): UseAuthReturn {\n  const {\n    sessionId,\n    userId,\n    actor,\n    orgId,\n    orgSlug,\n    orgRole,\n    has,\n    signOut,\n    getToken,\n    orgPermissions,\n    factorVerificationAge,\n  } = authObject ?? {};\n\n  const derivedHas = useCallback(\n    (params: Parameters<CheckAuthorizationWithCustomPermissions>[0]) => {\n      if (has) {\n        return has(params);\n      }\n      return createCheckAuthorization({\n        userId,\n        orgId,\n        orgRole,\n        orgPermissions,\n        factorVerificationAge,\n      })(params);\n    },\n    [userId, factorVerificationAge, orgId, orgRole, orgPermissions],\n  );\n\n  if (sessionId === undefined && userId === undefined) {\n    return {\n      isLoaded: false,\n      isSignedIn: undefined,\n      sessionId,\n      userId,\n      actor: undefined,\n      orgId: undefined,\n      orgRole: undefined,\n      orgSlug: undefined,\n      has: undefined,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has: derivedHas,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: derivedHas,\n      signOut,\n      getToken,\n    };\n  }\n\n  return errorThrower.throw(invalidStateError);\n}\n","import type {\n  CreateEmailLinkFlowReturn,\n  EmailAddressResource,\n  SignInResource,\n  SignInStartEmailLinkFlowParams,\n  SignUpResource,\n  StartEmailLinkFlowParams,\n} from '@clerk/types';\nimport React from 'react';\n\ntype EmailLinkable = SignUpResource | EmailAddressResource | SignInResource;\ntype UseEmailLinkSignInReturn = CreateEmailLinkFlowReturn<SignInStartEmailLinkFlowParams, SignInResource>;\ntype UseEmailLinkSignUpReturn = CreateEmailLinkFlowReturn<StartEmailLinkFlowParams, SignUpResource>;\ntype UseEmailLinkEmailAddressReturn = CreateEmailLinkFlowReturn<StartEmailLinkFlowParams, EmailAddressResource>;\n\nfunction useEmailLink(resource: SignInResource): UseEmailLinkSignInReturn;\nfunction useEmailLink(resource: SignUpResource): UseEmailLinkSignUpReturn;\nfunction useEmailLink(resource: EmailAddressResource): UseEmailLinkEmailAddressReturn;\nfunction useEmailLink(\n  resource: EmailLinkable,\n): UseEmailLinkSignInReturn | UseEmailLinkSignUpReturn | UseEmailLinkEmailAddressReturn {\n  const { startEmailLinkFlow, cancelEmailLinkFlow } = React.useMemo(() => resource.createEmailLinkFlow(), [resource]);\n\n  React.useEffect(() => {\n    return cancelEmailLinkFlow;\n  }, []);\n\n  return {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow,\n  } as UseEmailLinkSignInReturn | UseEmailLinkSignUpReturn | UseEmailLinkEmailAddressReturn;\n}\n\nexport { useEmailLink };\n","import { useClientContext } from '@clerk/shared/react';\nimport { eventMethodCalled } from '@clerk/shared/telemetry';\nimport type { UseSignInReturn } from '@clerk/types';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\n\n/**\n * The `useSignIn()` hook provides access to the [`SignIn`](https://clerk.com/docs/references/javascript/sign-in/sign-in) object, which allows you to check the current state of a sign-in attempt and manage the sign-in flow. You can use this to create a [custom sign-in flow](https://clerk.com/docs/custom-flows/overview#sign-in-flow).\n *\n * @example\n * ### Check the current state of a sign-in\n *\n * The following example uses the `useSignIn()` hook to access the [`SignIn`](https://clerk.com/docs/references/javascript/sign-in/sign-in) object, which contains the current sign-in attempt status and methods to create a new sign-in attempt. The `isLoaded` property is used to handle the loading state.\n *\n * ```tsx {{ filename: 'src/pages/SignInPage.tsx' }}\n * import { useSignIn } from '@clerk/clerk-react'\n *\n * export default function SignInPage() {\n *   const { isLoaded, signIn } = useSignIn()\n *\n *   if (!isLoaded) {\n *     // Handle loading state\n *     return null\n *   }\n *\n *   return <div>The current sign-in attempt status is {signIn?.status}.</div>\n * }\n * ```\n *\n * @example\n * ### Create a custom sign-in flow with `useSignIn()`\n *\n * The `useSignIn()` hook can also be used to build fully custom sign-in flows, if Clerk's prebuilt components don't meet your specific needs or if you require more control over the authentication flow. Different sign-in flows include email and password, email and phone codes, email links, and multifactor (MFA). To learn more about using the `useSignIn()` hook to create custom flows, see the [custom flow guides](https://clerk.com/docs/custom-flows/overview).\n *\n * ```empty```\n */\nexport const useSignIn = (): UseSignInReturn => {\n  useAssertWrappedByClerkProvider('useSignIn');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n\n  isomorphicClerk.telemetry?.record(eventMethodCalled('useSignIn'));\n\n  if (!client) {\n    return { isLoaded: false, signIn: undefined, setActive: undefined };\n  }\n\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setActive: isomorphicClerk.setActive,\n  };\n};\n","import { useClientContext } from '@clerk/shared/react';\nimport { eventMethodCalled } from '@clerk/shared/telemetry';\nimport type { UseSignUpReturn } from '@clerk/types';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\n\n/**\n * The `useSignUp()` hook provides access to the [`SignUp`](https://clerk.com/docs/references/javascript/sign-up/sign-up) object, which allows you to check the current state of a sign-up attempt and manage the sign-up flow. You can use this to create a [custom sign-up flow](https://clerk.com/docs/custom-flows/overview#sign-up-flow).\n *\n * @example\n * ### Check the current state of a sign-up\n *\n * The following example uses the `useSignUp()` hook to access the [`SignUp`](https://clerk.com/docs/references/javascript/sign-up/sign-up) object, which contains the current sign-up attempt status and methods to create a new sign-up attempt. The `isLoaded` property is used to handle the loading state.\n *\n * ```tsx {{ filename: 'src/pages/SignUpPage.tsx' }}\n * import { useSignUp } from '@clerk/clerk-react'\n *\n * export default function SignUpPage() {\n *   const { isLoaded, signUp } = useSignUp()\n *\n *   if (!isLoaded) {\n *     // Handle loading state\n *     return null\n *   }\n *\n *   return <div>The current sign-up attempt status is {signUp?.status}.</div>\n * }\n * ```\n *\n * @example\n * ### Create a custom sign-up flow with `useSignUp()`\n *\n * The `useSignUp()` hook can also be used to build fully custom sign-up flows, if Clerk's prebuilt components don't meet your specific needs or if you require more control over the authentication flow. Different sign-up flows include email and password, email and phone codes, email links, and multifactor (MFA). To learn more about using the `useSignUp()` hook to create custom flows, see the [custom flow guides](https://clerk.com/docs/custom-flows/overview).\n *\n * ```empty```\n */\nexport const useSignUp = (): UseSignUpReturn => {\n  useAssertWrappedByClerkProvider('useSignUp');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n\n  isomorphicClerk.telemetry?.record(eventMethodCalled('useSignUp'));\n\n  if (!client) {\n    return { isLoaded: false, signUp: undefined, setActive: undefined };\n  }\n\n  return {\n    isLoaded: true,\n    signUp: client.signUp,\n    setActive: isomorphicClerk.setActive,\n  };\n};\n","import type { LoadedClerk, Without } from '@clerk/types';\nimport React from 'react';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useAssertWrappedByClerkProvider } from '../hooks/useAssertWrappedByClerkProvider';\n\nexport const withClerk = <P extends { clerk: LoadedClerk; component?: string }>(\n  Component: React.ComponentType<P>,\n  displayNameOrOptions?: string | { component: string; renderWhileLoading?: boolean },\n) => {\n  const passedDisplayedName =\n    typeof displayNameOrOptions === 'string' ? displayNameOrOptions : displayNameOrOptions?.component;\n  const displayName = passedDisplayedName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n\n  const options = typeof displayNameOrOptions === 'string' ? undefined : displayNameOrOptions;\n\n  const HOC = (props: Without<P, 'clerk'>) => {\n    useAssertWrappedByClerkProvider(displayName || 'withClerk');\n\n    const clerk = useIsomorphicClerkContext();\n\n    if (!clerk.loaded && !options?.renderWhileLoading) {\n      return null;\n    }\n\n    return (\n      <Component\n        {...(props as P)}\n        component={displayName}\n        clerk={clerk}\n      />\n    );\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n","import { deprecated } from '@clerk/shared/deprecated';\nimport type {\n  CheckAuthorizationWithCustomPermissions,\n  HandleOAuthCallbackParams,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useSessionContext } from '../contexts/SessionContext';\nimport { useAuth } from '../hooks';\nimport { useAssertWrappedByClerkProvider } from '../hooks/useAssertWrappedByClerkProvider';\nimport type { RedirectToSignInProps, RedirectToSignUpProps, WithClerkProp } from '../types';\nimport { withClerk } from './withClerk';\n\nexport const SignedIn = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('SignedIn');\n\n  const { userId } = useAuthContext();\n  if (userId) {\n    return children;\n  }\n  return null;\n};\n\nexport const SignedOut = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('SignedOut');\n\n  const { userId } = useAuthContext();\n  if (userId === null) {\n    return children;\n  }\n  return null;\n};\n\nexport const ClerkLoaded = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('ClerkLoaded');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return children;\n};\n\nexport const ClerkLoading = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('ClerkLoading');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return children;\n};\n\nexport type ProtectProps = React.PropsWithChildren<\n  (\n    | {\n        condition?: never;\n        role: OrganizationCustomRoleKey;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission: OrganizationCustomPermissionKey;\n      }\n    | {\n        condition: (has: CheckAuthorizationWithCustomPermissions) => boolean;\n        role?: never;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission?: never;\n      }\n  ) & {\n    fallback?: React.ReactNode;\n  }\n>;\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport const Protect = ({ children, fallback, ...restAuthorizedParams }: ProtectProps) => {\n  useAssertWrappedByClerkProvider('Protect');\n\n  const { isLoaded, has, userId } = useAuth();\n\n  /**\n   * Avoid flickering children or fallback while clerk is loading sessionId or userId\n   */\n  if (!isLoaded) {\n    return null;\n  }\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = fallback ?? null;\n\n  const authorized = children;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n};\n\nexport const RedirectToSignIn = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignInProps>) => {\n  const { client, session } = clerk;\n\n  const hasSignedInSessions = client.signedInSessions\n    ? client.signedInSessions.length > 0\n    : // Compat for clerk-js<5.54.0 (which was released with the `signedInSessions` property)\n      client.activeSessions && client.activeSessions.length > 0;\n\n  React.useEffect(() => {\n    if (session === null && hasSignedInSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n\n  return null;\n}, 'RedirectToSignIn');\n\nexport const RedirectToSignUp = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignUpProps>) => {\n  React.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n\n  return null;\n}, 'RedirectToSignUp');\n\n/**\n * @deprecated Use [`redirectToUserProfile()`](https://clerk.com/docs/references/javascript/clerk/redirect-methods#redirect-to-user-profile) instead, will be removed in the next major version.\n */\nexport const RedirectToUserProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    deprecated('RedirectToUserProfile', 'Use the `redirectToUserProfile()` method instead.');\n    void clerk.redirectToUserProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToUserProfile');\n\n/**\n * @deprecated Use [`redirectToOrganizationProfile()`](https://clerk.com/docs/references/javascript/clerk/redirect-methods#redirect-to-organization-profile) instead, will be removed in the next major version.\n */\nexport const RedirectToOrganizationProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    deprecated('RedirectToOrganizationProfile', 'Use the `redirectToOrganizationProfile()` method instead.');\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToOrganizationProfile');\n\n/**\n * @deprecated Use [`redirectToCreateOrganization()`](https://clerk.com/docs/references/javascript/clerk/redirect-methods#redirect-to-create-organization) instead, will be removed in the next major version.\n */\nexport const RedirectToCreateOrganization = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    deprecated('RedirectToCreateOrganization', 'Use the `redirectToCreateOrganization()` method instead.');\n    void clerk.redirectToCreateOrganization();\n  }, []);\n\n  return null;\n}, 'RedirectToCreateOrganization');\n\nexport const AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }: WithClerkProp<HandleOAuthCallbackParams>) => {\n    React.useEffect(() => {\n      void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n\n    return null;\n  },\n  'AuthenticateWithRedirectCallback',\n);\n\nexport const MultisessionAppSupport = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('MultisessionAppSupport');\n\n  const session = useSessionContext();\n  return <React.Fragment key={session ? session.id : 'no-users'}>{children}</React.Fragment>;\n};\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\n\nexport {\n  __privateGet,\n  __privateAdd,\n  __privateSet,\n  __privateMethod\n};\n//# sourceMappingURL=chunk-OANWQR3B.mjs.map","import type { ClerkOptions, SDKMetadata, Without } from '@clerk/types';\n\nimport { buildErrorThrower } from './error';\nimport { createDevOrStagingUrlCache, parsePublishableKey } from './keys';\nimport { loadScript } from './loadScript';\nimport { isValidProxyUrl, proxyUrlToAbsoluteURL } from './proxy';\nimport { addClerkPrefix } from './url';\nimport { versionSelector } from './versionSelector';\n\nconst FAILED_TO_LOAD_ERROR = 'Clerk: Failed to load Clerk';\n\nconst { isDevOrStagingUrl } = createDevOrStagingUrlCache();\n\nconst errorThrower = buildErrorThrower({ packageName: '@clerk/shared' });\n\n/**\n * Sets the package name for error messages during ClerkJS script loading.\n *\n * @example\n * setClerkJsLoadingErrorPackageName('@clerk/clerk-react');\n */\nexport function setClerkJsLoadingErrorPackageName(packageName: string) {\n  errorThrower.setPackageName({ packageName });\n}\n\ntype LoadClerkJsScriptOptions = Without<ClerkOptions, 'isSatellite'> & {\n  publishableKey: string;\n  clerkJSUrl?: string;\n  clerkJSVariant?: 'headless' | '';\n  clerkJSVersion?: string;\n  sdkMetadata?: SDKMetadata;\n  proxyUrl?: string;\n  domain?: string;\n  nonce?: string;\n};\n\n/**\n * Hotloads the Clerk JS script.\n *\n * Checks for an existing Clerk JS script. If found, it returns a promise\n * that resolves when the script loads. If not found, it uses the provided options to\n * build the Clerk JS script URL and load the script.\n *\n * @param opts - The options used to build the Clerk JS script URL and load the script.\n *               Must include a `publishableKey` if no existing script is found.\n *\n * @example\n * loadClerkJsScript({ publishableKey: 'pk_' });\n */\nconst loadClerkJsScript = async (opts?: LoadClerkJsScriptOptions) => {\n  const existingScript = document.querySelector<HTMLScriptElement>('script[data-clerk-js-script]');\n\n  if (existingScript) {\n    return new Promise((resolve, reject) => {\n      existingScript.addEventListener('load', () => {\n        resolve(existingScript);\n      });\n\n      existingScript.addEventListener('error', () => {\n        reject(FAILED_TO_LOAD_ERROR);\n      });\n    });\n  }\n\n  if (!opts?.publishableKey) {\n    errorThrower.throwMissingPublishableKeyError();\n    return;\n  }\n\n  return loadScript(clerkJsScriptUrl(opts), {\n    async: true,\n    crossOrigin: 'anonymous',\n    nonce: opts.nonce,\n    beforeLoad: applyClerkJsScriptAttributes(opts),\n  }).catch(() => {\n    throw new Error(FAILED_TO_LOAD_ERROR);\n  });\n};\n\n/**\n * Generates a Clerk JS script URL.\n *\n * @param opts - The options to use when building the Clerk JS script URL.\n *\n * @example\n * clerkJsScriptUrl({ publishableKey: 'pk_' });\n */\nconst clerkJsScriptUrl = (opts: LoadClerkJsScriptOptions) => {\n  const { clerkJSUrl, clerkJSVariant, clerkJSVersion, proxyUrl, domain, publishableKey } = opts;\n\n  if (clerkJSUrl) {\n    return clerkJSUrl;\n  }\n\n  let scriptHost = '';\n  if (!!proxyUrl && isValidProxyUrl(proxyUrl)) {\n    scriptHost = proxyUrlToAbsoluteURL(proxyUrl).replace(/http(s)?:\\/\\//, '');\n  } else if (domain && !isDevOrStagingUrl(parsePublishableKey(publishableKey)?.frontendApi || '')) {\n    scriptHost = addClerkPrefix(domain);\n  } else {\n    scriptHost = parsePublishableKey(publishableKey)?.frontendApi || '';\n  }\n\n  const variant = clerkJSVariant ? `${clerkJSVariant.replace(/\\.+$/, '')}.` : '';\n  const version = versionSelector(clerkJSVersion);\n  return `https://${scriptHost}/npm/@clerk/clerk-js@${version}/dist/clerk.${variant}browser.js`;\n};\n\n/**\n * Builds an object of Clerk JS script attributes.\n */\nconst buildClerkJsScriptAttributes = (options: LoadClerkJsScriptOptions) => {\n  const obj: Record<string, string> = {};\n\n  if (options.publishableKey) {\n    obj['data-clerk-publishable-key'] = options.publishableKey;\n  }\n\n  if (options.proxyUrl) {\n    obj['data-clerk-proxy-url'] = options.proxyUrl;\n  }\n\n  if (options.domain) {\n    obj['data-clerk-domain'] = options.domain;\n  }\n\n  if (options.nonce) {\n    obj.nonce = options.nonce;\n  }\n\n  return obj;\n};\n\nconst applyClerkJsScriptAttributes = (options: LoadClerkJsScriptOptions) => (script: HTMLScriptElement) => {\n  const attributes = buildClerkJsScriptAttributes(options);\n  for (const attribute in attributes) {\n    script.setAttribute(attribute, attributes[attribute]);\n  }\n};\n\nexport { loadClerkJsScript, buildClerkJsScriptAttributes, clerkJsScriptUrl };\nexport type { LoadClerkJsScriptOptions };\n","import { isDevelopmentEnvironment } from './runtimeEnvironment';\n\nexport const logErrorInDevMode = (message: string) => {\n  if (isDevelopmentEnvironment()) {\n    console.error(`Clerk: ${message}`);\n  }\n};\n","type VOrFnReturnsV<T> = T | undefined | ((v: URL) => T);\nexport function handleValueOrFn<T>(value: VOrFnReturnsV<T>, url: URL): T | undefined;\nexport function handleValueOrFn<T>(value: VOrFnReturnsV<T>, url: URL, defaultValue: T): T;\nexport function handleValueOrFn<T>(value: VOrFnReturnsV<T>, url: URL, defaultValue?: unknown): unknown {\n  if (typeof value === 'function') {\n    return (value as (v: URL) => T)(url);\n  }\n\n  if (typeof value !== 'undefined') {\n    return value;\n  }\n\n  if (typeof defaultValue !== 'undefined') {\n    return defaultValue;\n  }\n\n  return undefined;\n}\n","export const without = <T extends object, P extends keyof T>(obj: T, ...props: P[]): Omit<T, P> => {\n  const copy = { ...obj };\n  for (const prop of props) {\n    delete copy[prop];\n  }\n  return copy;\n};\n\nexport const removeUndefined = <T extends object>(obj: T): Partial<T> => {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== undefined && value !== null) {\n      acc[key as keyof T] = value;\n    }\n    return acc;\n  }, {} as Partial<T>);\n};\n\nexport const applyFunctionToObj = <T extends Record<string, any>, R>(\n  obj: T,\n  fn: (val: any, key: string) => R,\n): Record<string, R> => {\n  const result = {} as Record<string, R>;\n  for (const key in obj) {\n    result[key] = fn(obj[key], key);\n  }\n  return result;\n};\n\nexport const filterProps = <T extends Record<string, any>>(obj: T, filter: (a: any) => boolean): T => {\n  const result = {} as T;\n  for (const key in obj) {\n    if (obj[key] && filter(obj[key])) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n};\n","import type {\n  InitialState,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n  OrganizationResource,\n  Resources,\n  SignedInSessionResource,\n  UserResource,\n} from '@clerk/types';\n\n/**\n * Derives authentication state based on the current rendering context (SSR or client-side).\n */\nexport const deriveState = (clerkLoaded: boolean, state: Resources, initialState: InitialState | undefined) => {\n  if (!clerkLoaded && initialState) {\n    return deriveFromSsrInitialState(initialState);\n  }\n  return deriveFromClientSideState(state);\n};\n\nconst deriveFromSsrInitialState = (initialState: InitialState) => {\n  const userId = initialState.userId;\n  const user = initialState.user as UserResource;\n  const sessionId = initialState.sessionId;\n  const session = initialState.session as SignedInSessionResource;\n  const organization = initialState.organization as OrganizationResource;\n  const orgId = initialState.orgId;\n  const orgRole = initialState.orgRole as OrganizationCustomRoleKey;\n  const orgPermissions = initialState.orgPermissions as OrganizationCustomPermissionKey[];\n  const orgSlug = initialState.orgSlug;\n  const actor = initialState.actor;\n  const factorVerificationAge = initialState.factorVerificationAge;\n\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgPermissions,\n    orgSlug,\n    actor,\n    factorVerificationAge,\n  };\n};\n\nconst deriveFromClientSideState = (state: Resources) => {\n  const userId: string | null | undefined = state.user ? state.user.id : state.user;\n  const user = state.user;\n  const sessionId: string | null | undefined = state.session ? state.session.id : state.session;\n  const session = state.session;\n  const factorVerificationAge: [number, number] | null = state.session ? state.session.factorVerificationAge : null;\n  const actor = session?.actor;\n  const organization = state.organization;\n  const orgId: string | null | undefined = state.organization ? state.organization.id : state.organization;\n  const orgSlug = organization?.slug;\n  const membership = organization\n    ? user?.organizationMemberships?.find(om => om.organization.id === orgId)\n    : organization;\n  const orgPermissions = membership ? membership.permissions : membership;\n  const orgRole = membership ? membership.role : membership;\n\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    actor,\n    factorVerificationAge,\n  };\n};\n","/**\n * Checks if the window object is defined. You can also use this to check if something is happening on the client side.\n * @returns {boolean}\n */\nexport function inBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nconst botAgents = [\n  'bot',\n  'spider',\n  'crawl',\n  'APIs-Google',\n  'AdsBot',\n  'Googlebot',\n  'mediapartners',\n  'Google Favicon',\n  'FeedFetcher',\n  'Google-Read-Aloud',\n  'DuplexWeb-Google',\n  'googleweblight',\n  'bing',\n  'yandex',\n  'baidu',\n  'duckduck',\n  'yahoo',\n  'ecosia',\n  'ia_archiver',\n  'facebook',\n  'instagram',\n  'pinterest',\n  'reddit',\n  'slack',\n  'twitter',\n  'whatsapp',\n  'youtube',\n  'semrush',\n];\nconst botAgentRegex = new RegExp(botAgents.join('|'), 'i');\n\n/**\n * Checks if the user agent is a bot.\n * @param userAgent - Any user agent string\n * @returns {boolean}\n */\nexport function userAgentIsRobot(userAgent: string): boolean {\n  return !userAgent ? false : botAgentRegex.test(userAgent);\n}\n\n/**\n * Checks if the current environment is a browser and the user agent is not a bot.\n * @returns {boolean}\n */\nexport function isValidBrowser(): boolean {\n  const navigator = inBrowser() ? window?.navigator : null;\n  if (!navigator) {\n    return false;\n  }\n  return !userAgentIsRobot(navigator?.userAgent) && !navigator?.webdriver;\n}\n\n/**\n * Checks if the current environment is a browser and if the navigator is online.\n * @returns {boolean}\n */\nexport function isBrowserOnline(): boolean {\n  const navigator = inBrowser() ? window?.navigator : null;\n  if (!navigator) {\n    return false;\n  }\n\n  const isNavigatorOnline = navigator?.onLine;\n\n  // Being extra safe with the experimental `connection` property, as it is not defined in all browsers\n  // https://developer.mozilla.org/en-US/docs/Web/API/Navigator/connection#browser_compatibility\n  // @ts-ignore\n  const isExperimentalConnectionOnline = navigator?.connection?.rtt !== 0 && navigator?.connection?.downlink !== 0;\n  return isExperimentalConnectionOnline && isNavigatorOnline;\n}\n\n/**\n * Runs `isBrowserOnline` and `isValidBrowser` to check if the current environment is a valid browser and if the navigator is online.\n * @returns {boolean}\n */\nexport function isValidBrowserOnline(): boolean {\n  return isBrowserOnline() && isValidBrowser();\n}\n","/**\n * Vite does not define `global` by default\n * One workaround is to use the `define` config prop\n * https://vitejs.dev/config/#define\n * We are solving this in the SDK level to reduce setup steps.\n */\nif (typeof window !== 'undefined' && !window.global) {\n  window.global = typeof global === 'undefined' ? window : global;\n}\n\nexport {};\n","import React from 'react';\n\nimport { errorThrower } from '../errors/errorThrower';\nimport { multipleChildrenInButtonComponent } from '../errors/messages';\n\nexport const assertSingleChild =\n  (children: React.ReactNode) =>\n  (name: 'SignInButton' | 'SignUpButton' | 'SignOutButton' | 'SignInWithMetamaskButton') => {\n    try {\n      return React.Children.only(children);\n    } catch {\n      return errorThrower.throw(multipleChildrenInButtonComponent(name));\n    }\n  };\n\nexport const normalizeWithDefaultValue = (children: React.ReactNode | undefined, defaultText: string) => {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof children === 'string') {\n    children = <button>{children}</button>;\n  }\n  return children;\n};\n\nexport const safeExecute =\n  (cb: unknown) =>\n  (...args: any) => {\n    if (cb && typeof cb === 'function') {\n      return cb(...args);\n    }\n  };\n","export function isConstructor<T>(f: any): f is T {\n  return typeof f === 'function';\n}\n","import React from 'react';\n\nimport { errorThrower } from '../errors/errorThrower';\n\nconst counts = new Map<string, number>();\n\nexport function useMaxAllowedInstancesGuard(name: string, error: string, maxCount = 1): void {\n  React.useEffect(() => {\n    const count = counts.get(name) || 0;\n    if (count == maxCount) {\n      return errorThrower.throw(error);\n    }\n    counts.set(name, count + 1);\n\n    return () => {\n      counts.set(name, (counts.get(name) || 1) - 1);\n    };\n  }, []);\n}\n\nexport function withMaxAllowedInstancesGuard<P>(\n  WrappedComponent: React.ComponentType<P>,\n  name: string,\n  error: string,\n): React.ComponentType<P> {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || name || 'Component';\n  const Hoc = (props: P) => {\n    useMaxAllowedInstancesGuard(name, error);\n    return <WrappedComponent {...(props as any)} />;\n  };\n  Hoc.displayName = `withMaxAllowedInstancesGuard(${displayName})`;\n  return Hoc;\n}\n","import React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport type UseCustomElementPortalParams = {\n  component: React.ReactNode;\n  id: number;\n};\n\nexport type UseCustomElementPortalReturn = {\n  portal: () => React.JSX.Element;\n  mount: (node: Element) => void;\n  unmount: () => void;\n  id: number;\n};\n\n// This function takes a component as prop, and returns functions that mount and unmount\n// the given component into a given node\nexport const useCustomElementPortal = (elements: UseCustomElementPortalParams[]) => {\n  const initialState = Array(elements.length).fill(null);\n  const [nodes, setNodes] = useState<(Element | null)[]>(initialState);\n\n  return elements.map((el, index) => ({\n    id: el.id,\n    mount: (node: Element) => setNodes(prevState => prevState.map((n, i) => (i === index ? node : n))),\n    unmount: () => setNodes(prevState => prevState.map((n, i) => (i === index ? null : n))),\n    portal: () => <>{nodes[index] ? createPortal(el.component, nodes[index]) : null}</>,\n  }));\n};\n","import React from 'react';\n\nexport const isThatComponent = (v: any, component: React.ReactNode): v is React.ReactNode => {\n  return !!v && React.isValidElement(v) && (v as React.ReactElement)?.type === component;\n};\n","import { logErrorInDevMode } from '@clerk/shared/utils';\nimport type { CustomPage } from '@clerk/types';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport {\n  MenuItems,\n  OrganizationProfileLink,\n  OrganizationProfilePage,\n  UserProfileLink,\n  UserProfilePage,\n} from '../components/uiComponents';\nimport { customLinkWrongProps, customPagesIgnoredComponent, customPageWrongProps } from '../errors/messages';\nimport type { UserProfilePageProps } from '../types';\nimport { isThatComponent } from './componentValidation';\nimport type { UseCustomElementPortalParams, UseCustomElementPortalReturn } from './useCustomElementPortal';\nimport { useCustomElementPortal } from './useCustomElementPortal';\n\nexport const useUserProfileCustomPages = (\n  children: React.ReactNode | React.ReactNode[],\n  options?: UseCustomPagesOptions,\n) => {\n  const reorderItemsLabels = ['account', 'security'];\n  return useCustomPages(\n    {\n      children,\n      reorderItemsLabels,\n      LinkComponent: UserProfileLink,\n      PageComponent: UserProfilePage,\n      MenuItemsComponent: MenuItems,\n      componentName: 'UserProfile',\n    },\n    options,\n  );\n};\n\nexport const useOrganizationProfileCustomPages = (\n  children: React.ReactNode | React.ReactNode[],\n  options?: UseCustomPagesOptions,\n) => {\n  const reorderItemsLabels = ['general', 'members'];\n  return useCustomPages(\n    {\n      children,\n      reorderItemsLabels,\n      LinkComponent: OrganizationProfileLink,\n      PageComponent: OrganizationProfilePage,\n      componentName: 'OrganizationProfile',\n    },\n    options,\n  );\n};\n\ntype UseCustomPagesParams = {\n  children: React.ReactNode | React.ReactNode[];\n  LinkComponent: any;\n  PageComponent: any;\n  MenuItemsComponent?: any;\n  reorderItemsLabels: string[];\n  componentName: string;\n};\n\ntype UseCustomPagesOptions = {\n  allowForAnyChildren: boolean;\n};\n\ntype CustomPageWithIdType = UserProfilePageProps & { children?: React.ReactNode };\n\n/**\n * Exclude any children that is used for identifying Custom Pages or Custom Items.\n * Passing:\n * ```tsx\n *  <UserProfile.Page/>\n *  <OrganizationProfile.Link/>\n *  <MyComponent>\n *  <UserButton.MenuItems/>\n * ```\n * Gives back\n * ```tsx\n * <MyComponent>\n * ````\n */\nexport const useSanitizedChildren = (children: React.ReactNode) => {\n  const sanitizedChildren: React.ReactNode[] = [];\n\n  const excludedComponents: any[] = [\n    OrganizationProfileLink,\n    OrganizationProfilePage,\n    MenuItems,\n    UserProfilePage,\n    UserProfileLink,\n  ];\n\n  React.Children.forEach(children, child => {\n    if (!excludedComponents.some(component => isThatComponent(child, component))) {\n      sanitizedChildren.push(child);\n    }\n  });\n\n  return sanitizedChildren;\n};\n\nconst useCustomPages = (params: UseCustomPagesParams, options?: UseCustomPagesOptions) => {\n  const { children, LinkComponent, PageComponent, MenuItemsComponent, reorderItemsLabels, componentName } = params;\n  const { allowForAnyChildren = false } = options || {};\n  const validChildren: CustomPageWithIdType[] = [];\n\n  React.Children.forEach(children, child => {\n    if (\n      !isThatComponent(child, PageComponent) &&\n      !isThatComponent(child, LinkComponent) &&\n      !isThatComponent(child, MenuItemsComponent)\n    ) {\n      if (child && !allowForAnyChildren) {\n        logErrorInDevMode(customPagesIgnoredComponent(componentName));\n      }\n      return;\n    }\n\n    const { props } = child as ReactElement;\n\n    const { children, label, url, labelIcon } = props;\n\n    if (isThatComponent(child, PageComponent)) {\n      if (isReorderItem(props, reorderItemsLabels)) {\n        // This is a reordering item\n        validChildren.push({ label });\n      } else if (isCustomPage(props)) {\n        // this is a custom page\n        validChildren.push({ label, labelIcon, children, url });\n      } else {\n        logErrorInDevMode(customPageWrongProps(componentName));\n        return;\n      }\n    }\n\n    if (isThatComponent(child, LinkComponent)) {\n      if (isExternalLink(props)) {\n        // This is an external link\n        validChildren.push({ label, labelIcon, url });\n      } else {\n        logErrorInDevMode(customLinkWrongProps(componentName));\n        return;\n      }\n    }\n  });\n\n  const customPageContents: UseCustomElementPortalParams[] = [];\n  const customPageLabelIcons: UseCustomElementPortalParams[] = [];\n  const customLinkLabelIcons: UseCustomElementPortalParams[] = [];\n\n  validChildren.forEach((cp, index) => {\n    if (isCustomPage(cp)) {\n      customPageContents.push({ component: cp.children, id: index });\n      customPageLabelIcons.push({ component: cp.labelIcon, id: index });\n      return;\n    }\n    if (isExternalLink(cp)) {\n      customLinkLabelIcons.push({ component: cp.labelIcon, id: index });\n    }\n  });\n\n  const customPageContentsPortals = useCustomElementPortal(customPageContents);\n  const customPageLabelIconsPortals = useCustomElementPortal(customPageLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n\n  const customPages: CustomPage[] = [];\n  const customPagesPortals: React.ComponentType[] = [];\n\n  validChildren.forEach((cp, index) => {\n    if (isReorderItem(cp, reorderItemsLabels)) {\n      customPages.push({ label: cp.label });\n      return;\n    }\n    if (isCustomPage(cp)) {\n      const {\n        portal: contentPortal,\n        mount,\n        unmount,\n      } = customPageContentsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon,\n      } = customPageLabelIconsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      customPages.push({ label: cp.label, url: cp.url, mount, unmount, mountIcon, unmountIcon });\n      customPagesPortals.push(contentPortal);\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n    if (isExternalLink(cp)) {\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon,\n      } = customLinkLabelIconsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      customPages.push({ label: cp.label, url: cp.url, mountIcon, unmountIcon });\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n  });\n\n  return { customPages, customPagesPortals };\n};\n\nconst isReorderItem = (childProps: any, validItems: string[]): boolean => {\n  const { children, label, url, labelIcon } = childProps;\n  return !children && !url && !labelIcon && validItems.some(v => v === label);\n};\n\nconst isCustomPage = (childProps: any): boolean => {\n  const { children, label, url, labelIcon } = childProps;\n  return !!children && !!url && !!labelIcon && !!label;\n};\n\nconst isExternalLink = (childProps: any): boolean => {\n  const { children, label, url, labelIcon } = childProps;\n  return !children && !!url && !!labelIcon && !!label;\n};\n","import { logErrorInDevMode } from '@clerk/shared/utils';\nimport type { CustomMenuItem } from '@clerk/types';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { MenuAction, MenuItems, MenuLink, UserProfileLink, UserProfilePage } from '../components/uiComponents';\nimport {\n  customMenuItemsIgnoredComponent,\n  userButtonIgnoredComponent,\n  userButtonMenuItemLinkWrongProps,\n  userButtonMenuItemsActionWrongsProps,\n} from '../errors/messages';\nimport type { UserButtonActionProps, UserButtonLinkProps } from '../types';\nimport { isThatComponent } from './componentValidation';\nimport type { UseCustomElementPortalParams, UseCustomElementPortalReturn } from './useCustomElementPortal';\nimport { useCustomElementPortal } from './useCustomElementPortal';\n\nexport const useUserButtonCustomMenuItems = (children: React.ReactNode | React.ReactNode[]) => {\n  const reorderItemsLabels = ['manageAccount', 'signOut'];\n  return useCustomMenuItems({\n    children,\n    reorderItemsLabels,\n    MenuItemsComponent: MenuItems,\n    MenuActionComponent: MenuAction,\n    MenuLinkComponent: MenuLink,\n    UserProfileLinkComponent: UserProfileLink,\n    UserProfilePageComponent: UserProfilePage,\n  });\n};\n\ntype UseCustomMenuItemsParams = {\n  children: React.ReactNode | React.ReactNode[];\n  MenuItemsComponent?: any;\n  MenuActionComponent?: any;\n  MenuLinkComponent?: any;\n  UserProfileLinkComponent?: any;\n  UserProfilePageComponent?: any;\n  reorderItemsLabels: string[];\n};\n\ntype CustomMenuItemType = UserButtonActionProps | UserButtonLinkProps;\n\nconst useCustomMenuItems = ({\n  children,\n  MenuItemsComponent,\n  MenuActionComponent,\n  MenuLinkComponent,\n  UserProfileLinkComponent,\n  UserProfilePageComponent,\n  reorderItemsLabels,\n}: UseCustomMenuItemsParams) => {\n  const validChildren: CustomMenuItemType[] = [];\n  const customMenuItems: CustomMenuItem[] = [];\n  const customMenuItemsPortals: React.ComponentType[] = [];\n\n  React.Children.forEach(children, child => {\n    if (\n      !isThatComponent(child, MenuItemsComponent) &&\n      !isThatComponent(child, UserProfileLinkComponent) &&\n      !isThatComponent(child, UserProfilePageComponent)\n    ) {\n      if (child) {\n        logErrorInDevMode(userButtonIgnoredComponent);\n      }\n      return;\n    }\n\n    // Ignore UserProfileLinkComponent and UserProfilePageComponent\n    if (isThatComponent(child, UserProfileLinkComponent) || isThatComponent(child, UserProfilePageComponent)) {\n      return;\n    }\n\n    // Menu items children\n    const { props } = child as ReactElement;\n\n    React.Children.forEach(props.children, child => {\n      if (!isThatComponent(child, MenuActionComponent) && !isThatComponent(child, MenuLinkComponent)) {\n        if (child) {\n          logErrorInDevMode(customMenuItemsIgnoredComponent);\n        }\n\n        return;\n      }\n\n      const { props } = child as ReactElement;\n\n      const { label, labelIcon, href, onClick, open } = props;\n\n      if (isThatComponent(child, MenuActionComponent)) {\n        if (isReorderItem(props, reorderItemsLabels)) {\n          // This is a reordering item\n          validChildren.push({ label });\n        } else if (isCustomMenuItem(props)) {\n          const baseItem = {\n            label,\n            labelIcon,\n          };\n\n          if (onClick !== undefined) {\n            validChildren.push({\n              ...baseItem,\n              onClick,\n            });\n          } else if (open !== undefined) {\n            validChildren.push({\n              ...baseItem,\n              open: open.startsWith('/') ? open : `/${open}`,\n            });\n          } else {\n            // Handle the case where neither onClick nor open is defined\n            logErrorInDevMode('Custom menu item must have either onClick or open property');\n            return;\n          }\n        } else {\n          logErrorInDevMode(userButtonMenuItemsActionWrongsProps);\n          return;\n        }\n      }\n\n      if (isThatComponent(child, MenuLinkComponent)) {\n        if (isExternalLink(props)) {\n          validChildren.push({ label, labelIcon, href });\n        } else {\n          logErrorInDevMode(userButtonMenuItemLinkWrongProps);\n          return;\n        }\n      }\n    });\n  });\n\n  const customMenuItemLabelIcons: UseCustomElementPortalParams[] = [];\n  const customLinkLabelIcons: UseCustomElementPortalParams[] = [];\n  validChildren.forEach((mi, index) => {\n    if (isCustomMenuItem(mi)) {\n      customMenuItemLabelIcons.push({ component: mi.labelIcon, id: index });\n    }\n    if (isExternalLink(mi)) {\n      customLinkLabelIcons.push({ component: mi.labelIcon, id: index });\n    }\n  });\n\n  const customMenuItemLabelIconsPortals = useCustomElementPortal(customMenuItemLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n\n  validChildren.forEach((mi, index) => {\n    if (isReorderItem(mi, reorderItemsLabels)) {\n      customMenuItems.push({\n        label: mi.label,\n      });\n    }\n    if (isCustomMenuItem(mi)) {\n      const {\n        portal: iconPortal,\n        mount: mountIcon,\n        unmount: unmountIcon,\n      } = customMenuItemLabelIconsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      const menuItem: CustomMenuItem = {\n        label: mi.label,\n        mountIcon,\n        unmountIcon,\n      };\n\n      if ('onClick' in mi) {\n        menuItem.onClick = mi.onClick;\n      } else if ('open' in mi) {\n        menuItem.open = mi.open;\n      }\n      customMenuItems.push(menuItem);\n      customMenuItemsPortals.push(iconPortal);\n    }\n    if (isExternalLink(mi)) {\n      const {\n        portal: iconPortal,\n        mount: mountIcon,\n        unmount: unmountIcon,\n      } = customLinkLabelIconsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      customMenuItems.push({\n        label: mi.label,\n        href: mi.href,\n        mountIcon,\n        unmountIcon,\n      });\n      customMenuItemsPortals.push(iconPortal);\n    }\n  });\n\n  return { customMenuItems, customMenuItemsPortals };\n};\n\nconst isReorderItem = (childProps: any, validItems: string[]): boolean => {\n  const { children, label, onClick, labelIcon } = childProps;\n  return !children && !onClick && !labelIcon && validItems.some(v => v === label);\n};\n\nconst isCustomMenuItem = (childProps: any): childProps is UserButtonActionProps => {\n  const { label, labelIcon, onClick, open } = childProps;\n  return !!labelIcon && !!label && (typeof onClick === 'function' || typeof open === 'string');\n};\n\nconst isExternalLink = (childProps: any): childProps is UserButtonLinkProps => {\n  const { label, href, labelIcon } = childProps;\n  return !!href && !!labelIcon && !!label;\n};\n","import { useEffect, useRef, useState } from 'react';\n\n/**\n * Used to detect when a Clerk component has been added to the DOM.\n */\nfunction waitForElementChildren(options: { selector?: string; root?: HTMLElement | null; timeout?: number }) {\n  const { root = document?.body, selector, timeout = 0 } = options;\n\n  return new Promise<void>((resolve, reject) => {\n    if (!root) {\n      reject(new Error('No root element provided'));\n      return;\n    }\n\n    let elementToWatch: HTMLElement | null = root;\n    if (selector) {\n      elementToWatch = root?.querySelector(selector);\n    }\n\n    // Check if the element already has child nodes\n    const isElementAlreadyPresent = elementToWatch?.childElementCount && elementToWatch.childElementCount > 0;\n    if (isElementAlreadyPresent) {\n      resolve();\n      return;\n    }\n\n    // Set up a MutationObserver to detect when the element has children\n    const observer = new MutationObserver(mutationsList => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          if (!elementToWatch && selector) {\n            elementToWatch = root?.querySelector(selector);\n          }\n\n          if (elementToWatch?.childElementCount && elementToWatch.childElementCount > 0) {\n            observer.disconnect();\n            resolve();\n            return;\n          }\n        }\n      }\n    });\n\n    observer.observe(root, { childList: true, subtree: true });\n\n    // Set up an optional timeout to reject the promise if the element never gets child nodes\n    if (timeout > 0) {\n      setTimeout(() => {\n        observer.disconnect();\n        reject(new Error(`Timeout waiting for element children`));\n      }, timeout);\n    }\n  });\n}\n\n/**\n * Detect when a Clerk component has mounted by watching DOM updates to an element with a `data-clerk-component=\"${component}\"` property.\n */\nexport function useWaitForComponentMount(component?: string) {\n  const watcherRef = useRef<Promise<void>>();\n  const [status, setStatus] = useState<'rendering' | 'rendered' | 'error'>('rendering');\n\n  useEffect(() => {\n    if (!component) {\n      throw new Error('Clerk: no component name provided, unable to detect mount.');\n    }\n\n    if (typeof window !== 'undefined' && !watcherRef.current) {\n      watcherRef.current = waitForElementChildren({ selector: `[data-clerk-component=\"${component}\"]` })\n        .then(() => {\n          setStatus('rendered');\n        })\n        .catch(() => {\n          setStatus('error');\n        });\n    }\n  }, [component]);\n\n  return status;\n}\n","import { without } from '@clerk/shared/object';\nimport { isDeeplyEqual } from '@clerk/shared/react';\nimport type { PropsWithChildren } from 'react';\nimport React from 'react';\n\nimport type { MountProps, OpenProps } from '../types';\n\nconst isMountProps = (props: any): props is MountProps => {\n  return 'mount' in props;\n};\n\nconst isOpenProps = (props: any): props is OpenProps => {\n  return 'open' in props;\n};\n\nconst stripMenuItemIconHandlers = (\n  menuItems?: Array<{\n    mountIcon?: (el: HTMLDivElement) => void;\n    unmountIcon?: (el: HTMLDivElement) => void;\n    [key: string]: any;\n  }>,\n) => {\n  return menuItems?.map(({ mountIcon, unmountIcon, ...rest }) => rest);\n};\n\n// README: <ClerkHostRenderer/> should be a class pure component in order for mount and unmount\n// lifecycle props to be invoked correctly. Replacing the class component with a\n// functional component wrapped with a React.memo is not identical to the original\n// class implementation due to React intricacies such as the useEffect’s cleanup\n// seems to run AFTER unmount, while componentWillUnmount runs BEFORE.\n\n// More information can be found at https://clerk.slack.com/archives/C015S0BGH8R/p1624891993016300\n\n// The function Portal implementation is commented out for future reference.\n\n// const Portal = React.memo(({ props, mount, unmount }: MountProps) => {\n//   const portalRef = React.createRef<HTMLDivElement>();\n\n//   useEffect(() => {\n//     if (portalRef.current) {\n//       mount(portalRef.current, props);\n//     }\n//     return () => {\n//       if (portalRef.current) {\n//         unmount(portalRef.current);\n//       }\n//     };\n//   }, []);\n\n//   return <div ref={portalRef} />;\n// });\n\n// Portal.displayName = 'ClerkPortal';\n\n/**\n * Used to orchestrate mounting of Clerk components in a host React application.\n * Components are rendered into a specific DOM node using mount/unmount methods provided by the Clerk class.\n */\nexport class ClerkHostRenderer extends React.PureComponent<\n  PropsWithChildren<\n    (MountProps | OpenProps) & {\n      component?: string;\n      hideRootHtmlElement?: boolean;\n      rootProps?: JSX.IntrinsicElements['div'];\n    }\n  >\n> {\n  private rootRef = React.createRef<HTMLDivElement>();\n\n  componentDidUpdate(_prevProps: Readonly<MountProps | OpenProps>) {\n    if (!isMountProps(_prevProps) || !isMountProps(this.props)) {\n      return;\n    }\n\n    // Remove children and customPages from props before comparing\n    // children might hold circular references which deepEqual can't handle\n    // and the implementation of customPages relies on props getting new references\n    const prevProps = without(_prevProps.props, 'customPages', 'customMenuItems', 'children');\n    const newProps = without(this.props.props, 'customPages', 'customMenuItems', 'children');\n\n    // instead, we simply use the length of customPages to determine if it changed or not\n    const customPagesChanged = prevProps.customPages?.length !== newProps.customPages?.length;\n    const customMenuItemsChanged = prevProps.customMenuItems?.length !== newProps.customMenuItems?.length;\n\n    // Strip out mountIcon and unmountIcon handlers since they're always generated as new function references,\n    // which would cause unnecessary re-renders in deep equality checks\n    const prevMenuItemsWithoutHandlers = stripMenuItemIconHandlers(_prevProps.props.customMenuItems);\n    const newMenuItemsWithoutHandlers = stripMenuItemIconHandlers(this.props.props.customMenuItems);\n\n    if (\n      !isDeeplyEqual(prevProps, newProps) ||\n      !isDeeplyEqual(prevMenuItemsWithoutHandlers, newMenuItemsWithoutHandlers) ||\n      customPagesChanged ||\n      customMenuItemsChanged\n    ) {\n      if (this.rootRef.current) {\n        this.props.updateProps({ node: this.rootRef.current, props: this.props.props });\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.rootRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.mount(this.rootRef.current, this.props.props);\n      }\n\n      if (isOpenProps(this.props)) {\n        this.props.open(this.props.props);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.rootRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.unmount(this.rootRef.current);\n      }\n      if (isOpenProps(this.props)) {\n        this.props.close();\n      }\n    }\n  }\n\n  render() {\n    const { hideRootHtmlElement = false } = this.props;\n    const rootAttributes = {\n      ref: this.rootRef,\n      ...this.props.rootProps,\n      ...(this.props.component && { 'data-clerk-component': this.props.component }),\n    };\n\n    return (\n      <>\n        {!hideRootHtmlElement && <div {...rootAttributes} />}\n        {this.props.children}\n      </>\n    );\n  }\n}\n","import { logErrorInDevMode } from '@clerk/shared/utils';\nimport type {\n  CreateOrganizationProps,\n  GoogleOneTapProps,\n  OrganizationListProps,\n  OrganizationProfileProps,\n  OrganizationSwitcherProps,\n  SignInProps,\n  SignUpProps,\n  UserButtonProps,\n  UserProfileProps,\n  WaitlistProps,\n  Without,\n} from '@clerk/types';\nimport type { PropsWithChildren, ReactNode } from 'react';\nimport React, { createContext, createElement, useContext } from 'react';\n\nimport {\n  organizationProfileLinkRenderedError,\n  organizationProfilePageRenderedError,\n  userButtonMenuActionRenderedError,\n  userButtonMenuItemsRenderedError,\n  userButtonMenuLinkRenderedError,\n  userProfileLinkRenderedError,\n  userProfilePageRenderedError,\n} from '../errors/messages';\nimport type {\n  CustomPortalsRendererProps,\n  MountProps,\n  OrganizationProfileLinkProps,\n  OrganizationProfilePageProps,\n  UserButtonActionProps,\n  UserButtonLinkProps,\n  UserProfileLinkProps,\n  UserProfilePageProps,\n  WithClerkProp,\n} from '../types';\nimport {\n  useOrganizationProfileCustomPages,\n  useSanitizedChildren,\n  useUserButtonCustomMenuItems,\n  useUserProfileCustomPages,\n} from '../utils';\nimport { useWaitForComponentMount } from '../utils/useWaitForComponentMount';\nimport { ClerkHostRenderer } from './ClerkHostRenderer';\nimport { withClerk } from './withClerk';\n\ntype FallbackProp = {\n  /**\n   * An optional element to render while the component is mounting.\n   */\n  fallback?: ReactNode;\n};\n\ntype UserProfileExportType = typeof _UserProfile & {\n  Page: typeof UserProfilePage;\n  Link: typeof UserProfileLink;\n};\n\ntype UserButtonExportType = typeof _UserButton & {\n  UserProfilePage: typeof UserProfilePage;\n  UserProfileLink: typeof UserProfileLink;\n  MenuItems: typeof MenuItems;\n  Action: typeof MenuAction;\n  Link: typeof MenuLink;\n  /**\n   * The `<Outlet />` component can be used in conjunction with `asProvider` in order to control rendering\n   * of the `<UserButton />` without affecting its configuration or any custom pages that could be mounted\n   * @experimental This API is experimental and may change at any moment.\n   */\n  __experimental_Outlet: typeof UserButtonOutlet;\n};\n\ntype UserButtonPropsWithoutCustomPages = Without<\n  UserButtonProps,\n  'userProfileProps' | '__experimental_asStandalone'\n> & {\n  userProfileProps?: Pick<UserProfileProps, 'additionalOAuthScopes' | 'appearance'>;\n  /**\n   * Adding `asProvider` will defer rendering until the `<Outlet />` component is mounted.\n   * This API is experimental and may change at any moment.\n   * @experimental\n   * @default undefined\n   */\n  __experimental_asProvider?: boolean;\n};\n\ntype OrganizationProfileExportType = typeof _OrganizationProfile & {\n  Page: typeof OrganizationProfilePage;\n  Link: typeof OrganizationProfileLink;\n};\n\ntype OrganizationSwitcherExportType = typeof _OrganizationSwitcher & {\n  OrganizationProfilePage: typeof OrganizationProfilePage;\n  OrganizationProfileLink: typeof OrganizationProfileLink;\n  /**\n   * The `<Outlet />` component can be used in conjunction with `asProvider` in order to control rendering\n   * of the `<OrganizationSwitcher />` without affecting its configuration or any custom pages that could be mounted\n   * @experimental This API is experimental and may change at any moment.\n   */\n  __experimental_Outlet: typeof OrganizationSwitcherOutlet;\n};\n\ntype OrganizationSwitcherPropsWithoutCustomPages = Without<\n  OrganizationSwitcherProps,\n  'organizationProfileProps' | '__experimental_asStandalone'\n> & {\n  organizationProfileProps?: Pick<OrganizationProfileProps, 'appearance'>;\n  /**\n   * Adding `asProvider` will defer rendering until the `<Outlet />` component is mounted.\n   * This API is experimental and may change at any moment.\n   * @experimental\n   * @default undefined\n   */\n  __experimental_asProvider?: boolean;\n};\n\nconst CustomPortalsRenderer = (props: CustomPortalsRendererProps) => {\n  return (\n    <>\n      {props?.customPagesPortals?.map((portal, index) => createElement(portal, { key: index }))}\n      {props?.customMenuItemsPortals?.map((portal, index) => createElement(portal, { key: index }))}\n    </>\n  );\n};\n\nexport const SignIn = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<SignInProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountSignIn}\n            unmount={clerk.unmountSignIn}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'SignIn', renderWhileLoading: true },\n);\n\nexport const SignUp = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<SignUpProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountSignUp}\n            unmount={clerk.unmountSignUp}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'SignUp', renderWhileLoading: true },\n);\n\nexport function UserProfilePage({ children }: PropsWithChildren<UserProfilePageProps>) {\n  logErrorInDevMode(userProfilePageRenderedError);\n  return <>{children}</>;\n}\n\nexport function UserProfileLink({ children }: PropsWithChildren<UserProfileLinkProps>) {\n  logErrorInDevMode(userProfileLinkRenderedError);\n  return <>{children}</>;\n}\n\nconst _UserProfile = withClerk(\n  ({\n    clerk,\n    component,\n    fallback,\n    ...props\n  }: WithClerkProp<PropsWithChildren<Without<UserProfileProps, 'customPages'>> & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    const { customPages, customPagesPortals } = useUserProfileCustomPages(props.children);\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        <ClerkHostRenderer\n          component={component}\n          mount={clerk.mountUserProfile}\n          unmount={clerk.unmountUserProfile}\n          updateProps={(clerk as any).__unstable__updateProps}\n          props={{ ...props, customPages }}\n          rootProps={rendererRootProps}\n        >\n          <CustomPortalsRenderer customPagesPortals={customPagesPortals} />\n        </ClerkHostRenderer>\n      </>\n    );\n  },\n  { component: 'UserProfile', renderWhileLoading: true },\n);\n\nexport const UserProfile: UserProfileExportType = Object.assign(_UserProfile, {\n  Page: UserProfilePage,\n  Link: UserProfileLink,\n});\n\nconst UserButtonContext = createContext<MountProps>({\n  mount: () => {},\n  unmount: () => {},\n  updateProps: () => {},\n});\n\nconst _UserButton = withClerk(\n  ({\n    clerk,\n    component,\n    fallback,\n    ...props\n  }: WithClerkProp<PropsWithChildren<UserButtonPropsWithoutCustomPages> & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    const { customPages, customPagesPortals } = useUserProfileCustomPages(props.children, {\n      allowForAnyChildren: !!props.__experimental_asProvider,\n    });\n    const userProfileProps = Object.assign(props.userProfileProps || {}, { customPages });\n    const { customMenuItems, customMenuItemsPortals } = useUserButtonCustomMenuItems(props.children);\n    const sanitizedChildren = useSanitizedChildren(props.children);\n\n    const passableProps = {\n      mount: clerk.mountUserButton,\n      unmount: clerk.unmountUserButton,\n      updateProps: (clerk as any).__unstable__updateProps,\n      props: { ...props, userProfileProps, customMenuItems },\n    };\n    const portalProps = {\n      customPagesPortals: customPagesPortals,\n      customMenuItemsPortals: customMenuItemsPortals,\n    };\n\n    return (\n      <UserButtonContext.Provider value={passableProps}>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            {...passableProps}\n            hideRootHtmlElement={!!props.__experimental_asProvider}\n            rootProps={rendererRootProps}\n          >\n            {/*This mimics the previous behaviour before asProvider existed*/}\n            {props.__experimental_asProvider ? sanitizedChildren : null}\n            <CustomPortalsRenderer {...portalProps} />\n          </ClerkHostRenderer>\n        )}\n      </UserButtonContext.Provider>\n    );\n  },\n  { component: 'UserButton', renderWhileLoading: true },\n);\n\nexport function MenuItems({ children }: PropsWithChildren) {\n  logErrorInDevMode(userButtonMenuItemsRenderedError);\n  return <>{children}</>;\n}\n\nexport function MenuAction({ children }: PropsWithChildren<UserButtonActionProps>) {\n  logErrorInDevMode(userButtonMenuActionRenderedError);\n  return <>{children}</>;\n}\n\nexport function MenuLink({ children }: PropsWithChildren<UserButtonLinkProps>) {\n  logErrorInDevMode(userButtonMenuLinkRenderedError);\n  return <>{children}</>;\n}\n\nexport function UserButtonOutlet(outletProps: Without<UserButtonProps, 'userProfileProps'>) {\n  const providerProps = useContext(UserButtonContext);\n\n  const portalProps = {\n    ...providerProps,\n    props: {\n      ...providerProps.props,\n      ...outletProps,\n    },\n  } satisfies MountProps;\n\n  return <ClerkHostRenderer {...portalProps} />;\n}\n\nexport const UserButton: UserButtonExportType = Object.assign(_UserButton, {\n  UserProfilePage,\n  UserProfileLink,\n  MenuItems,\n  Action: MenuAction,\n  Link: MenuLink,\n  __experimental_Outlet: UserButtonOutlet,\n});\n\nexport function OrganizationProfilePage({ children }: PropsWithChildren<OrganizationProfilePageProps>) {\n  logErrorInDevMode(organizationProfilePageRenderedError);\n  return <>{children}</>;\n}\n\nexport function OrganizationProfileLink({ children }: PropsWithChildren<OrganizationProfileLinkProps>) {\n  logErrorInDevMode(organizationProfileLinkRenderedError);\n  return <>{children}</>;\n}\n\nconst _OrganizationProfile = withClerk(\n  ({\n    clerk,\n    component,\n    fallback,\n    ...props\n  }: WithClerkProp<PropsWithChildren<Without<OrganizationProfileProps, 'customPages'>> & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    const { customPages, customPagesPortals } = useOrganizationProfileCustomPages(props.children);\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountOrganizationProfile}\n            unmount={clerk.unmountOrganizationProfile}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={{ ...props, customPages }}\n            rootProps={rendererRootProps}\n          >\n            <CustomPortalsRenderer customPagesPortals={customPagesPortals} />\n          </ClerkHostRenderer>\n        )}\n      </>\n    );\n  },\n  { component: 'OrganizationProfile', renderWhileLoading: true },\n);\n\nexport const OrganizationProfile: OrganizationProfileExportType = Object.assign(_OrganizationProfile, {\n  Page: OrganizationProfilePage,\n  Link: OrganizationProfileLink,\n});\n\nexport const CreateOrganization = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<CreateOrganizationProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountCreateOrganization}\n            unmount={clerk.unmountCreateOrganization}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'CreateOrganization', renderWhileLoading: true },\n);\n\nconst OrganizationSwitcherContext = createContext<MountProps>({\n  mount: () => {},\n  unmount: () => {},\n  updateProps: () => {},\n});\n\nconst _OrganizationSwitcher = withClerk(\n  ({\n    clerk,\n    component,\n    fallback,\n    ...props\n  }: WithClerkProp<PropsWithChildren<OrganizationSwitcherPropsWithoutCustomPages> & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    const { customPages, customPagesPortals } = useOrganizationProfileCustomPages(props.children, {\n      allowForAnyChildren: !!props.__experimental_asProvider,\n    });\n    const organizationProfileProps = Object.assign(props.organizationProfileProps || {}, { customPages });\n    const sanitizedChildren = useSanitizedChildren(props.children);\n\n    const passableProps = {\n      mount: clerk.mountOrganizationSwitcher,\n      unmount: clerk.unmountOrganizationSwitcher,\n      updateProps: (clerk as any).__unstable__updateProps,\n      props: { ...props, organizationProfileProps },\n      rootProps: rendererRootProps,\n      component,\n    };\n\n    /**\n     * Prefetch organization list\n     */\n    clerk.__experimental_prefetchOrganizationSwitcher();\n\n    return (\n      <OrganizationSwitcherContext.Provider value={passableProps}>\n        <>\n          {shouldShowFallback && fallback}\n          {clerk.loaded && (\n            <ClerkHostRenderer\n              {...passableProps}\n              hideRootHtmlElement={!!props.__experimental_asProvider}\n            >\n              {/*This mimics the previous behaviour before asProvider existed*/}\n              {props.__experimental_asProvider ? sanitizedChildren : null}\n              <CustomPortalsRenderer customPagesPortals={customPagesPortals} />\n            </ClerkHostRenderer>\n          )}\n        </>\n      </OrganizationSwitcherContext.Provider>\n    );\n  },\n  { component: 'OrganizationSwitcher', renderWhileLoading: true },\n);\n\nexport function OrganizationSwitcherOutlet(\n  outletProps: Without<OrganizationSwitcherProps, 'organizationProfileProps'>,\n) {\n  const providerProps = useContext(OrganizationSwitcherContext);\n\n  const portalProps = {\n    ...providerProps,\n    props: {\n      ...providerProps.props,\n      ...outletProps,\n    },\n  } satisfies MountProps;\n\n  return <ClerkHostRenderer {...portalProps} />;\n}\n\nexport const OrganizationSwitcher: OrganizationSwitcherExportType = Object.assign(_OrganizationSwitcher, {\n  OrganizationProfilePage,\n  OrganizationProfileLink,\n  __experimental_Outlet: OrganizationSwitcherOutlet,\n});\n\nexport const OrganizationList = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<OrganizationListProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountOrganizationList}\n            unmount={clerk.unmountOrganizationList}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'OrganizationList', renderWhileLoading: true },\n);\n\nexport const GoogleOneTap = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<GoogleOneTapProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            open={clerk.openGoogleOneTap}\n            close={clerk.closeGoogleOneTap}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'GoogleOneTap', renderWhileLoading: true },\n);\n\nexport const Waitlist = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<WaitlistProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountWaitlist}\n            unmount={clerk.unmountWaitlist}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'Waitlist', renderWhileLoading: true },\n);\n","import type { SignInButtonProps, SignInProps } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<React.PropsWithChildren<SignInButtonProps>>) => {\n    const {\n      signUpFallbackRedirectUrl,\n      forceRedirectUrl,\n      fallbackRedirectUrl,\n      signUpForceRedirectUrl,\n      mode,\n      initialValues,\n      withSignUp,\n      ...rest\n    } = props;\n    children = normalizeWithDefaultValue(children, 'Sign in');\n    const child = assertSingleChild(children)('SignInButton');\n\n    const clickHandler = () => {\n      const opts: SignInProps = {\n        forceRedirectUrl,\n        fallbackRedirectUrl,\n        signUpFallbackRedirectUrl,\n        signUpForceRedirectUrl,\n        initialValues,\n        withSignUp,\n      };\n\n      if (mode === 'modal') {\n        return clerk.openSignIn({ ...opts, appearance: props.appearance });\n      }\n      return clerk.redirectToSignIn({\n        ...opts,\n        signInFallbackRedirectUrl: fallbackRedirectUrl,\n        signInForceRedirectUrl: forceRedirectUrl,\n      });\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignInButton', renderWhileLoading: true },\n);\n","import type { SignUpButtonProps, SignUpProps } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignUpButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<React.PropsWithChildren<SignUpButtonProps>>) => {\n    const {\n      fallbackRedirectUrl,\n      forceRedirectUrl,\n      signInFallbackRedirectUrl,\n      signInForceRedirectUrl,\n      mode,\n      unsafeMetadata,\n      initialValues,\n      ...rest\n    } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign up');\n    const child = assertSingleChild(children)('SignUpButton');\n\n    const clickHandler = () => {\n      const opts: SignUpProps = {\n        fallbackRedirectUrl,\n        forceRedirectUrl,\n        signInFallbackRedirectUrl,\n        signInForceRedirectUrl,\n        unsafeMetadata,\n        initialValues,\n      };\n\n      if (mode === 'modal') {\n        return clerk.openSignUp({ ...opts, appearance: props.appearance });\n      }\n\n      return clerk.redirectToSignUp({\n        ...opts,\n        signUpFallbackRedirectUrl: fallbackRedirectUrl,\n        signUpForceRedirectUrl: forceRedirectUrl,\n      });\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignUpButton', renderWhileLoading: true },\n);\n","import type { SignOutOptions } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport type SignOutButtonProps = {\n  redirectUrl?: string;\n  signOutOptions?: SignOutOptions;\n  children?: React.ReactNode;\n};\n\nexport const SignOutButton = withClerk(\n  ({ clerk, children, ...props }: React.PropsWithChildren<WithClerkProp<SignOutButtonProps>>) => {\n    const { redirectUrl = '/', signOutOptions, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign out');\n    const child = assertSingleChild(children)('SignOutButton');\n\n    const clickHandler = () => clerk.signOut({ redirectUrl, ...signOutOptions });\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignOutButton', renderWhileLoading: true },\n);\n","import React from 'react';\n\nimport type { SignInWithMetamaskButtonProps, WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInWithMetamaskButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<SignInWithMetamaskButtonProps>) => {\n    const { redirectUrl, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign in with Metamask');\n    const child = assertSingleChild(children)('SignInWithMetamaskButton');\n\n    // TODO: Properly fix this code\n    // eslint-disable-next-line @typescript-eslint/require-await\n    const clickHandler = async () => {\n      async function authenticate() {\n        await clerk.authenticateWithMetamask({ redirectUrl: redirectUrl || undefined });\n      }\n      void authenticate();\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignInWithMetamask', renderWhileLoading: true },\n);\n","import { inBrowser } from '@clerk/shared/browser';\nimport { loadClerkJsScript } from '@clerk/shared/loadClerkJsScript';\nimport { handleValueOrFn } from '@clerk/shared/utils';\nimport type {\n  __internal_UserVerificationModalProps,\n  __internal_UserVerificationProps,\n  AuthenticateWithCoinbaseWalletParams,\n  AuthenticateWithGoogleOneTapParams,\n  AuthenticateWithMetamaskParams,\n  AuthenticateWithOKXWalletParams,\n  Clerk,\n  ClerkAuthenticateWithWeb3Params,\n  ClerkOptions,\n  ClientResource,\n  CreateOrganizationParams,\n  CreateOrganizationProps,\n  DomainOrProxyUrl,\n  GoogleOneTapProps,\n  HandleEmailLinkVerificationParams,\n  HandleOAuthCallbackParams,\n  JoinWaitlistParams,\n  ListenerCallback,\n  LoadedClerk,\n  OrganizationListProps,\n  OrganizationProfileProps,\n  OrganizationResource,\n  OrganizationSwitcherProps,\n  RedirectOptions,\n  SetActiveParams,\n  SignInProps,\n  SignInRedirectOptions,\n  SignInResource,\n  SignUpProps,\n  SignUpRedirectOptions,\n  SignUpResource,\n  UnsubscribeCallback,\n  UserButtonProps,\n  UserProfileProps,\n  WaitlistProps,\n  WaitlistResource,\n  Without,\n} from '@clerk/types';\n\nimport { errorThrower } from './errors/errorThrower';\nimport { unsupportedNonBrowserDomainOrProxyUrlFunction } from './errors/messages';\nimport type {\n  BrowserClerk,\n  BrowserClerkConstructor,\n  ClerkProp,\n  HeadlessBrowserClerk,\n  HeadlessBrowserClerkConstructor,\n  IsomorphicClerkOptions,\n} from './types';\nimport { isConstructor } from './utils';\n\nif (typeof globalThis.__BUILD_DISABLE_RHC__ === 'undefined') {\n  globalThis.__BUILD_DISABLE_RHC__ = false;\n}\n\nconst SDK_METADATA = {\n  name: PACKAGE_NAME,\n  version: PACKAGE_VERSION,\n  environment: process.env.NODE_ENV,\n};\n\nexport interface Global {\n  Clerk?: HeadlessBrowserClerk | BrowserClerk;\n}\n\ndeclare const global: Global;\n\ntype GenericFunction<TArgs = never> = (...args: TArgs[]) => unknown;\n\ntype MethodName<T> = {\n  [P in keyof T]: T[P] extends GenericFunction ? P : never;\n}[keyof T];\n\ntype MethodCallback = () => Promise<unknown> | unknown;\n\ntype WithVoidReturn<F extends (...args: any) => any> = (\n  ...args: Parameters<F>\n) => ReturnType<F> extends Promise<infer T> ? Promise<T | void> : ReturnType<F> | void;\ntype WithVoidReturnFunctions<T> = {\n  [K in keyof T]: T[K] extends (...args: any) => any ? WithVoidReturn<T[K]> : T[K];\n};\n\ntype IsomorphicLoadedClerk = Without<\n  WithVoidReturnFunctions<LoadedClerk>,\n  'client' | '__internal_addNavigationListener' | '__internal_getCachedResources' | '__internal_reloadInitialResources'\n> & {\n  client: ClientResource | undefined;\n};\n\nexport class IsomorphicClerk implements IsomorphicLoadedClerk {\n  private readonly mode: 'browser' | 'server';\n  private readonly options: IsomorphicClerkOptions;\n  private readonly Clerk: ClerkProp;\n  private clerkjs: BrowserClerk | HeadlessBrowserClerk | null = null;\n  private preopenOneTap?: null | GoogleOneTapProps = null;\n  private preopenUserVerification?: null | __internal_UserVerificationProps = null;\n  private preopenSignIn?: null | SignInProps = null;\n  private preopenSignUp?: null | SignUpProps = null;\n  private preopenUserProfile?: null | UserProfileProps = null;\n  private preopenOrganizationProfile?: null | OrganizationProfileProps = null;\n  private preopenCreateOrganization?: null | CreateOrganizationProps = null;\n  private preOpenWaitlist?: null | WaitlistProps = null;\n  private premountSignInNodes = new Map<HTMLDivElement, SignInProps | undefined>();\n  private premountSignUpNodes = new Map<HTMLDivElement, SignUpProps | undefined>();\n  private premountUserProfileNodes = new Map<HTMLDivElement, UserProfileProps | undefined>();\n  private premountUserButtonNodes = new Map<HTMLDivElement, UserButtonProps | undefined>();\n  private premountOrganizationProfileNodes = new Map<HTMLDivElement, OrganizationProfileProps | undefined>();\n  private premountCreateOrganizationNodes = new Map<HTMLDivElement, CreateOrganizationProps | undefined>();\n  private premountOrganizationSwitcherNodes = new Map<HTMLDivElement, OrganizationSwitcherProps | undefined>();\n  private premountOrganizationListNodes = new Map<HTMLDivElement, OrganizationListProps | undefined>();\n  private premountMethodCalls = new Map<MethodName<BrowserClerk>, MethodCallback>();\n  private premountWaitlistNodes = new Map<HTMLDivElement, WaitlistProps | undefined>();\n  // A separate Map of `addListener` method calls to handle multiple listeners.\n  private premountAddListenerCalls = new Map<\n    ListenerCallback,\n    {\n      unsubscribe: UnsubscribeCallback;\n      nativeUnsubscribe?: UnsubscribeCallback;\n    }\n  >();\n  private loadedListeners: Array<() => void> = [];\n\n  #loaded = false;\n  #domain: DomainOrProxyUrl['domain'];\n  #proxyUrl: DomainOrProxyUrl['proxyUrl'];\n  #publishableKey: string;\n\n  get publishableKey(): string {\n    return this.#publishableKey;\n  }\n\n  get loaded(): boolean {\n    return this.#loaded;\n  }\n\n  static #instance: IsomorphicClerk | null | undefined;\n\n  static getOrCreateInstance(options: IsomorphicClerkOptions) {\n    // During SSR: a new instance should be created for every request\n    // During CSR: use the cached instance for the whole lifetime of the app\n    // Also will recreate the instance if the provided Clerk instance changes\n    // This method should be idempotent in both scenarios\n    if (\n      !inBrowser() ||\n      !this.#instance ||\n      (options.Clerk && this.#instance.Clerk !== options.Clerk) ||\n      // Allow hot swapping PKs on the client\n      this.#instance.publishableKey !== options.publishableKey\n    ) {\n      this.#instance = new IsomorphicClerk(options);\n    }\n    return this.#instance;\n  }\n\n  static clearInstance() {\n    this.#instance = null;\n  }\n\n  get domain(): string {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use domain as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.#domain, new URL(window.location.href), '');\n    }\n    if (typeof this.#domain === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return this.#domain || '';\n  }\n\n  get proxyUrl(): string {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use proxy as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.#proxyUrl, new URL(window.location.href), '');\n    }\n    if (typeof this.#proxyUrl === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return this.#proxyUrl || '';\n  }\n\n  public __internal_getOption<K extends keyof ClerkOptions>(key: K): ClerkOptions[K] | undefined {\n    return this.clerkjs?.__internal_getOption(key);\n  }\n\n  constructor(options: IsomorphicClerkOptions) {\n    const { Clerk = null, publishableKey } = options || {};\n    this.#publishableKey = publishableKey;\n    this.#proxyUrl = options?.proxyUrl;\n    this.#domain = options?.domain;\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = inBrowser() ? 'browser' : 'server';\n\n    if (!this.options.sdkMetadata) {\n      this.options.sdkMetadata = SDK_METADATA;\n    }\n\n    if (this.#publishableKey) {\n      void this.loadClerkJS();\n    }\n  }\n\n  get sdkMetadata() {\n    return this.clerkjs?.sdkMetadata || this.options.sdkMetadata || undefined;\n  }\n\n  get instanceType() {\n    return this.clerkjs?.instanceType;\n  }\n\n  get frontendApi() {\n    return this.clerkjs?.frontendApi || '';\n  }\n\n  get isStandardBrowser() {\n    return this.clerkjs?.isStandardBrowser || this.options.standardBrowser || false;\n  }\n\n  get isSatellite() {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use domain as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.options.isSatellite, new URL(window.location.href), false);\n    }\n    if (typeof this.options.isSatellite === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return false;\n  }\n\n  buildSignInUrl = (opts?: RedirectOptions): string | void => {\n    const callback = () => this.clerkjs?.buildSignInUrl(opts) || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildSignInUrl', callback);\n    }\n  };\n\n  buildSignUpUrl = (opts?: RedirectOptions): string | void => {\n    const callback = () => this.clerkjs?.buildSignUpUrl(opts) || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildSignUpUrl', callback);\n    }\n  };\n\n  buildAfterSignInUrl = (...args: Parameters<Clerk['buildAfterSignInUrl']>): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignInUrl(...args) || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignInUrl', callback);\n    }\n  };\n\n  buildAfterSignUpUrl = (...args: Parameters<Clerk['buildAfterSignUpUrl']>): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignUpUrl(...args) || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignUpUrl', callback);\n    }\n  };\n\n  buildAfterSignOutUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignOutUrl() || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignOutUrl', callback);\n    }\n  };\n\n  buildAfterMultiSessionSingleSignOutUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildAfterMultiSessionSingleSignOutUrl() || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterMultiSessionSingleSignOutUrl', callback);\n    }\n  };\n\n  buildUserProfileUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildUserProfileUrl() || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildUserProfileUrl', callback);\n    }\n  };\n\n  buildCreateOrganizationUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildCreateOrganizationUrl() || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildCreateOrganizationUrl', callback);\n    }\n  };\n\n  buildOrganizationProfileUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildOrganizationProfileUrl() || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildOrganizationProfileUrl', callback);\n    }\n  };\n\n  buildWaitlistUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildWaitlistUrl() || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildWaitlistUrl', callback);\n    }\n  };\n\n  buildUrlWithAuth = (to: string): string | void => {\n    const callback = () => this.clerkjs?.buildUrlWithAuth(to) || '';\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildUrlWithAuth', callback);\n    }\n  };\n\n  handleUnauthenticated = async () => {\n    const callback = () => this.clerkjs?.handleUnauthenticated();\n    if (this.clerkjs && this.#loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('handleUnauthenticated', callback);\n    }\n  };\n\n  #waitForClerkJS(): Promise<HeadlessBrowserClerk | BrowserClerk> {\n    return new Promise<HeadlessBrowserClerk | BrowserClerk>(resolve => {\n      this.addOnLoaded(() => resolve(this.clerkjs!));\n    });\n  }\n\n  async loadClerkJS(): Promise<HeadlessBrowserClerk | BrowserClerk | undefined> {\n    if (this.mode !== 'browser' || this.#loaded) {\n      return;\n    }\n\n    // Store frontendAPI value on window as a fallback. This value can be used as a\n    // fallback during ClerkJS hot loading in case ClerkJS fails to find the\n    // \"data-clerk-frontend-api\" attribute on its script tag.\n\n    // This can happen when the DOM is altered completely during client rehydration.\n    // For example, in Remix with React 18 the document changes completely via `hydrateRoot(document)`.\n\n    // For more information refer to:\n    // - https://github.com/remix-run/remix/issues/2947\n    // - https://github.com/facebook/react/issues/24430\n    if (typeof window !== 'undefined') {\n      window.__clerk_publishable_key = this.#publishableKey;\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n\n    try {\n      if (this.Clerk) {\n        // Set a fixed Clerk version\n        let c: ClerkProp;\n\n        if (isConstructor<BrowserClerkConstructor | HeadlessBrowserClerkConstructor>(this.Clerk)) {\n          // Construct a new Clerk object if a constructor is passed\n          c = new this.Clerk(this.#publishableKey, {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n          } as any);\n\n          await c.load(this.options);\n        } else {\n          // Otherwise use the instantiated Clerk object\n          c = this.Clerk;\n\n          if (!c.loaded) {\n            await c.load(this.options);\n          }\n        }\n\n        global.Clerk = c;\n      } else if (!__BUILD_DISABLE_RHC__) {\n        // Hot-load latest ClerkJS from Clerk CDN\n        if (!global.Clerk) {\n          await loadClerkJsScript({\n            ...this.options,\n            publishableKey: this.#publishableKey,\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n            nonce: this.options.nonce,\n          });\n        }\n\n        if (!global.Clerk) {\n          throw new Error('Failed to download latest ClerkJS. Contact support@clerk.com.');\n        }\n\n        await global.Clerk.load(this.options);\n      }\n\n      if (global.Clerk?.loaded) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err as Error;\n      // In Next.js we can throw a full screen error in development mode.\n      // However, in production throwing an error results in an infinite loop.\n      // More info at: https://github.com/vercel/next.js/issues/6973\n      if (process.env.NODE_ENV === 'production') {\n        console.error(error.stack || error.message || error);\n      } else {\n        throw err;\n      }\n      return;\n    }\n  }\n\n  public addOnLoaded = (cb: () => void) => {\n    this.loadedListeners.push(cb);\n    /**\n     * When IsomorphicClerk is loaded execute the callback directly\n     */\n    if (this.loaded) {\n      this.emitLoaded();\n    }\n  };\n\n  public emitLoaded = () => {\n    this.loadedListeners.forEach(cb => cb());\n    this.loadedListeners = [];\n  };\n\n  private hydrateClerkJS = (clerkjs: BrowserClerk | HeadlessBrowserClerk | undefined) => {\n    if (!clerkjs) {\n      throw new Error('Failed to hydrate latest Clerk JS');\n    }\n\n    this.clerkjs = clerkjs;\n\n    this.premountMethodCalls.forEach(cb => cb());\n    this.premountAddListenerCalls.forEach((listenerHandlers, listener) => {\n      listenerHandlers.nativeUnsubscribe = clerkjs.addListener(listener);\n    });\n\n    if (this.preopenSignIn !== null) {\n      clerkjs.openSignIn(this.preopenSignIn);\n    }\n\n    if (this.preopenSignUp !== null) {\n      clerkjs.openSignUp(this.preopenSignUp);\n    }\n\n    if (this.preopenUserProfile !== null) {\n      clerkjs.openUserProfile(this.preopenUserProfile);\n    }\n\n    if (this.preopenUserVerification !== null) {\n      clerkjs.__internal_openReverification(this.preopenUserVerification);\n    }\n\n    if (this.preopenOneTap !== null) {\n      clerkjs.openGoogleOneTap(this.preopenOneTap);\n    }\n\n    if (this.preopenOrganizationProfile !== null) {\n      clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n    }\n\n    if (this.preopenCreateOrganization !== null) {\n      clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n    }\n\n    if (this.preOpenWaitlist !== null) {\n      clerkjs.openWaitlist(this.preOpenWaitlist);\n    }\n\n    this.premountSignInNodes.forEach((props, node) => {\n      clerkjs.mountSignIn(node, props);\n    });\n\n    this.premountSignUpNodes.forEach((props, node) => {\n      clerkjs.mountSignUp(node, props);\n    });\n\n    this.premountUserProfileNodes.forEach((props, node) => {\n      clerkjs.mountUserProfile(node, props);\n    });\n\n    this.premountUserButtonNodes.forEach((props, node) => {\n      clerkjs.mountUserButton(node, props);\n    });\n\n    this.premountOrganizationListNodes.forEach((props, node) => {\n      clerkjs.mountOrganizationList(node, props);\n    });\n\n    this.premountWaitlistNodes.forEach((props, node) => {\n      clerkjs.mountWaitlist(node, props);\n    });\n\n    this.#loaded = true;\n    this.emitLoaded();\n    return this.clerkjs;\n  };\n\n  get version() {\n    return this.clerkjs?.version;\n  }\n\n  get client(): ClientResource | undefined {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get session() {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return undefined;\n    }\n  }\n\n  get user() {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return undefined;\n    }\n  }\n\n  get organization() {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return undefined;\n    }\n  }\n\n  get telemetry() {\n    if (this.clerkjs) {\n      return this.clerkjs.telemetry;\n    } else {\n      return undefined;\n    }\n  }\n\n  get __unstable__environment(): any {\n    if (this.clerkjs) {\n      return (this.clerkjs as any).__unstable__environment;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get isSignedIn(): boolean {\n    if (this.clerkjs) {\n      return this.clerkjs.isSignedIn;\n    } else {\n      return false;\n    }\n  }\n\n  __unstable__setEnvironment(...args: any): void {\n    if (this.clerkjs && '__unstable__setEnvironment' in this.clerkjs) {\n      (this.clerkjs as any).__unstable__setEnvironment(args);\n    } else {\n      return undefined;\n    }\n  }\n\n  __unstable__updateProps = async (props: any): Promise<void> => {\n    const clerkjs = await this.#waitForClerkJS();\n    // Handle case where accounts has clerk-react@4 installed, but clerk-js@3 is manually loaded\n    if (clerkjs && '__unstable__updateProps' in clerkjs) {\n      return (clerkjs as any).__unstable__updateProps(props);\n    }\n  };\n\n  /**\n   * `setActive` can be used to set the active session and/or organization.\n   */\n  setActive = (params: SetActiveParams): Promise<void> => {\n    if (this.clerkjs) {\n      return this.clerkjs.setActive(params);\n    } else {\n      return Promise.reject();\n    }\n  };\n\n  openSignIn = (props?: SignInProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openSignIn(props);\n    } else {\n      this.preopenSignIn = props;\n    }\n  };\n\n  closeSignIn = () => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeSignIn();\n    } else {\n      this.preopenSignIn = null;\n    }\n  };\n\n  __internal_openReverification = (props?: __internal_UserVerificationModalProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.__internal_openReverification(props);\n    } else {\n      this.preopenUserVerification = props;\n    }\n  };\n\n  __internal_closeReverification = () => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.__internal_closeReverification();\n    } else {\n      this.preopenUserVerification = null;\n    }\n  };\n\n  openGoogleOneTap = (props?: GoogleOneTapProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openGoogleOneTap(props);\n    } else {\n      this.preopenOneTap = props;\n    }\n  };\n\n  closeGoogleOneTap = () => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeGoogleOneTap();\n    } else {\n      this.preopenOneTap = null;\n    }\n  };\n\n  openUserProfile = (props?: UserProfileProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openUserProfile(props);\n    } else {\n      this.preopenUserProfile = props;\n    }\n  };\n\n  closeUserProfile = () => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeUserProfile();\n    } else {\n      this.preopenUserProfile = null;\n    }\n  };\n\n  openOrganizationProfile = (props?: OrganizationProfileProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openOrganizationProfile(props);\n    } else {\n      this.preopenOrganizationProfile = props;\n    }\n  };\n\n  closeOrganizationProfile = () => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeOrganizationProfile();\n    } else {\n      this.preopenOrganizationProfile = null;\n    }\n  };\n\n  openCreateOrganization = (props?: CreateOrganizationProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openCreateOrganization(props);\n    } else {\n      this.preopenCreateOrganization = props;\n    }\n  };\n\n  closeCreateOrganization = () => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeCreateOrganization();\n    } else {\n      this.preopenCreateOrganization = null;\n    }\n  };\n\n  openWaitlist = (props?: WaitlistProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openWaitlist(props);\n    } else {\n      this.preOpenWaitlist = props;\n    }\n  };\n\n  closeWaitlist = () => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeWaitlist();\n    } else {\n      this.preOpenWaitlist = null;\n    }\n  };\n\n  openSignUp = (props?: SignUpProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openSignUp(props);\n    } else {\n      this.preopenSignUp = props;\n    }\n  };\n\n  closeSignUp = () => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeSignUp();\n    } else {\n      this.preopenSignUp = null;\n    }\n  };\n\n  mountSignIn = (node: HTMLDivElement, props?: SignInProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountSignIn(node, props);\n    } else {\n      this.premountSignInNodes.set(node, props);\n    }\n  };\n\n  unmountSignIn = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountSignIn(node);\n    } else {\n      this.premountSignInNodes.delete(node);\n    }\n  };\n\n  mountSignUp = (node: HTMLDivElement, props?: SignUpProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountSignUp(node, props);\n    } else {\n      this.premountSignUpNodes.set(node, props);\n    }\n  };\n\n  unmountSignUp = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountSignUp(node);\n    } else {\n      this.premountSignUpNodes.delete(node);\n    }\n  };\n\n  mountUserProfile = (node: HTMLDivElement, props?: UserProfileProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountUserProfile(node, props);\n    } else {\n      this.premountUserProfileNodes.set(node, props);\n    }\n  };\n\n  unmountUserProfile = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountUserProfile(node);\n    } else {\n      this.premountUserProfileNodes.delete(node);\n    }\n  };\n\n  mountOrganizationProfile = (node: HTMLDivElement, props?: OrganizationProfileProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountOrganizationProfile(node, props);\n    } else {\n      this.premountOrganizationProfileNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationProfile = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountOrganizationProfile(node);\n    } else {\n      this.premountOrganizationProfileNodes.delete(node);\n    }\n  };\n\n  mountCreateOrganization = (node: HTMLDivElement, props?: CreateOrganizationProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountCreateOrganization(node, props);\n    } else {\n      this.premountCreateOrganizationNodes.set(node, props);\n    }\n  };\n\n  unmountCreateOrganization = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountCreateOrganization(node);\n    } else {\n      this.premountCreateOrganizationNodes.delete(node);\n    }\n  };\n\n  mountOrganizationSwitcher = (node: HTMLDivElement, props?: OrganizationSwitcherProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountOrganizationSwitcher(node, props);\n    } else {\n      this.premountOrganizationSwitcherNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationSwitcher = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountOrganizationSwitcher(node);\n    } else {\n      this.premountOrganizationSwitcherNodes.delete(node);\n    }\n  };\n\n  __experimental_prefetchOrganizationSwitcher = () => {\n    const callback = () => this.clerkjs?.__experimental_prefetchOrganizationSwitcher();\n    if (this.clerkjs && this.#loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('__experimental_prefetchOrganizationSwitcher', callback);\n    }\n  };\n\n  mountOrganizationList = (node: HTMLDivElement, props?: OrganizationListProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountOrganizationList(node, props);\n    } else {\n      this.premountOrganizationListNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationList = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountOrganizationList(node);\n    } else {\n      this.premountOrganizationListNodes.delete(node);\n    }\n  };\n\n  mountUserButton = (node: HTMLDivElement, userButtonProps?: UserButtonProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountUserButton(node, userButtonProps);\n    } else {\n      this.premountUserButtonNodes.set(node, userButtonProps);\n    }\n  };\n\n  unmountUserButton = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountUserButton(node);\n    } else {\n      this.premountUserButtonNodes.delete(node);\n    }\n  };\n\n  mountWaitlist = (node: HTMLDivElement, props?: WaitlistProps) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountWaitlist(node, props);\n    } else {\n      this.premountWaitlistNodes.set(node, props);\n    }\n  };\n\n  unmountWaitlist = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountWaitlist(node);\n    } else {\n      this.premountWaitlistNodes.delete(node);\n    }\n  };\n\n  addListener = (listener: ListenerCallback): UnsubscribeCallback => {\n    if (this.clerkjs) {\n      return this.clerkjs.addListener(listener);\n    } else {\n      const unsubscribe = () => {\n        const listenerHandlers = this.premountAddListenerCalls.get(listener);\n        if (listenerHandlers) {\n          listenerHandlers.nativeUnsubscribe?.();\n          this.premountAddListenerCalls.delete(listener);\n        }\n      };\n      this.premountAddListenerCalls.set(listener, { unsubscribe, nativeUnsubscribe: undefined });\n      return unsubscribe;\n    }\n  };\n\n  navigate = (to: string) => {\n    const callback = () => this.clerkjs?.navigate(to);\n    if (this.clerkjs && this.#loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('navigate', callback);\n    }\n  };\n\n  redirectWithAuth = async (...args: Parameters<Clerk['redirectWithAuth']>) => {\n    const callback = () => this.clerkjs?.redirectWithAuth(...args);\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectWithAuth', callback);\n      return;\n    }\n  };\n\n  redirectToSignIn = async (opts?: SignInRedirectOptions) => {\n    const callback = () => this.clerkjs?.redirectToSignIn(opts as any);\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignIn', callback);\n      return;\n    }\n  };\n\n  redirectToSignUp = async (opts?: SignUpRedirectOptions) => {\n    const callback = () => this.clerkjs?.redirectToSignUp(opts as any);\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignUp', callback);\n      return;\n    }\n  };\n\n  redirectToUserProfile = async () => {\n    const callback = () => this.clerkjs?.redirectToUserProfile();\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToUserProfile', callback);\n      return;\n    }\n  };\n\n  redirectToAfterSignUp = (): void => {\n    const callback = () => this.clerkjs?.redirectToAfterSignUp();\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignUp', callback);\n    }\n  };\n\n  redirectToAfterSignIn = () => {\n    const callback = () => this.clerkjs?.redirectToAfterSignIn();\n    if (this.clerkjs && this.#loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignIn', callback);\n    }\n  };\n\n  redirectToAfterSignOut = () => {\n    const callback = () => this.clerkjs?.redirectToAfterSignOut();\n    if (this.clerkjs && this.#loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignOut', callback);\n    }\n  };\n\n  redirectToOrganizationProfile = async () => {\n    const callback = () => this.clerkjs?.redirectToOrganizationProfile();\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToOrganizationProfile', callback);\n      return;\n    }\n  };\n\n  redirectToCreateOrganization = async () => {\n    const callback = () => this.clerkjs?.redirectToCreateOrganization();\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToCreateOrganization', callback);\n      return;\n    }\n  };\n\n  redirectToWaitlist = async () => {\n    const callback = () => this.clerkjs?.redirectToWaitlist();\n    if (this.clerkjs && this.#loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToWaitlist', callback);\n      return;\n    }\n  };\n\n  handleRedirectCallback = async (params: HandleOAuthCallbackParams): Promise<void> => {\n    const callback = () => this.clerkjs?.handleRedirectCallback(params);\n    if (this.clerkjs && this.#loaded) {\n      void callback()?.catch(() => {\n        // This error is caused when the host app is using React18\n        // and strictMode is enabled. This useEffects runs twice because\n        // the clerk-react ui components mounts, unmounts and mounts again\n        // so the clerk-js component loses its state because of the custom\n        // unmount callback we're using.\n        // This needs to be solved by tweaking the logic in uiComponents.tsx\n        // or by making handleRedirectCallback idempotent\n      });\n    } else {\n      this.premountMethodCalls.set('handleRedirectCallback', callback);\n    }\n  };\n\n  handleGoogleOneTapCallback = async (\n    signInOrUp: SignInResource | SignUpResource,\n    params: HandleOAuthCallbackParams,\n  ): Promise<void> => {\n    const callback = () => this.clerkjs?.handleGoogleOneTapCallback(signInOrUp, params);\n    if (this.clerkjs && this.#loaded) {\n      void callback()?.catch(() => {\n        // This error is caused when the host app is using React18\n        // and strictMode is enabled. This useEffects runs twice because\n        // the clerk-react ui components mounts, unmounts and mounts again\n        // so the clerk-js component loses its state because of the custom\n        // unmount callback we're using.\n        // This needs to be solved by tweaking the logic in uiComponents.tsx\n        // or by making handleRedirectCallback idempotent\n      });\n    } else {\n      this.premountMethodCalls.set('handleGoogleOneTapCallback', callback);\n    }\n  };\n\n  handleEmailLinkVerification = async (params: HandleEmailLinkVerificationParams) => {\n    const callback = () => this.clerkjs?.handleEmailLinkVerification(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('handleEmailLinkVerification', callback);\n    }\n  };\n\n  authenticateWithMetamask = async (params?: AuthenticateWithMetamaskParams) => {\n    const callback = () => this.clerkjs?.authenticateWithMetamask(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithMetamask', callback);\n    }\n  };\n\n  authenticateWithCoinbaseWallet = async (params?: AuthenticateWithCoinbaseWalletParams) => {\n    const callback = () => this.clerkjs?.authenticateWithCoinbaseWallet(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithCoinbaseWallet', callback);\n    }\n  };\n\n  authenticateWithOKXWallet = async (params?: AuthenticateWithOKXWalletParams) => {\n    const callback = () => this.clerkjs?.authenticateWithOKXWallet(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithOKXWallet', callback);\n    }\n  };\n\n  authenticateWithWeb3 = async (params: ClerkAuthenticateWithWeb3Params) => {\n    const callback = () => this.clerkjs?.authenticateWithWeb3(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithWeb3', callback);\n    }\n  };\n\n  authenticateWithGoogleOneTap = async (params: AuthenticateWithGoogleOneTapParams) => {\n    const clerkjs = await this.#waitForClerkJS();\n    return clerkjs.authenticateWithGoogleOneTap(params);\n  };\n\n  createOrganization = async (params: CreateOrganizationParams): Promise<OrganizationResource | void> => {\n    const callback = () => this.clerkjs?.createOrganization(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<OrganizationResource>;\n    } else {\n      this.premountMethodCalls.set('createOrganization', callback);\n    }\n  };\n\n  getOrganization = async (organizationId: string): Promise<OrganizationResource | void> => {\n    const callback = () => this.clerkjs?.getOrganization(organizationId);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<OrganizationResource>;\n    } else {\n      this.premountMethodCalls.set('getOrganization', callback);\n    }\n  };\n\n  joinWaitlist = async (params: JoinWaitlistParams): Promise<WaitlistResource | void> => {\n    const callback = () => this.clerkjs?.joinWaitlist(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<WaitlistResource>;\n    } else {\n      this.premountMethodCalls.set('joinWaitlist', callback);\n    }\n  };\n\n  signOut = async (...args: Parameters<Clerk['signOut']>) => {\n    const callback = () => this.clerkjs?.signOut(...args);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('signOut', callback);\n    }\n  };\n}\n","import { deriveState } from '@clerk/shared/deriveState';\nimport { ClientContext, OrganizationProvider, SessionContext, UserContext } from '@clerk/shared/react';\nimport type { ClientResource, InitialState, Resources } from '@clerk/types';\nimport React from 'react';\n\nimport { IsomorphicClerk } from '../isomorphicClerk';\nimport type { IsomorphicClerkOptions } from '../types';\nimport { AuthContext } from './AuthContext';\nimport { IsomorphicClerkContext } from './IsomorphicClerkContext';\n\ntype ClerkContextProvider = {\n  isomorphicClerkOptions: IsomorphicClerkOptions;\n  initialState: InitialState | undefined;\n  children: React.ReactNode;\n};\n\nexport type ClerkContextProviderState = Resources;\n\nexport function ClerkContextProvider(props: ClerkContextProvider) {\n  const { isomorphicClerkOptions, initialState, children } = props;\n  const { isomorphicClerk: clerk, loaded: clerkLoaded } = useLoadedIsomorphicClerk(isomorphicClerkOptions);\n\n  const [state, setState] = React.useState<ClerkContextProviderState>({\n    client: clerk.client as ClientResource,\n    session: clerk.session,\n    user: clerk.user,\n    organization: clerk.organization,\n  });\n\n  React.useEffect(() => {\n    return clerk.addListener(e => setState({ ...e }));\n  }, []);\n\n  const derivedState = deriveState(clerkLoaded, state, initialState);\n  const clerkCtx = React.useMemo(() => ({ value: clerk }), [clerkLoaded]);\n  const clientCtx = React.useMemo(() => ({ value: state.client }), [state.client]);\n\n  const {\n    sessionId,\n    session,\n    userId,\n    user,\n    orgId,\n    actor,\n    organization,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    factorVerificationAge,\n  } = derivedState;\n\n  const authCtx = React.useMemo(() => {\n    const value = {\n      sessionId,\n      userId,\n      actor,\n      orgId,\n      orgRole,\n      orgSlug,\n      orgPermissions,\n      factorVerificationAge,\n    };\n    return { value };\n  }, [sessionId, userId, actor, orgId, orgRole, orgSlug, factorVerificationAge]);\n  const sessionCtx = React.useMemo(() => ({ value: session }), [sessionId, session]);\n  const userCtx = React.useMemo(() => ({ value: user }), [userId, user]);\n  const organizationCtx = React.useMemo(() => {\n    const value = {\n      organization: organization,\n    };\n    return { value };\n  }, [orgId, organization]);\n\n  return (\n    // @ts-expect-error value passed is of type IsomorphicClerk where the context expects LoadedClerk\n    <IsomorphicClerkContext.Provider value={clerkCtx}>\n      <ClientContext.Provider value={clientCtx}>\n        <SessionContext.Provider value={sessionCtx}>\n          <OrganizationProvider {...organizationCtx.value}>\n            <AuthContext.Provider value={authCtx}>\n              <UserContext.Provider value={userCtx}>{children}</UserContext.Provider>\n            </AuthContext.Provider>\n          </OrganizationProvider>\n        </SessionContext.Provider>\n      </ClientContext.Provider>\n    </IsomorphicClerkContext.Provider>\n  );\n}\n\nconst useLoadedIsomorphicClerk = (options: IsomorphicClerkOptions) => {\n  const [loaded, setLoaded] = React.useState(false);\n  const isomorphicClerk = React.useMemo(() => IsomorphicClerk.getOrCreateInstance(options), []);\n\n  React.useEffect(() => {\n    void isomorphicClerk.__unstable__updateProps({ appearance: options.appearance });\n  }, [options.appearance]);\n\n  React.useEffect(() => {\n    void isomorphicClerk.__unstable__updateProps({ options });\n  }, [options.localization]);\n\n  React.useEffect(() => {\n    isomorphicClerk.addOnLoaded(() => setLoaded(true));\n  }, []);\n\n  React.useEffect(() => {\n    return () => {\n      IsomorphicClerk.clearInstance();\n      setLoaded(false);\n    };\n  }, []);\n\n  return { isomorphicClerk, loaded };\n};\n","import { isPublishableKey } from '@clerk/shared/keys';\nimport React from 'react';\n\nimport { errorThrower } from '../errors/errorThrower';\nimport { multipleClerkProvidersError } from '../errors/messages';\nimport type { ClerkProviderProps } from '../types';\nimport { withMaxAllowedInstancesGuard } from '../utils';\nimport { ClerkContextProvider } from './ClerkContextProvider';\n\nfunction ClerkProviderBase(props: ClerkProviderProps) {\n  const { initialState, children, __internal_bypassMissingPublishableKey, ...restIsomorphicClerkOptions } = props;\n  const { publishableKey = '', Clerk: userInitialisedClerk } = restIsomorphicClerkOptions;\n\n  if (!userInitialisedClerk && !__internal_bypassMissingPublishableKey) {\n    if (!publishableKey) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({ key: publishableKey });\n    }\n  }\n\n  return (\n    <ClerkContextProvider\n      initialState={initialState}\n      isomorphicClerkOptions={restIsomorphicClerkOptions}\n    >\n      {children}\n    </ClerkContextProvider>\n  );\n}\n\nconst ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, 'ClerkProvider', multipleClerkProvidersError);\n\nClerkProvider.displayName = 'ClerkProvider';\n\nexport { ClerkProvider };\n","import './polyfills';\n\nimport { setClerkJsLoadingErrorPackageName } from '@clerk/shared/loadClerkJsScript';\n\nimport { setErrorThrowerOptions } from './errors/errorThrower';\n\nexport * from './components';\nexport * from './contexts';\n\nexport * from './hooks';\nexport type { BrowserClerk, ClerkProp, HeadlessBrowserClerk, ClerkProviderProps } from './types';\n\nsetErrorThrowerOptions({ packageName: PACKAGE_NAME });\nsetClerkJsLoadingErrorPackageName(PACKAGE_NAME);\n","import type { Clerk } from '@clerk/clerk-js/no-rhc';\nimport type { ClerkProviderProps as ClerkReactProviderProps } from '@clerk/clerk-react';\nimport { ClerkProvider as ClerkReactProvider } from '@clerk/clerk-react';\nimport React from 'react';\n\nimport { createClerkClient } from '../internal/clerk';\nimport type { StorageCache } from '../internal/utils/storage';\n\ntype ChromeExtensionClerkProviderProps = ClerkReactProviderProps & {\n  /**\n   * @experimental\n   * @description Enables the listener to sync host cookies on changes.\n   */\n  __experimental_syncHostListener?: boolean;\n  storageCache?: StorageCache;\n  syncHost?: string;\n};\n\nexport function ClerkProvider(props: ChromeExtensionClerkProviderProps): JSX.Element | null {\n  const { children, storageCache, syncHost, __experimental_syncHostListener, ...rest } = props;\n  const { publishableKey = '' } = props;\n\n  const [clerkInstance, setClerkInstance] = React.useState<Clerk | null>(null);\n\n  React.useEffect(() => {\n    void (async () => {\n      setClerkInstance(\n        await createClerkClient({ publishableKey, storageCache, syncHost, __experimental_syncHostListener }),\n      );\n    })();\n  }, [publishableKey, storageCache, syncHost, __experimental_syncHostListener]);\n\n  if (!clerkInstance) {\n    return null;\n  }\n\n  return (\n    <ClerkReactProvider\n      {...rest}\n      Clerk={clerkInstance}\n      standardBrowser={!syncHost}\n    >\n      {children}\n    </ClerkReactProvider>\n  );\n}\n"]}