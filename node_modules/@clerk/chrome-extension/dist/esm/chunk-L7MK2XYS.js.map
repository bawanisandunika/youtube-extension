{"version":3,"sources":["../../../shared/src/error.ts","../../../shared/dist/chunk-7ELT755Q.mjs","../../../shared/src/isomorphicAtob.ts","../../../shared/src/constants.ts","../../../shared/src/keys.ts","../../src/types.ts","../../../shared/src/devBrowser.ts","../../src/internal/constants.ts","../../src/internal/utils/errors.ts","../../src/internal/utils/cookies.ts","../../src/internal/utils/jwt-handler.ts","../../src/internal/utils/manifest.ts","../../src/internal/utils/request-handler.ts","../../src/internal/utils/response-handler.ts","../../src/internal/utils/storage.ts","../../src/internal/clerk.ts"],"names":["packageName","customMessages","__defProp","__export","prodHandler","devHandler","browser"],"mappings":"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","file":"chunk-L7MK2XYS.js","sourcesContent":["import type { ClerkAPIError, ClerkAPIErrorJSON } from '@clerk/types';\n\nexport function isUnauthorizedError(e: any): boolean {\n  const status = e?.status;\n  const code = e?.errors?.[0]?.code;\n  return code === 'authentication_invalid' && status === 401;\n}\n\nexport function isCaptchaError(e: ClerkAPIResponseError): boolean {\n  return ['captcha_invalid', 'captcha_not_enabled', 'captcha_missing_token'].includes(e.errors[0].code);\n}\n\nexport function is4xxError(e: any): boolean {\n  const status = e?.status;\n  return !!status && status >= 400 && status < 500;\n}\n\nexport function isNetworkError(e: any): boolean {\n  // TODO: revise during error handling epic\n  const message = (`${e.message}${e.name}` || '').toLowerCase().replace(/\\s+/g, '');\n  return message.includes('networkerror');\n}\n\ninterface ClerkAPIResponseOptions {\n  data: ClerkAPIErrorJSON[];\n  status: number;\n  clerkTraceId?: string;\n}\n\n// For a comprehensive Metamask error list, please see\n// https://docs.metamask.io/guide/ethereum-provider.html#errors\nexport interface MetamaskError extends Error {\n  code: 4001 | 32602 | 32603;\n  message: string;\n  data?: unknown;\n}\n\nexport function isKnownError(error: any): error is ClerkAPIResponseError | ClerkRuntimeError | MetamaskError {\n  return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\n\nexport function isClerkAPIResponseError(err: any): err is ClerkAPIResponseError {\n  return 'clerkError' in err;\n}\n\n/**\n * Checks if the provided error object is an instance of ClerkRuntimeError.\n *\n * @param {any} err - The error object to check.\n * @returns {boolean} True if the error is a ClerkRuntimeError, false otherwise.\n *\n * @example\n * const error = new ClerkRuntimeError('An error occurred');\n * if (isClerkRuntimeError(error)) {\n *   // Handle ClerkRuntimeError\n *   console.error('ClerkRuntimeError:', error.message);\n * } else {\n *   // Handle other errors\n *   console.error('Other error:', error.message);\n * }\n */\nexport function isClerkRuntimeError(err: any): err is ClerkRuntimeError {\n  return 'clerkRuntimeError' in err;\n}\n\nexport function isMetamaskError(err: any): err is MetamaskError {\n  return 'code' in err && [4001, 32602, 32603].includes(err.code) && 'message' in err;\n}\n\nexport function isUserLockedError(err: any) {\n  return isClerkAPIResponseError(err) && err.errors?.[0]?.code === 'user_locked';\n}\n\nexport function isPasswordPwnedError(err: any) {\n  return isClerkAPIResponseError(err) && err.errors?.[0]?.code === 'form_password_pwned';\n}\n\nexport function parseErrors(data: ClerkAPIErrorJSON[] = []): ClerkAPIError[] {\n  return data.length > 0 ? data.map(parseError) : [];\n}\n\nexport function parseError(error: ClerkAPIErrorJSON): ClerkAPIError {\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: error?.meta?.param_name,\n      sessionId: error?.meta?.session_id,\n      emailAddresses: error?.meta?.email_addresses,\n      identifiers: error?.meta?.identifiers,\n      zxcvbn: error?.meta?.zxcvbn,\n    },\n  };\n}\n\nexport function errorToJSON(error: ClerkAPIError | null): ClerkAPIErrorJSON {\n  return {\n    code: error?.code || '',\n    message: error?.message || '',\n    long_message: error?.longMessage,\n    meta: {\n      param_name: error?.meta?.paramName,\n      session_id: error?.meta?.sessionId,\n      email_addresses: error?.meta?.emailAddresses,\n      identifiers: error?.meta?.identifiers,\n      zxcvbn: error?.meta?.zxcvbn,\n    },\n  };\n}\n\nexport class ClerkAPIResponseError extends Error {\n  clerkError: true;\n\n  status: number;\n  message: string;\n  clerkTraceId?: string;\n\n  errors: ClerkAPIError[];\n\n  constructor(message: string, { data, status, clerkTraceId }: ClerkAPIResponseOptions) {\n    super(message);\n\n    Object.setPrototypeOf(this, ClerkAPIResponseError.prototype);\n\n    this.status = status;\n    this.message = message;\n    this.clerkTraceId = clerkTraceId;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n\n  public toString = () => {\n    let message = `[${this.name}]\\nMessage:${this.message}\\nStatus:${this.status}\\nSerialized errors: ${this.errors.map(\n      e => JSON.stringify(e),\n    )}`;\n\n    if (this.clerkTraceId) {\n      message += `\\nClerk Trace ID: ${this.clerkTraceId}`;\n    }\n\n    return message;\n  };\n}\n\n/**\n * Custom error class for representing Clerk runtime errors.\n *\n * @class ClerkRuntimeError\n * @example\n *   throw new ClerkRuntimeError('An error occurred', { code: 'password_invalid' });\n */\nexport class ClerkRuntimeError extends Error {\n  clerkRuntimeError: true;\n\n  /**\n   * The error message.\n   *\n   * @type {string}\n   * @memberof ClerkRuntimeError\n   */\n  message: string;\n\n  /**\n   * A unique code identifying the error, can be used for localization.\n   *\n   * @type {string}\n   * @memberof ClerkRuntimeError\n   */\n  code: string;\n\n  constructor(message: string, { code }: { code: string }) {\n    const prefix = '🔒 Clerk:';\n    const regex = new RegExp(prefix.replace(' ', '\\\\s*'), 'i');\n    const sanitized = message.replace(regex, '');\n    const _message = `${prefix} ${sanitized.trim()}\\n\\n(code=\"${code}\")\\n`;\n    super(_message);\n\n    Object.setPrototypeOf(this, ClerkRuntimeError.prototype);\n\n    this.code = code;\n    this.message = _message;\n    this.clerkRuntimeError = true;\n    this.name = 'ClerkRuntimeError';\n  }\n\n  /**\n   * Returns a string representation of the error.\n   *\n   * @returns {string} A formatted string with the error name and message.\n   * @memberof ClerkRuntimeError\n   */\n  public toString = () => {\n    return `[${this.name}]\\nMessage:${this.message}`;\n  };\n}\n\nexport class EmailLinkError extends Error {\n  code: string;\n\n  constructor(code: string) {\n    super(code);\n    this.code = code;\n    this.name = 'EmailLinkError' as const;\n    Object.setPrototypeOf(this, EmailLinkError.prototype);\n  }\n}\n\nexport function isEmailLinkError(err: Error): err is EmailLinkError {\n  return err.name === 'EmailLinkError';\n}\n\n/**\n * @deprecated Please use `EmailLinkErrorCodeStatus` instead.\n *\n * @hidden\n */\nexport const EmailLinkErrorCode = {\n  Expired: 'expired',\n  Failed: 'failed',\n  ClientMismatch: 'client_mismatch',\n};\n\nexport const EmailLinkErrorCodeStatus = {\n  Expired: 'expired',\n  Failed: 'failed',\n  ClientMismatch: 'client_mismatch',\n} as const;\n\nconst DefaultMessages = Object.freeze({\n  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingSecretKeyErrorMessage: `Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingClerkProvider: `{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`,\n});\n\ntype MessageKeys = keyof typeof DefaultMessages;\n\ntype Messages = Record<MessageKeys, string>;\n\ntype CustomMessages = Partial<Messages>;\n\nexport type ErrorThrowerOptions = {\n  packageName: string;\n  customMessages?: CustomMessages;\n};\n\nexport interface ErrorThrower {\n  setPackageName(options: ErrorThrowerOptions): ErrorThrower;\n\n  setMessages(options: ErrorThrowerOptions): ErrorThrower;\n\n  throwInvalidPublishableKeyError(params: { key?: string }): never;\n\n  throwInvalidProxyUrl(params: { url?: string }): never;\n\n  throwMissingPublishableKeyError(): never;\n\n  throwMissingSecretKeyError(): never;\n\n  throwMissingClerkProviderError(params: { source?: string }): never;\n\n  throw(message: string): never;\n}\n\nexport function buildErrorThrower({ packageName, customMessages }: ErrorThrowerOptions): ErrorThrower {\n  let pkg = packageName;\n\n  const messages = {\n    ...DefaultMessages,\n    ...customMessages,\n  };\n\n  function buildMessage(rawMessage: string, replacements?: Record<string, string | number>) {\n    if (!replacements) {\n      return `${pkg}: ${rawMessage}`;\n    }\n\n    let msg = rawMessage;\n    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n\n    for (const match of matches) {\n      const replacement = (replacements[match[1]] || '').toString();\n      msg = msg.replace(`{{${match[1]}}}`, replacement);\n    }\n\n    return `${pkg}: ${msg}`;\n  }\n\n  return {\n    setPackageName({ packageName }: ErrorThrowerOptions): ErrorThrower {\n      if (typeof packageName === 'string') {\n        pkg = packageName;\n      }\n      return this;\n    },\n\n    setMessages({ customMessages }: ErrorThrowerOptions): ErrorThrower {\n      Object.assign(messages, customMessages || {});\n      return this;\n    },\n\n    throwInvalidPublishableKeyError(params: { key?: string }): never {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n\n    throwInvalidProxyUrl(params: { url?: string }): never {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n\n    throwMissingPublishableKeyError(): never {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    },\n\n    throwMissingSecretKeyError(): never {\n      throw new Error(buildMessage(messages.MissingSecretKeyErrorMessage));\n    },\n\n    throwMissingClerkProviderError(params: { source?: string }): never {\n      throw new Error(buildMessage(messages.MissingClerkProvider, params));\n    },\n\n    throw(message: string): never {\n      throw new Error(buildMessage(message));\n    },\n  };\n}\n\ntype ClerkWebAuthnErrorCode =\n  // Generic\n  | 'passkey_not_supported'\n  | 'passkey_pa_not_supported'\n  | 'passkey_invalid_rpID_or_domain'\n  | 'passkey_already_exists'\n  | 'passkey_operation_aborted'\n  // Retrieval\n  | 'passkey_retrieval_cancelled'\n  | 'passkey_retrieval_failed'\n  // Registration\n  | 'passkey_registration_cancelled'\n  | 'passkey_registration_failed';\n\nexport class ClerkWebAuthnError extends ClerkRuntimeError {\n  /**\n   * A unique code identifying the error, can be used for localization.\n   */\n  code: ClerkWebAuthnErrorCode;\n\n  constructor(message: string, { code }: { code: ClerkWebAuthnErrorCode }) {\n    super(message, { code });\n    this.code = code;\n  }\n}\n","var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\n\nexport {\n  __export,\n  __reExport,\n  __privateGet,\n  __privateAdd,\n  __privateSet,\n  __privateMethod\n};\n//# sourceMappingURL=chunk-7ELT755Q.mjs.map","/**\n * A function that decodes a string of data which has been encoded using base-64 encoding.\n * Uses `atob` if available, otherwise uses `Buffer` from `global`. If neither are available, returns the data as-is.\n */\nexport const isomorphicAtob = (data: string) => {\n  if (typeof atob !== 'undefined' && typeof atob === 'function') {\n    return atob(data);\n  } else if (typeof global !== 'undefined' && global.Buffer) {\n    return new global.Buffer(data, 'base64').toString();\n  }\n  return data;\n};\n","export const LEGACY_DEV_INSTANCE_SUFFIXES = ['.lcl.dev', '.lclstage.dev', '.lclclerk.com'];\nexport const CURRENT_DEV_INSTANCE_SUFFIXES = ['.accounts.dev', '.accountsstage.dev', '.accounts.lclclerk.com'];\nexport const DEV_OR_STAGING_SUFFIXES = [\n  '.lcl.dev',\n  '.stg.dev',\n  '.lclstage.dev',\n  '.stgstage.dev',\n  '.dev.lclclerk.com',\n  '.stg.lclclerk.com',\n  '.accounts.lclclerk.com',\n  'accountsstage.dev',\n  'accounts.dev',\n];\nexport const LOCAL_ENV_SUFFIXES = ['.lcl.dev', 'lclstage.dev', '.lclclerk.com', '.accounts.lclclerk.com'];\nexport const STAGING_ENV_SUFFIXES = ['.accountsstage.dev'];\nexport const LOCAL_API_URL = 'https://api.lclclerk.com';\nexport const STAGING_API_URL = 'https://api.clerkstage.dev';\nexport const PROD_API_URL = 'https://api.clerk.com';\n\n/**\n * Returns the URL for a static image\n * using the new img.clerk.com service\n */\nexport function iconImageUrl(id: string, format: 'svg' | 'jpeg' = 'svg'): string {\n  return `https://img.clerk.com/static/${id}.${format}`;\n}\n","import type { PublishableKey } from '@clerk/types';\n\nimport { DEV_OR_STAGING_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES } from './constants';\nimport { isomorphicAtob } from './isomorphicAtob';\nimport { isomorphicBtoa } from './isomorphicBtoa';\n\ntype ParsePublishableKeyOptions = {\n  fatal?: boolean;\n  domain?: string;\n  proxyUrl?: string;\n};\n\nconst PUBLISHABLE_KEY_LIVE_PREFIX = 'pk_live_';\nconst PUBLISHABLE_KEY_TEST_PREFIX = 'pk_test_';\n\n// This regex matches the publishable like frontend API keys (e.g. foo-bar-13.clerk.accounts.dev)\nconst PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\n\nexport function buildPublishableKey(frontendApi: string): string {\n  const isDevKey =\n    PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) ||\n    (frontendApi.startsWith('clerk.') && LEGACY_DEV_INSTANCE_SUFFIXES.some(s => frontendApi.endsWith(s)));\n  const keyPrefix = isDevKey ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n  return `${keyPrefix}${isomorphicBtoa(`${frontendApi}$`)}`;\n}\n\nexport function parsePublishableKey(\n  key: string | undefined,\n  options: ParsePublishableKeyOptions & { fatal: true },\n): PublishableKey;\nexport function parsePublishableKey(\n  key: string | undefined,\n  options?: ParsePublishableKeyOptions,\n): PublishableKey | null;\nexport function parsePublishableKey(\n  key: string | undefined,\n  options: { fatal?: boolean; domain?: string; proxyUrl?: string } = {},\n): PublishableKey | null {\n  key = key || '';\n\n  if (!key || !isPublishableKey(key)) {\n    if (options.fatal && !key) {\n      throw new Error(\n        'Publishable key is missing. Ensure that your publishable key is correctly configured. Double-check your environment configuration for your keys, or access them here: https://dashboard.clerk.com/last-active?path=api-keys',\n      );\n    }\n    if (options.fatal && !isPublishableKey(key)) {\n      throw new Error('Publishable key not valid.');\n    }\n    return null;\n  }\n\n  const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? 'production' : 'development';\n\n  let frontendApi = isomorphicAtob(key.split('_')[2]);\n\n  // TODO(@dimkl): validate packages/clerk-js/src/utils/instance.ts\n  frontendApi = frontendApi.slice(0, -1);\n\n  if (options.proxyUrl) {\n    frontendApi = options.proxyUrl;\n  } else if (instanceType !== 'development' && options.domain) {\n    frontendApi = `clerk.${options.domain}`;\n  }\n\n  return {\n    instanceType,\n    frontendApi,\n  };\n}\n\n/**\n * Checks if the provided key is a valid publishable key.\n *\n * @param key - The key to be checked. Defaults to an empty string if not provided.\n * @returns `true` if 'key' is a valid publishable key, `false` otherwise.\n */\nexport function isPublishableKey(key: string = '') {\n  try {\n    const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n\n    const hasValidFrontendApiPostfix = isomorphicAtob(key.split('_')[2] || '').endsWith('$');\n\n    return hasValidPrefix && hasValidFrontendApiPostfix;\n  } catch {\n    return false;\n  }\n}\n\nexport function createDevOrStagingUrlCache() {\n  const devOrStagingUrlCache = new Map<string, boolean>();\n\n  return {\n    isDevOrStagingUrl: (url: string | URL): boolean => {\n      if (!url) {\n        return false;\n      }\n\n      const hostname = typeof url === 'string' ? url : url.hostname;\n      let res = devOrStagingUrlCache.get(hostname);\n      if (res === undefined) {\n        res = DEV_OR_STAGING_SUFFIXES.some(s => hostname.endsWith(s));\n        devOrStagingUrlCache.set(hostname, res);\n      }\n      return res;\n    },\n  };\n}\n\nexport function isDevelopmentFromPublishableKey(apiKey: string): boolean {\n  return apiKey.startsWith('test_') || apiKey.startsWith('pk_test_');\n}\n\nexport function isProductionFromPublishableKey(apiKey: string): boolean {\n  return apiKey.startsWith('live_') || apiKey.startsWith('pk_live_');\n}\n\nexport function isDevelopmentFromSecretKey(apiKey: string): boolean {\n  return apiKey.startsWith('test_') || apiKey.startsWith('sk_test_');\n}\n\nexport function isProductionFromSecretKey(apiKey: string): boolean {\n  return apiKey.startsWith('live_') || apiKey.startsWith('sk_live_');\n}\n\nexport async function getCookieSuffix(\n  publishableKey: string,\n  subtle: SubtleCrypto = globalThis.crypto.subtle,\n): Promise<string> {\n  const data = new TextEncoder().encode(publishableKey);\n  const digest = await subtle.digest('sha-1', data);\n  const stringDigest = String.fromCharCode(...new Uint8Array(digest));\n  // Base 64 Encoding with URL and Filename Safe Alphabet: https://datatracker.ietf.org/doc/html/rfc4648#section-5\n  return isomorphicBtoa(stringDigest).replace(/\\+/gi, '-').replace(/\\//gi, '_').substring(0, 8);\n}\n\nexport const getSuffixedCookieName = (cookieName: string, cookieSuffix: string): string => {\n  return `${cookieName}_${cookieSuffix}`;\n};\n","export const SCOPE = {\n  BACKGROUND: 'background',\n} as const;\n\nexport type Scope = (typeof SCOPE)[keyof typeof SCOPE];\n\nexport interface ClerkClientExtensionFeatures {\n  background?: boolean;\n  sync?: boolean;\n}\n","export const DEV_BROWSER_JWT_KEY = '__clerk_db_jwt';\nexport const DEV_BROWSER_JWT_HEADER = 'Clerk-Db-Jwt';\n\n// Sets the dev_browser JWT in the hash or the search\nexport function setDevBrowserJWTInURL(url: URL, jwt: string): URL {\n  const resultURL = new URL(url);\n\n  // extract & strip existing jwt from search\n  const jwtFromSearch = resultURL.searchParams.get(DEV_BROWSER_JWT_KEY);\n  resultURL.searchParams.delete(DEV_BROWSER_JWT_KEY);\n\n  // Existing jwt takes precedence\n  const jwtToSet = jwtFromSearch || jwt;\n\n  if (jwtToSet) {\n    resultURL.searchParams.set(DEV_BROWSER_JWT_KEY, jwtToSet);\n  }\n\n  return resultURL;\n}\n\n/**\n * Gets the __clerk_db_jwt JWT from either the hash or the search\n * Side effect:\n * Removes __clerk_db_jwt JWT from the URL (hash and searchParams) and updates the browser history\n */\nexport function extractDevBrowserJWTFromURL(url: URL): string {\n  const jwt = readDevBrowserJwtFromSearchParams(url);\n  const cleanUrl = removeDevBrowserJwt(url);\n  if (cleanUrl.href !== url.href && typeof globalThis.history !== 'undefined') {\n    globalThis.history.replaceState(null, '', removeDevBrowserJwt(url));\n  }\n  return jwt;\n}\n\nconst readDevBrowserJwtFromSearchParams = (url: URL) => {\n  return url.searchParams.get(DEV_BROWSER_JWT_KEY) || '';\n};\n\nconst removeDevBrowserJwt = (url: URL) => {\n  return removeDevBrowserJwtFromURLSearchParams(removeLegacyDevBrowserJwt(url));\n};\n\nconst removeDevBrowserJwtFromURLSearchParams = (_url: URL) => {\n  const url = new URL(_url);\n  url.searchParams.delete(DEV_BROWSER_JWT_KEY);\n  return url;\n};\n\n/**\n * Removes the __clerk_db_jwt JWT from the URL hash, as well as\n * the legacy __dev_session JWT from the URL searchParams\n * We no longer need to use this value, however, we should remove it from the URL\n * Existing v4 apps will write the JWT to the hash and the search params in order to ensure\n * backwards compatibility with older v4 apps.\n * The only use case where this is needed now is when a user upgrades to clerk@5 locally\n * without changing the component's version on their dashboard.\n * In this scenario, the AP@4 -> localhost@5 redirect will still have the JWT in the hash,\n * in which case we need to remove it.\n */\nconst removeLegacyDevBrowserJwt = (_url: URL) => {\n  const DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\n  const DEV_BROWSER_JWT_LEGACY_KEY = '__dev_session';\n  const url = new URL(_url);\n  url.searchParams.delete(DEV_BROWSER_JWT_LEGACY_KEY);\n  url.hash = decodeURI(url.hash).replace(DEV_BROWSER_JWT_MARKER_REGEXP, '');\n  if (url.href.endsWith('#')) {\n    url.hash = '';\n  }\n  return url;\n};\n","export const AUTH_HEADER = {\n  PRODUCTION: 'Authorization',\n  DEVELOPMENT: 'Clerk-Db-Jwt',\n};\n\nexport const CLIENT_JWT_KEY = '__client';\nexport const CLIENT_UAT_KEY = '__clerk_uat';\nexport const DEFAULT_LOCAL_HOST_PERMISSION = 'http://localhost';\nexport const STORAGE_KEY_CLIENT_JWT = '__clerk_client_jwt';\n","import { buildErrorThrower } from '@clerk/shared/error';\n\nexport type HostPermissionHintOpts = {\n  hostHint: string;\n};\n\nexport const errorLogger = (err: Error) => console.error(err, err.stack);\nexport const errorThrower = buildErrorThrower({ packageName: '@clerk/chrome-extension' });\n\nexport const missingManifestKeyError = (key: string) => `Missing \\`${key}\\` entry in manifest.json`;\n\nexport function assertPublishableKey(publishableKey: unknown): asserts publishableKey {\n  if (!publishableKey) {\n    errorThrower.throwMissingPublishableKeyError();\n  }\n}\n","import browser from 'webextension-polyfill';\n\nexport type FormattedUrl = `http${string}`;\n\nexport type GetClientCookieParams = {\n  name: string;\n  url: string;\n  callback: (changeInfo: ChangeInfo) => Promise<void>;\n  onListenerCallback?: () => void;\n};\n\nexport type ChangeInfo = {\n  cookie: browser.Cookies.Cookie;\n  cause: browser.Cookies.OnChangedCause;\n  removed: boolean;\n};\n\nfunction ensureFormattedUrl(url: string): FormattedUrl {\n  return url.startsWith('http') ? (url as FormattedUrl) : `https://${url}`;\n}\n\nexport async function getClientCookie({ url, name }: GetClientCookieParams) {\n  return await browser.cookies.get({ name, url: ensureFormattedUrl(url) });\n}\n\nexport function createClientCookieListener({ url, name, callback }: GetClientCookieParams) {\n  const domain = new URL(url).hostname;\n  const cookieDomain = domain.startsWith('www.') ? domain.slice(4) : domain;\n\n  const listener = (changeInfo: ChangeInfo) => {\n    if (changeInfo.cookie.domain === cookieDomain && changeInfo.cookie.name === name) {\n      void callback(changeInfo);\n    }\n  };\n\n  return {\n    add: () => browser.cookies.onChanged.addListener(listener),\n    has: () => browser.cookies.onChanged.hasListener(listener),\n    remove: () => browser.cookies.onChanged.removeListener(listener),\n  };\n}\n","import { CLIENT_UAT_KEY, STORAGE_KEY_CLIENT_JWT } from '../constants';\nimport type { ChangeInfo, GetClientCookieParams } from './cookies';\nimport { createClientCookieListener, getClientCookie } from './cookies';\nimport { errorLogger } from './errors';\nimport type { StorageCache } from './storage';\n\nexport type JWTHandlerParams = { frontendApi: string } & (\n  | {\n      sync?: false;\n    }\n  | ({ sync: true } & GetClientCookieParams)\n);\n\nexport type JWTHandler = ReturnType<typeof JWTHandler>;\n\nfunction shouldSync(sync: boolean | undefined, _params: unknown): _params is GetClientCookieParams {\n  return Boolean(sync);\n}\n\nexport function JWTHandler(store: StorageCache, params: JWTHandlerParams) {\n  const { sync, frontendApi, ...cookieParams } = params;\n\n  const CACHE_KEY = store.createKey(frontendApi, STORAGE_KEY_CLIENT_JWT, 'v2');\n\n  /**\n   * Sets the JWT value to the active\n   * @param value: JWT generally from the cookie or authorization header\n   */\n  const set = async (value: string): Promise<void> => {\n    return await store.set(CACHE_KEY, value).catch(errorLogger);\n  };\n\n  /**\n   * Remove the JWT value\n   */\n  const remove = async (): Promise<void> => {\n    return await store.remove(CACHE_KEY).catch(errorLogger);\n  };\n\n  /**\n   * Gets the JWT value to the active store.\n   * If not set, attempt to get it from the synced session and save for later use.\n   */\n  const get = async () => {\n    if (shouldSync(sync, cookieParams)) {\n      // Get client cookie from browser\n      const syncedJWT = await getClientCookie(cookieParams).catch(errorLogger);\n\n      if (syncedJWT) {\n        // Set client cookie in StorageCache\n        await set(syncedJWT.value);\n        return syncedJWT.value;\n      }\n    }\n\n    // Get current JWT from StorageCache\n    return await store.get<string>(CACHE_KEY);\n  };\n\n  const listener = () => {\n    if (!shouldSync(sync, cookieParams)) {\n      return;\n    }\n\n    const { onListenerCallback, ...restCookieParams } = cookieParams;\n\n    return createClientCookieListener({\n      ...restCookieParams,\n      callback: async (changeInfo: ChangeInfo) => {\n        const existingJWT = await get();\n\n        if (existingJWT === changeInfo.cookie.value) {\n          const syncedUAT = await getClientCookie({ ...restCookieParams, name: CLIENT_UAT_KEY }).catch(errorLogger);\n\n          if (!syncedUAT || syncedUAT?.value === '0') {\n            onListenerCallback?.();\n          }\n\n          return;\n        }\n\n        await set(changeInfo.cookie.value);\n        onListenerCallback?.();\n      },\n    });\n  };\n\n  return { get, listener, set, remove };\n}\n","import type { SetRequired } from 'type-fest';\nimport type { Manifest } from 'webextension-polyfill';\n\nimport type { ClerkClientExtensionFeatures } from '../../types';\nimport { errorThrower, missingManifestKeyError } from './errors';\n\nexport type ValidatedManifest = SetRequired<Manifest.WebExtensionManifest, 'permissions' | 'host_permissions'>;\nexport type ManifestKeys = keyof Manifest.WebExtensionManifest;\n\nfunction validateRootManifestKey(manifest: Manifest.WebExtensionManifest, key: ManifestKeys): void {\n  if (!manifest[key]) {\n    errorThrower.throw(missingManifestKeyError(key));\n  }\n}\n\nfunction validateManifestPermission(manifest: Manifest.WebExtensionManifest, key: Manifest.Permission): void {\n  if (!manifest.permissions?.includes(key)) {\n    errorThrower.throw(missingManifestKeyError(`permissions.${key}`));\n  }\n}\n\nfunction hasAdditionalFeatures(features: ClerkClientExtensionFeatures): boolean {\n  return Boolean(features) && Object.keys(features).length > 0;\n}\n\nexport function validateManifest(\n  manifest: Manifest.WebExtensionManifest,\n  features: ClerkClientExtensionFeatures,\n): asserts manifest is ValidatedManifest {\n  validateRootManifestKey(manifest, 'permissions');\n  validateManifestPermission(manifest, 'storage');\n\n  // If no additional features are provided, we can return success early\n  if (!hasAdditionalFeatures(features)) {\n    return;\n  }\n\n  if (features.background) {\n    validateRootManifestKey(manifest, 'background');\n  }\n\n  if (features.sync) {\n    validateManifestPermission(manifest, 'cookies');\n    validateRootManifestKey(manifest, 'host_permissions');\n  }\n}\n","import type { Clerk } from '@clerk/clerk-js';\n\nimport { AUTH_HEADER } from '../constants';\nimport type { JWTHandler } from './jwt-handler';\n\ntype Handler = Parameters<Clerk['__unstable__onBeforeRequest']>[0];\ntype Req = Parameters<Handler>[0];\n\n/** Append the JWT to the FAPI request */\nexport function requestHandler(jwtHandler: JWTHandler, { isProd }: { isProd: boolean }) {\n  const handler: Handler = async requestInit => {\n    requestInit.credentials = 'omit';\n\n    const currentJWT = await jwtHandler.get();\n\n    if (!currentJWT) {\n      return;\n    }\n\n    if (isProd) {\n      prodHandler(requestInit, currentJWT);\n    } else {\n      devHandler(requestInit, currentJWT);\n    }\n  };\n\n  return handler;\n}\n\n/** Append the JWT to the FAPI request, per development instances */\nfunction devHandler(requestInit: Req, jwt: string) {\n  requestInit.url?.searchParams.append('__clerk_db_jwt', jwt);\n}\n\n/** Append the JWT to the FAPI request, per production instances */\nfunction prodHandler(requestInit: Req, jwt: string) {\n  requestInit.url?.searchParams.append('_is_native', '1');\n  (requestInit.headers as Headers).set(AUTH_HEADER.PRODUCTION, `Bearer ${jwt}`);\n}\n","import type { Clerk } from '@clerk/clerk-js';\n\nimport { AUTH_HEADER } from '../constants';\nimport type { JWTHandler } from './jwt-handler';\n\ntype Handler = Parameters<Clerk['__unstable__onAfterResponse']>[0];\ntype Res = Parameters<Handler>[1];\n\n/** Retrieve the JWT to the FAPI response */\nexport function responseHandler(jwtHandler: JWTHandler, { isProd }: { isProd: boolean }) {\n  const handler: Handler = async (_, response) => {\n    if (isProd) {\n      await prodHandler(response, jwtHandler);\n    } else {\n      await devHandler(response, jwtHandler);\n    }\n  };\n  return handler;\n}\n\n/** Retrieve the JWT to the FAPI response, per development instances */\nasync function devHandler(response: Res, jwtHandler: JWTHandler) {\n  const header = response?.headers.get(AUTH_HEADER.DEVELOPMENT);\n\n  if (header) {\n    await jwtHandler.set(header);\n  } else {\n    await jwtHandler.remove();\n  }\n}\n\n/** Retrieve the JWT to the FAPI response, per production instances */\nasync function prodHandler(response: Res, jwtHandler: JWTHandler) {\n  const header = response?.headers.get(AUTH_HEADER.PRODUCTION);\n\n  if (header?.startsWith('Bearer')) {\n    const jwt = header.split(' ')[1] || undefined;\n\n    if (jwt) {\n      await jwtHandler.set(jwt);\n    } else {\n      await jwtHandler.remove();\n    }\n  } else if (header) {\n    await jwtHandler.set(header);\n  }\n}\n","import browser from 'webextension-polyfill';\n\ntype StorageCacheOptions = {\n  storageArea?: 'local' | 'sync';\n};\n\nexport type StorageCache = {\n  createKey: (...keys: string[]) => string;\n  get: <T = any>(key: string) => Promise<T>;\n  remove: (key: string) => Promise<void>;\n  set: (key: string, value: string) => Promise<void>;\n};\n\nconst createKey: StorageCache['createKey'] = (...keys: string[]) => keys.filter(Boolean).join('|');\n\n// Use browser.storage (local or sync) to persist Clerk client JWT.\n// More information at https://developer.chrome.com/docs/extensions/reference/storage\nconst createBrowserStorageCache = (opts: StorageCacheOptions = {}): StorageCache => {\n  const __storageArea = opts.storageArea || 'local';\n\n  return {\n    createKey,\n    get: (key: string) => browser.storage[__storageArea].get(key).then(result => result[key] || undefined),\n    remove: (key: string) => browser.storage[__storageArea].remove(key),\n    set: (key: string, value: string) => browser.storage[__storageArea].set({ [key]: value }),\n  };\n};\n\nconst createMemoryStorageCache = (): StorageCache => {\n  const cache: Map<string, any> = new Map();\n\n  return {\n    createKey,\n    get: (key: string) => Promise.resolve(cache.get(key)),\n    remove: (key: string) => {\n      cache.delete(key);\n      return Promise.resolve();\n    },\n    set: (key: string, value: string) => {\n      cache.set(key, value);\n      return Promise.resolve();\n    },\n  };\n};\n\nexport const BrowserStorageCache = createBrowserStorageCache();\nexport const MemoryStorageCache = createMemoryStorageCache();\n","import { Clerk } from '@clerk/clerk-js/no-rhc';\nimport { DEV_BROWSER_JWT_KEY } from '@clerk/shared/devBrowser';\nimport { parsePublishableKey } from '@clerk/shared/keys';\nimport browser from 'webextension-polyfill';\n\nimport { SCOPE, type Scope } from '../types';\nimport { CLIENT_JWT_KEY, DEFAULT_LOCAL_HOST_PERMISSION } from './constants';\nimport { assertPublishableKey } from './utils/errors';\nimport type { JWTHandlerParams } from './utils/jwt-handler';\nimport { JWTHandler } from './utils/jwt-handler';\nimport { validateManifest } from './utils/manifest';\nimport { requestHandler } from './utils/request-handler';\nimport { responseHandler } from './utils/response-handler';\nimport { BrowserStorageCache, type StorageCache } from './utils/storage';\n\nexport let clerk: Clerk;\n\nClerk.sdkMetadata = {\n  name: PACKAGE_NAME,\n  version: PACKAGE_VERSION,\n};\n\nexport type CreateClerkClientOptions = {\n  __experimental_syncHostListener?: boolean;\n  publishableKey: string;\n  scope?: Scope;\n  storageCache?: StorageCache;\n  syncHost?: string;\n};\n\nexport async function createClerkClient({\n  __experimental_syncHostListener = false,\n  publishableKey,\n  scope,\n  storageCache = BrowserStorageCache,\n  syncHost,\n}: CreateClerkClientOptions): Promise<Clerk> {\n  if (scope === SCOPE.BACKGROUND) {\n    Clerk.mountComponentRenderer = undefined;\n  }\n\n  // Don't cache background scripts as it can result in out-of-sync client information.\n  if (clerk && scope !== SCOPE.BACKGROUND) {\n    return clerk;\n  }\n\n  // Sync is enabled if a `syncHost` is provided\n  const sync = Boolean(syncHost);\n\n  // Parse publishableKey and assert it's present/valid, throw if not\n  const key = parsePublishableKey(publishableKey);\n  assertPublishableKey(key);\n\n  const isProd = key.instanceType === 'production';\n  const manifest = browser.runtime.getManifest();\n\n  // Will throw if manifest is invalid\n  validateManifest(manifest, {\n    background: scope === SCOPE.BACKGROUND,\n    sync,\n  });\n\n  // Set up JWT handler and attempt to get JWT from storage on initialization\n  const url = syncHost ? syncHost : DEFAULT_LOCAL_HOST_PERMISSION;\n\n  // Create Clerk instance\n  clerk = new Clerk(publishableKey);\n\n  // @ts-expect-error - TODO: sync is evaluating to true vs boolean\n  const jwtOptions: JWTHandlerParams = {\n    frontendApi: key.frontendApi,\n    name: isProd ? CLIENT_JWT_KEY : DEV_BROWSER_JWT_KEY,\n    url,\n    sync: sync,\n  };\n\n  if (jwtOptions.sync && __experimental_syncHostListener) {\n    jwtOptions.onListenerCallback = () => {\n      if (clerk.user) {\n        clerk.user.reload();\n      } else {\n        window.location.reload();\n      }\n    };\n  }\n\n  const jwt = JWTHandler(storageCache, jwtOptions);\n\n  // Add listener to sync host cookies if enabled\n  if (jwtOptions.sync && __experimental_syncHostListener) {\n    const listener = jwt.listener();\n    listener?.add();\n  }\n\n  clerk.__unstable__onAfterResponse(responseHandler(jwt, { isProd }));\n  clerk.__unstable__onBeforeRequest(requestHandler(jwt, { isProd }));\n\n  return clerk;\n}\n"]}